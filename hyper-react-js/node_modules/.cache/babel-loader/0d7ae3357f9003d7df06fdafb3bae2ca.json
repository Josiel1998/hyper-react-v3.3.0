{"ast":null,"code":"var _jsxFileName = \"/Users/josieldelgadillo/GitHub_M1/GitHub/hyper-react-v3.3.0/hyper-react-js/src/pages/uikit/Notifications.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Row, Col, Card, Toast, ToastContainer, Form, Button } from 'react-bootstrap'; // components\n\nimport PageTitle from '../../components/PageTitle'; // images\n\nimport logo from '../../assets/images/logo_sm_dark.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst DefaultToasts = () => {\n  _s();\n\n  const [show, setShow] = useState(true);\n  const [showTranslucent, setShowTranslucent] = useState(true);\n  const [showPlacement, setShowPlacement] = useState(true);\n  const [stacked, setStacked] = useState([{\n    time: 'just now',\n    desc: 'See? Just like this.'\n  }, {\n    time: '2 seconds ago',\n    desc: 'Heads up, toasts will stack automatically'\n  }]);\n  /*\n   * handle close\n   */\n\n  const handleClose = index => {\n    const list = [...stacked];\n    list.splice(index, 1);\n    setStacked(list);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"header-title\",\n        children: \"Bootstrap Toasts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-muted font-14\",\n        children: \"Push notifications to your visitors with a toast, a lightweight and easily customizable alert message.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: 6,\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"mb-2\",\n            children: \"Basic\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-muted font-14\",\n            children: \"Toasts are as flexible as you need and have very little required markup. At a minimum, we require a single element to contain your \\u201Ctoasted\\u201D content and strongly encourage a dismiss button.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-3\",\n            children: /*#__PURE__*/_jsxDEV(Toast, {\n              onClose: () => setShow(false),\n              show: show,\n              autohide: true,\n              children: [/*#__PURE__*/_jsxDEV(Toast.Header, {\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: logo,\n                  alt: \"brand-logo\",\n                  height: \"12\",\n                  className: \"me-1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 56,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                  className: \"me-auto\",\n                  children: \"Hyper\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 57,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                  className: \"ms-5\",\n                  children: \"11 mins ago\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Toast.Body, {\n                children: \"Hello, world! This is a toast message.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 6,\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"mb-2\",\n            children: \"Translucent\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-muted font-14\",\n            children: \"Toasts are slightly translucent, too, so they blend over whatever they might appear over. For browsers that support the backdrop-filter CSS property, we\\u2019ll also attempt to blur the elements under a toast.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-3 bg-light\",\n            children: /*#__PURE__*/_jsxDEV(Toast, {\n              onClose: () => setShowTranslucent(false),\n              show: showTranslucent,\n              delay: 8000,\n              autohide: true,\n              children: [/*#__PURE__*/_jsxDEV(Toast.Header, {\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: logo,\n                  alt: \"brand-logo\",\n                  height: \"12\",\n                  className: \"me-1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                  className: \"me-auto\",\n                  children: \"Hyper\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                  className: \"ms-5\",\n                  children: \"11 mins ago\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Toast.Body, {\n                children: \"Hello, world! This is a toast message.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: 6,\n          className: \"mt-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"mb-2\",\n            children: \"Stacking\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-muted font-14\",\n            children: \"When you have multiple toasts, we default to vertiaclly stacking them in a readable manner.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-3\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              \"aria-live\": \"polite\",\n              \"aria-atomic\": \"true\",\n              style: {\n                position: 'relative',\n                minHeight: '200px'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"toast-container\",\n                style: {\n                  position: 'absolute',\n                  top: 0,\n                  right: 0\n                },\n                children: stacked.map((item, index) => {\n                  return /*#__PURE__*/_jsxDEV(Toast, {\n                    onClose: () => handleClose(index),\n                    delay: 5000,\n                    autohide: true,\n                    children: [/*#__PURE__*/_jsxDEV(Toast.Header, {\n                      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                        src: logo,\n                        alt: \"brand-logo\",\n                        height: \"12\",\n                        className: \"me-1\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 107,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                        className: \"me-auto\",\n                        children: \"Hyper\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 108,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                        className: \"ms-5\",\n                        children: item.time\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 109,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 106,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(Toast.Body, {\n                      children: item.desc\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 111,\n                      columnNumber: 49\n                    }, this)]\n                  }, index, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 105,\n                    columnNumber: 45\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 6,\n          className: \"mt-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"mb-2\",\n            children: \"Placement\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-muted font-14\",\n            children: [\"Place toasts with custom CSS as you need them. The top right is often used for notifications, as is the top middle. If you\\u2019re only ever going to show one toast at a time, put the positioning styles right on the \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \".toast\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 69\n            }, this), \".\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-3\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              \"aria-live\": \"polite\",\n              \"aria-atomic\": \"true\",\n              className: \"d-flex justify-content-center align-items-center\",\n              style: {\n                minHeight: '200px'\n              },\n              children: /*#__PURE__*/_jsxDEV(Toast, {\n                onClose: () => setShowPlacement(false),\n                show: showPlacement,\n                delay: 6000,\n                autohide: true,\n                children: [/*#__PURE__*/_jsxDEV(Toast.Header, {\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    src: logo,\n                    alt: \"brand-logo\",\n                    height: \"12\",\n                    className: \"me-1\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 140,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                    className: \"me-auto\",\n                    children: \"Hyper\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 141,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                    className: \"ms-5\",\n                    children: \"1 mins ago\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 142,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 139,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Toast.Body, {\n                  children: \"Heads up, toasts will stack automatically\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 144,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DefaultToasts, \"qLelb1NPVk/Qbz6SyCwTg7ePFTc=\");\n\n_c = DefaultToasts;\n\nconst CustomToast = () => {\n  _s2();\n\n  const [showCustom1, setShowCustom1] = useState(true);\n  const [showCustom2, setShowCustom2] = useState(true);\n  const [showCustom3, setShowCustom3] = useState(true);\n  const [showCustom4, setShowCustom4] = useState(true);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"header-title\",\n          children: \"Custom content\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-muted\",\n          children: \"Alternatively, you can also add additional controls and components to toasts.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Toast, {\n          className: \"d-flex align-items-center mt-4\",\n          show: showCustom1,\n          onClose: () => setShowCustom1(false),\n          delay: 3000,\n          autohide: true,\n          children: [/*#__PURE__*/_jsxDEV(Toast.Body, {\n            children: \"Hello, world! This is a toast message.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"\",\n            onClick: () => setShowCustom1(false),\n            className: \"btn-close ms-auto me-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Toast, {\n          className: \"d-flex align-items-center text-white bg-primary border-0 mt-4\",\n          show: showCustom2,\n          onClose: () => setShowCustom2(false),\n          delay: 6000,\n          autohide: true,\n          children: [/*#__PURE__*/_jsxDEV(Toast.Body, {\n            children: \"Hello, world! This is a toast message.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"\",\n            onClick: () => setShowCustom2(false),\n            className: \"btn-close btn-close-white ms-auto me-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Toast, {\n          className: \"mt-4\",\n          show: showCustom3,\n          onClose: () => setShowCustom3(false),\n          delay: 8000,\n          autohide: true,\n          children: /*#__PURE__*/_jsxDEV(Toast.Body, {\n            children: [\"Hello, world! This is a toast message.\", /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-2 pt-2 border-top\",\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                variant: \"primary\",\n                className: \"btn-sm me-1\",\n                children: \"Take action\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"secondary\",\n                onClick: () => setShowCustom3(false),\n                className: \"btn-sm\",\n                children: \"Close\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Toast, {\n          className: \"text-white bg-primary mt-4\",\n          show: showCustom4,\n          onClose: () => setShowCustom4(false),\n          delay: 10000,\n          autohide: true,\n          children: /*#__PURE__*/_jsxDEV(Toast.Body, {\n            children: [\"Hello, world! This is a toast message.\", /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-2 pt-2 border-top\",\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                variant: \"light\",\n                className: \"btn-sm me-1\",\n                children: \"Take action\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"secondary\",\n                onClick: () => setShowCustom4(false),\n                className: \"btn-sm\",\n                children: \"Close\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s2(CustomToast, \"fvdRoGlAfSIvAH92jGTnokLbSFM=\");\n\n_c2 = CustomToast;\n\nconst PlacementToast = () => {\n  _s3();\n\n  const [position, setPosition] = useState('top-start');\n  const positions = ['top-start', 'top-center', 'top-end', 'middle-start', 'middle-center', 'middle-end', 'bottom-start', 'bottom-center', 'bottom-end'];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"header-title\",\n          children: \"Placement\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-muted font-14\",\n          children: [\"Place toasts with custom CSS as you need them. The top right is often used for notifications, as is the top middle. If you\\u2019re only ever going to show one toast at a time, put the positioning styles right on the\", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: \".toast\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 25\n          }, this), \".\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"selectToastPlacement\",\n            children: \"Toast placement\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n            id: \"selectToastPlacement\",\n            className: \"mt-2\",\n            onChange: e => setPosition(e.currentTarget.value),\n            children: (positions || []).map(p => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: p,\n              children: p\n            }, p, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          \"aria-live\": \"polite\",\n          \"aria-atomic\": \"true\",\n          className: \"bg-light position-relative\",\n          style: {\n            minHeight: '294px'\n          },\n          children: /*#__PURE__*/_jsxDEV(ToastContainer, {\n            className: \"p-3\",\n            position: position,\n            children: /*#__PURE__*/_jsxDEV(Toast, {\n              children: [/*#__PURE__*/_jsxDEV(Toast.Header, {\n                closeButton: false,\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: logo,\n                  className: \"me-1\",\n                  alt: \"\",\n                  height: \"12\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 284,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                  className: \"me-auto\",\n                  children: \"UBold\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 285,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                  children: \"11 mins ago\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 286,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Toast.Body, {\n                children: \"Hello, world! This is a toast message.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s3(PlacementToast, \"1QtNG1J4CeOyHfEHtPyspgPxkgY=\");\n\n_c3 = PlacementToast;\n\nconst Notifications = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(PageTitle, {\n      breadCrumbItems: [{\n        label: 'Base UI',\n        path: '/ui/toasts'\n      }, {\n        label: 'Notifications',\n        path: '/ui/notifications',\n        active: true\n      }],\n      title: 'Notifications'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(DefaultToasts, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        lg: 6,\n        children: /*#__PURE__*/_jsxDEV(CustomToast, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        lg: 6,\n        children: /*#__PURE__*/_jsxDEV(PlacementToast, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_c4 = Notifications;\nexport default Notifications;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"DefaultToasts\");\n$RefreshReg$(_c2, \"CustomToast\");\n$RefreshReg$(_c3, \"PlacementToast\");\n$RefreshReg$(_c4, \"Notifications\");","map":{"version":3,"names":["React","useState","Row","Col","Card","Toast","ToastContainer","Form","Button","PageTitle","logo","DefaultToasts","show","setShow","showTranslucent","setShowTranslucent","showPlacement","setShowPlacement","stacked","setStacked","time","desc","handleClose","index","list","splice","position","minHeight","top","right","map","item","CustomToast","showCustom1","setShowCustom1","showCustom2","setShowCustom2","showCustom3","setShowCustom3","showCustom4","setShowCustom4","PlacementToast","setPosition","positions","e","currentTarget","value","p","Notifications","label","path","active"],"sources":["/Users/josieldelgadillo/GitHub_M1/GitHub/hyper-react-v3.3.0/hyper-react-js/src/pages/uikit/Notifications.js"],"sourcesContent":["// @flow\nimport React, { useState } from 'react';\nimport { Row, Col, Card, Toast, ToastContainer, Form, Button } from 'react-bootstrap';\n\n// components\nimport PageTitle from '../../components/PageTitle';\n\n// images\nimport logo from '../../assets/images/logo_sm_dark.png';\n\nconst DefaultToasts = () => {\n    const [show, setShow] = useState(true);\n    const [showTranslucent, setShowTranslucent] = useState(true);\n    const [showPlacement, setShowPlacement] = useState(true);\n\n    const [stacked, setStacked] = useState([\n        {\n            time: 'just now',\n            desc: 'See? Just like this.',\n        },\n        {\n            time: '2 seconds ago',\n            desc: 'Heads up, toasts will stack automatically',\n        },\n    ]);\n\n    /*\n     * handle close\n     */\n    const handleClose = (index) => {\n        const list = [...stacked];\n        list.splice(index, 1);\n        setStacked(list);\n    };\n\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">Bootstrap Toasts</h4>\n                <p className=\"text-muted font-14\">\n                    Push notifications to your visitors with a toast, a lightweight and easily customizable alert\n                    message.\n                </p>\n\n                <Row>\n                    <Col md={6}>\n                        <h5 className=\"mb-2\">Basic</h5>\n                        <p className=\"text-muted font-14\">\n                            Toasts are as flexible as you need and have very little required markup. At a minimum, we\n                            require a single element to contain your “toasted” content and strongly encourage a dismiss\n                            button.\n                        </p>\n                        <div className=\"p-3\">\n                            <Toast onClose={() => setShow(false)} show={show} autohide>\n                                <Toast.Header>\n                                    <img src={logo} alt=\"brand-logo\" height=\"12\" className=\"me-1\" />\n                                    <strong className=\"me-auto\">Hyper</strong>\n                                    <small className=\"ms-5\">11 mins ago</small>\n                                </Toast.Header>\n                                <Toast.Body>Hello, world! This is a toast message.</Toast.Body>\n                            </Toast>\n                        </div>\n                    </Col>\n\n                    <Col md={6}>\n                        <h5 className=\"mb-2\">Translucent</h5>\n                        <p className=\"text-muted font-14\">\n                            Toasts are slightly translucent, too, so they blend over whatever they might appear over.\n                            For browsers that support the backdrop-filter CSS property, we’ll also attempt to blur the\n                            elements under a toast.\n                        </p>\n\n                        <div className=\"p-3 bg-light\">\n                            <Toast\n                                onClose={() => setShowTranslucent(false)}\n                                show={showTranslucent}\n                                delay={8000}\n                                autohide>\n                                <Toast.Header>\n                                    <img src={logo} alt=\"brand-logo\" height=\"12\" className=\"me-1\" />\n                                    <strong className=\"me-auto\">Hyper</strong>\n                                    <small className=\"ms-5\">11 mins ago</small>\n                                </Toast.Header>\n                                <Toast.Body>Hello, world! This is a toast message.</Toast.Body>\n                            </Toast>\n                        </div>\n                    </Col>\n                </Row>\n\n                {/* stacked */}\n                <Row>\n                    <Col md={6} className=\"mt-4\">\n                        <h5 className=\"mb-2\">Stacking</h5>\n                        <p className=\"text-muted font-14\">\n                            When you have multiple toasts, we default to vertiaclly stacking them in a readable manner.\n                        </p>\n                        <div className=\"p-3\">\n                            <div\n                                aria-live=\"polite\"\n                                aria-atomic=\"true\"\n                                style={{ position: 'relative', minHeight: '200px' }}>\n                                <div className=\"toast-container\" style={{ position: 'absolute', top: 0, right: 0 }}>\n                                    {stacked.map((item, index) => {\n                                        return (\n                                            <Toast key={index} onClose={() => handleClose(index)} delay={5000} autohide>\n                                                <Toast.Header>\n                                                    <img src={logo} alt=\"brand-logo\" height=\"12\" className=\"me-1\" />\n                                                    <strong className=\"me-auto\">Hyper</strong>\n                                                    <small className=\"ms-5\">{item.time}</small>\n                                                </Toast.Header>\n                                                <Toast.Body>{item.desc}</Toast.Body>\n                                            </Toast>\n                                        );\n                                    })}\n                                </div>\n                            </div>\n                        </div>\n                    </Col>\n\n                    <Col md={6} className=\"mt-4\">\n                        <h5 className=\"mb-2\">Placement</h5>\n                        <p className=\"text-muted font-14\">\n                            Place toasts with custom CSS as you need them. The top right is often used for\n                            notifications, as is the top middle. If you’re only ever going to show one toast at a time,\n                            put the positioning styles right on the <code>.toast</code>.\n                        </p>\n\n                        <div className=\"p-3\">\n                            <div\n                                aria-live=\"polite\"\n                                aria-atomic=\"true\"\n                                className=\"d-flex justify-content-center align-items-center\"\n                                style={{ minHeight: '200px' }}>\n                                <Toast\n                                    onClose={() => setShowPlacement(false)}\n                                    show={showPlacement}\n                                    delay={6000}\n                                    autohide>\n                                    <Toast.Header>\n                                        <img src={logo} alt=\"brand-logo\" height=\"12\" className=\"me-1\" />\n                                        <strong className=\"me-auto\">Hyper</strong>\n                                        <small className=\"ms-5\">1 mins ago</small>\n                                    </Toast.Header>\n                                    <Toast.Body>Heads up, toasts will stack automatically</Toast.Body>\n                                </Toast>\n                            </div>\n                        </div>\n                    </Col>\n                </Row>\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst CustomToast = () => {\n    const [showCustom1, setShowCustom1] = useState(true);\n    const [showCustom2, setShowCustom2] = useState(true);\n    const [showCustom3, setShowCustom3] = useState(true);\n    const [showCustom4, setShowCustom4] = useState(true);\n\n    return (\n        <>\n            <Card>\n                <Card.Body>\n                    <h4 className=\"header-title\">Custom content</h4>\n                    <p className=\"text-muted\">\n                        Alternatively, you can also add additional controls and components to toasts.\n                    </p>\n                    <Toast\n                        className=\"d-flex align-items-center mt-4\"\n                        show={showCustom1}\n                        onClose={() => setShowCustom1(false)}\n                        delay={3000}\n                        autohide>\n                        <Toast.Body>Hello, world! This is a toast message.</Toast.Body>\n                        <Button\n                            variant=\"\"\n                            onClick={() => setShowCustom1(false)}\n                            className=\"btn-close ms-auto me-2\"></Button>\n                    </Toast>\n                    <Toast\n                        className=\"d-flex align-items-center text-white bg-primary border-0 mt-4\"\n                        show={showCustom2}\n                        onClose={() => setShowCustom2(false)}\n                        delay={6000}\n                        autohide>\n                        <Toast.Body>Hello, world! This is a toast message.</Toast.Body>\n\n                        <Button\n                            variant=\"\"\n                            onClick={() => setShowCustom2(false)}\n                            className=\"btn-close btn-close-white ms-auto me-2\"></Button>\n                    </Toast>\n                    <Toast\n                        className=\"mt-4\"\n                        show={showCustom3}\n                        onClose={() => setShowCustom3(false)}\n                        delay={8000}\n                        autohide>\n                        <Toast.Body>\n                            Hello, world! This is a toast message.\n                            <div className=\"mt-2 pt-2 border-top\">\n                                <Button variant=\"primary\" className=\"btn-sm me-1\">\n                                    Take action\n                                </Button>\n                                <Button variant=\"secondary\" onClick={() => setShowCustom3(false)} className=\"btn-sm\">\n                                    Close\n                                </Button>\n                            </div>\n                        </Toast.Body>\n                    </Toast>\n                    <Toast\n                        className=\"text-white bg-primary mt-4\"\n                        show={showCustom4}\n                        onClose={() => setShowCustom4(false)}\n                        delay={10000}\n                        autohide>\n                        <Toast.Body>\n                            Hello, world! This is a toast message.\n                            <div className=\"mt-2 pt-2 border-top\">\n                                <Button variant=\"light\" className=\"btn-sm me-1\">\n                                    Take action\n                                </Button>\n                                <Button variant=\"secondary\" onClick={() => setShowCustom4(false)} className=\"btn-sm\">\n                                    Close\n                                </Button>\n                            </div>\n                        </Toast.Body>\n                    </Toast>\n                </Card.Body>\n            </Card>\n        </>\n    );\n};\n\nconst PlacementToast = () => {\n    const [position, setPosition] = useState('top-start');\n\n    const positions = [\n        'top-start',\n        'top-center',\n        'top-end',\n        'middle-start',\n        'middle-center',\n        'middle-end',\n        'bottom-start',\n        'bottom-center',\n        'bottom-end',\n    ];\n\n    return (\n        <>\n            <Card>\n                <Card.Body>\n                    <h4 className=\"header-title\">Placement</h4>\n                    <p className=\"text-muted font-14\">\n                        Place toasts with custom CSS as you need them. The top right is often used for notifications, as\n                        is the top middle. If you’re only ever going to show one toast at a time, put the positioning\n                        styles right on the\n                        <code>.toast</code>.\n                    </p>\n                    <div className=\"mb-3\">\n                        <label htmlFor=\"selectToastPlacement\">Toast placement</label>\n                        <Form.Select\n                            id=\"selectToastPlacement\"\n                            className=\"mt-2\"\n                            onChange={(e: any) => setPosition(e.currentTarget.value)}>\n                            {(positions || []).map((p) => (\n                                <option key={p} value={p}>\n                                    {p}\n                                </option>\n                            ))}\n                        </Form.Select>\n                    </div>\n\n                    <div\n                        aria-live=\"polite\"\n                        aria-atomic=\"true\"\n                        className=\"bg-light position-relative\"\n                        style={{ minHeight: '294px' }}>\n                        <ToastContainer className=\"p-3\" position={position}>\n                            <Toast>\n                                <Toast.Header closeButton={false}>\n                                    <img src={logo} className=\"me-1\" alt=\"\" height=\"12\" />\n                                    <strong className=\"me-auto\">UBold</strong>\n                                    <small>11 mins ago</small>\n                                </Toast.Header>\n                                <Toast.Body>Hello, world! This is a toast message.</Toast.Body>\n                            </Toast>\n                        </ToastContainer>\n                    </div>\n                </Card.Body>\n            </Card>\n        </>\n    );\n};\n\nconst Notifications = (): React$Element<React$FragmentType> => {\n    return (\n        <>\n            <PageTitle\n                breadCrumbItems={[\n                    { label: 'Base UI', path: '/ui/toasts' },\n                    { label: 'Notifications', path: '/ui/notifications', active: true },\n                ]}\n                title={'Notifications'}\n            />\n\n            {/* toast */}\n            <Row>\n                <Col>\n                    <DefaultToasts />\n                </Col>\n            </Row>\n\n            <Row>\n                <Col lg={6}>\n                    <CustomToast />\n                </Col>\n                <Col lg={6}>\n                    <PlacementToast />\n                </Col>\n            </Row>\n        </>\n    );\n};\n\nexport default Notifications;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}