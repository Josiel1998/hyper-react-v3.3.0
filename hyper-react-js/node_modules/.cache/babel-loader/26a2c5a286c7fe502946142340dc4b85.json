{"ast":null,"code":"import { AuthActionTypes } from './constants';\nimport { APICore } from '../../helpers/api/apiCore';\nconst api = new APICore();\nconst INIT_STATE = {\n  user: api.getLoggedInUser(),\n  loading: false\n};\n\nconst Auth = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INIT_STATE;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  console.log(action);\n\n  switch (action.type) {\n    case AuthActionTypes.API_RESPONSE_SUCCESS:\n      switch (action.payload.actionType) {\n        case AuthActionTypes.LOGIN_USER:\n          {\n            return { ...state,\n              user: action.payload.data,\n              userLoggedIn: true,\n              loading: false\n            };\n          }\n\n        case AuthActionTypes.SIGNUP_USER:\n          {\n            return { ...state,\n              loading: false,\n              userSignUp: true\n            };\n          }\n\n        case AuthActionTypes.LOGOUT_USER:\n          {\n            return { ...state,\n              user: null,\n              loading: false,\n              userLogout: true\n            };\n          }\n\n        case AuthActionTypes.FORGOT_PASSWORD:\n          {\n            return { ...state,\n              resetPasswordSuccess: action.payload.data,\n              loading: false,\n              passwordReset: true\n            };\n          }\n\n        case AuthActionTypes.FORGOT_PASSWORD_CHANGE:\n          {\n            return { ...state,\n              loading: false,\n              passwordChange: true\n            };\n          }\n\n        default:\n          return { ...state\n          };\n      }\n\n    case AuthActionTypes.API_RESPONSE_ERROR:\n      switch (action.payload.actionType) {\n        case AuthActionTypes.LOGIN_USER:\n          {\n            return { ...state,\n              error: action.payload.error,\n              userLoggedIn: false,\n              loading: false\n            };\n          }\n\n        case AuthActionTypes.SIGNUP_USER:\n          {\n            return { ...state,\n              registerError: action.payload.error,\n              userSignUp: false,\n              loading: false\n            };\n          }\n\n        case AuthActionTypes.FORGOT_PASSWORD:\n          {\n            return { ...state,\n              error: action.payload.error,\n              loading: false,\n              passwordReset: false\n            };\n          }\n\n        case AuthActionTypes.FORGOT_PASSWORD_CHANGE:\n          {\n            return { ...state,\n              error: action.payload.error,\n              loading: false,\n              passwordChange: false\n            };\n          }\n\n        default:\n          return { ...state\n          };\n      }\n\n    case AuthActionTypes.LOGIN_USER:\n      return { ...state,\n        loading: true,\n        userLoggedIn: false\n      };\n\n    case AuthActionTypes.LOGOUT_USER:\n      return { ...state,\n        loading: true,\n        userLogout: false\n      };\n\n    case AuthActionTypes.SIGNUP_USER:\n      return { ...state,\n        loading: true,\n        userSignUp: false\n      };\n\n    case AuthActionTypes.FORGOT_PASSWORD:\n      return { ...state,\n        loading: true,\n        passwordReset: false\n      };\n\n    case AuthActionTypes.FORGOT_PASSWORD_CHANGE:\n      return { ...state,\n        loading: true,\n        passwordChange: false\n      };\n\n    case AuthActionTypes.RESET:\n      return { ...state,\n        loading: false,\n        error: false,\n        userSignUp: false,\n        userLoggedIn: false,\n        passwordReset: false,\n        passwordChange: false,\n        resetPasswordSuccess: null\n      };\n\n    default:\n      return { ...state\n      };\n  }\n};\n\n_c = Auth;\nexport default Auth;\n\nvar _c;\n\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"names":["AuthActionTypes","APICore","api","INIT_STATE","user","getLoggedInUser","loading","Auth","state","action","console","log","type","API_RESPONSE_SUCCESS","payload","actionType","LOGIN_USER","data","userLoggedIn","SIGNUP_USER","userSignUp","LOGOUT_USER","userLogout","FORGOT_PASSWORD","resetPasswordSuccess","passwordReset","FORGOT_PASSWORD_CHANGE","passwordChange","API_RESPONSE_ERROR","error","registerError","RESET"],"sources":["/Users/josieldelgadillo/GitHub_M1/GitHub/hyper-react-v3.3.0/hyper-react-js/src/redux/auth/reducers.js"],"sourcesContent":["// @flow\nimport { AuthActionTypes } from './constants';\n\nimport { APICore } from '../../helpers/api/apiCore';\n\nconst api = new APICore();\n\nconst INIT_STATE = {\n    user: api.getLoggedInUser(),\n    loading: false,\n};\n\ntype AuthAction = {\n    type: string,\n    payload: { actionType?: string, data?: any, error?: string },\n};\ntype State = { user?: {} | null, loading?: boolean, +value?: boolean };\n\nconst Auth = (state: State = INIT_STATE, action: AuthAction): any => {\n    console.log(action);\n    switch (action.type) {\n        case AuthActionTypes.API_RESPONSE_SUCCESS:\n            switch (action.payload.actionType) {\n                case AuthActionTypes.LOGIN_USER: {\n                    return {\n                        ...state,\n                        user: action.payload.data,\n                        userLoggedIn: true,\n                        loading: false,\n                    };\n                }\n                case AuthActionTypes.SIGNUP_USER: {\n                    return {\n                        ...state,\n                        loading: false,\n                        userSignUp: true,\n                    };\n                }\n                case AuthActionTypes.LOGOUT_USER: {\n                    return {\n                        ...state,\n                        user: null,\n                        loading: false,\n                        userLogout: true,\n                    };\n                }\n                case AuthActionTypes.FORGOT_PASSWORD: {\n                    return {\n                        ...state,\n                        resetPasswordSuccess: action.payload.data,\n                        loading: false,\n                        passwordReset: true,\n                    };\n                }\n                case AuthActionTypes.FORGOT_PASSWORD_CHANGE: {\n                    return {\n                        ...state,\n                        loading: false,\n                        passwordChange: true,\n                    };\n                }\n                default:\n                    return { ...state };\n            }\n\n        case AuthActionTypes.API_RESPONSE_ERROR:\n            switch (action.payload.actionType) {\n                case AuthActionTypes.LOGIN_USER: {\n                    return {\n                        ...state,\n                        error: action.payload.error,\n                        userLoggedIn: false,\n                        loading: false,\n                    };\n                }\n                case AuthActionTypes.SIGNUP_USER: {\n                    return {\n                        ...state,\n                        registerError: action.payload.error,\n                        userSignUp: false,\n                        loading: false,\n                    };\n                }\n                case AuthActionTypes.FORGOT_PASSWORD: {\n                    return {\n                        ...state,\n                        error: action.payload.error,\n                        loading: false,\n                        passwordReset: false,\n                    };\n                }\n                case AuthActionTypes.FORGOT_PASSWORD_CHANGE: {\n                    return {\n                        ...state,\n                        error: action.payload.error,\n                        loading: false,\n                        passwordChange: false,\n                    };\n                }\n                default:\n                    return { ...state };\n            }\n\n        case AuthActionTypes.LOGIN_USER:\n            return { ...state, loading: true, userLoggedIn: false };\n        case AuthActionTypes.LOGOUT_USER:\n            return { ...state, loading: true, userLogout: false };\n        case AuthActionTypes.SIGNUP_USER:\n            return { ...state, loading: true, userSignUp: false };\n        case AuthActionTypes.FORGOT_PASSWORD:\n            return { ...state, loading: true, passwordReset: false };\n        case AuthActionTypes.FORGOT_PASSWORD_CHANGE:\n            return { ...state, loading: true, passwordChange: false };\n        case AuthActionTypes.RESET:\n            return {\n                ...state,\n                loading: false,\n                error: false,\n                userSignUp: false,\n                userLoggedIn: false,\n                passwordReset: false,\n                passwordChange: false,\n                resetPasswordSuccess: null,\n            };\n        default:\n            return { ...state };\n    }\n};\n\nexport default Auth;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}