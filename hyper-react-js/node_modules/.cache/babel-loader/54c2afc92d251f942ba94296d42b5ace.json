{"ast":null,"code":"import React from'react';import Chart from'react-apexcharts';import{Card}from'react-bootstrap';// StackedAreaChart\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var StackedAreaChart=function StackedAreaChart(){// default options\nvar apexAreaChart2Opts={chart:{height:422,type:'area',stacked:true,events:{selection:function selection(chart,e){console.log(new Date(e.xaxis.min));}}},colors:['#727cf5','#0acf97','#e3eaef'],dataLabels:{enabled:false},stroke:{width:2,curve:'smooth'},fill:{gradient:{enabled:true,opacityFrom:0.6,opacityTo:0.8}},legend:{position:'top',horizontalAlign:'left'},xaxis:{type:'datetime'},grid:{row:{colors:['transparent','transparent'],// takes an array which will be repeated on columns\nopacity:0.2},borderColor:'#f1f3fa'},responsive:[{breakpoint:600,options:{chart:{toolbar:{show:false}}}}]};/*\n     * generate day wise time series\n     */var generateDayWiseTimeSeries=function generateDayWiseTimeSeries(baseval,count,yrange){var i=0;var series=[];while(i<count){var x=baseval;var y=Math.floor(Math.random()*(yrange.max-yrange.min+1))+yrange.min;series.push([x,y]);baseval+=86400000;i++;}return series;};// chart data\nvar apexAreaChart2Data=[{name:'South',data:generateDayWiseTimeSeries(new Date('11 Feb 2017').getTime(),20,{min:10,max:60})},{name:'North',data:generateDayWiseTimeSeries(new Date('11 Feb 2017').getTime(),20,{min:10,max:20})},{name:'Central',data:generateDayWiseTimeSeries(new Date('11 Feb 2017').getTime(),20,{min:10,max:15})}];return/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(Card.Body,{children:[/*#__PURE__*/_jsx(\"h4\",{className:\"header-title mb-3\",children:\"Stacked Area\"}),/*#__PURE__*/_jsx(Chart,{options:apexAreaChart2Opts,series:apexAreaChart2Data,type:\"area\",className:\"apex-charts\"})]})});};export default StackedAreaChart;","map":{"version":3,"names":["React","Chart","Card","StackedAreaChart","apexAreaChart2Opts","chart","height","type","stacked","events","selection","e","console","log","Date","xaxis","min","colors","dataLabels","enabled","stroke","width","curve","fill","gradient","opacityFrom","opacityTo","legend","position","horizontalAlign","grid","row","opacity","borderColor","responsive","breakpoint","options","toolbar","show","generateDayWiseTimeSeries","baseval","count","yrange","i","series","x","y","Math","floor","random","max","push","apexAreaChart2Data","name","data","getTime"],"sources":["/Users/josieldelgadillo/GitHub_M1/GitHub/hyper-react-v3.3.0/hyper-react-js/src/pages/charts/Apex/StackedAreaChart.js"],"sourcesContent":["// @flow\nimport React from 'react';\nimport Chart from 'react-apexcharts';\nimport { Card } from 'react-bootstrap';\n\n// StackedAreaChart\nconst StackedAreaChart = (): React$Element<any> => {\n    // default options\n    const apexAreaChart2Opts = {\n        chart: {\n            height: 422,\n            type: 'area',\n            stacked: true,\n            events: {\n                selection: function (chart, e) {\n                    console.log(new Date(e.xaxis.min));\n                },\n            },\n        },\n        colors: ['#727cf5', '#0acf97', '#e3eaef'],\n        dataLabels: {\n            enabled: false,\n        },\n        stroke: {\n            width: 2,\n            curve: 'smooth',\n        },\n        fill: {\n            gradient: {\n                enabled: true,\n                opacityFrom: 0.6,\n                opacityTo: 0.8,\n            },\n        },\n        legend: {\n            position: 'top',\n            horizontalAlign: 'left',\n        },\n        xaxis: {\n            type: 'datetime',\n        },\n        grid: {\n            row: {\n                colors: ['transparent', 'transparent'], // takes an array which will be repeated on columns\n                opacity: 0.2,\n            },\n            borderColor: '#f1f3fa',\n        },\n        responsive: [\n            {\n                breakpoint: 600,\n                options: {\n                    chart: {\n                        toolbar: {\n                            show: false,\n                        },\n                    },\n                },\n            },\n        ],\n    };\n\n    /*\n     * generate day wise time series\n     */\n    const generateDayWiseTimeSeries = (baseval, count, yrange) => {\n        var i = 0;\n        var series = [];\n        while (i < count) {\n            var x = baseval;\n            var y = Math.floor(Math.random() * (yrange.max - yrange.min + 1)) + yrange.min;\n\n            series.push([x, y]);\n            baseval += 86400000;\n            i++;\n        }\n        return series;\n    };\n\n    // chart data\n    const apexAreaChart2Data = [\n        {\n            name: 'South',\n            data: generateDayWiseTimeSeries(new Date('11 Feb 2017').getTime(), 20, {\n                min: 10,\n                max: 60,\n            }),\n        },\n        {\n            name: 'North',\n            data: generateDayWiseTimeSeries(new Date('11 Feb 2017').getTime(), 20, {\n                min: 10,\n                max: 20,\n            }),\n        },\n\n        {\n            name: 'Central',\n            data: generateDayWiseTimeSeries(new Date('11 Feb 2017').getTime(), 20, {\n                min: 10,\n                max: 15,\n            }),\n        },\n    ];\n\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title mb-3\">Stacked Area</h4>\n                <Chart options={apexAreaChart2Opts} series={apexAreaChart2Data} type=\"area\" className=\"apex-charts\" />\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default StackedAreaChart;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}