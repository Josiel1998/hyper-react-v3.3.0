{"ast":null,"code":"var _jsxFileName = \"/Users/josieldelgadillo/GitHub_M1/GitHub/hyper-react-v3.3.0/hyper-react-js/src/pages/charts/Apex/StackedAreaChart.js\";\nimport React from 'react';\nimport Chart from 'react-apexcharts';\nimport { Card } from 'react-bootstrap'; // StackedAreaChart\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst StackedAreaChart = () => {\n  // default options\n  const apexAreaChart2Opts = {\n    chart: {\n      height: 422,\n      type: 'area',\n      stacked: true,\n      events: {\n        selection: function (chart, e) {\n          console.log(new Date(e.xaxis.min));\n        }\n      }\n    },\n    colors: ['#727cf5', '#0acf97', '#e3eaef'],\n    dataLabels: {\n      enabled: false\n    },\n    stroke: {\n      width: 2,\n      curve: 'smooth'\n    },\n    fill: {\n      gradient: {\n        enabled: true,\n        opacityFrom: 0.6,\n        opacityTo: 0.8\n      }\n    },\n    legend: {\n      position: 'top',\n      horizontalAlign: 'left'\n    },\n    xaxis: {\n      type: 'datetime'\n    },\n    grid: {\n      row: {\n        colors: ['transparent', 'transparent'],\n        // takes an array which will be repeated on columns\n        opacity: 0.2\n      },\n      borderColor: '#f1f3fa'\n    },\n    responsive: [{\n      breakpoint: 600,\n      options: {\n        chart: {\n          toolbar: {\n            show: false\n          }\n        }\n      }\n    }]\n  };\n  /*\n   * generate day wise time series\n   */\n\n  const generateDayWiseTimeSeries = (baseval, count, yrange) => {\n    var i = 0;\n    var series = [];\n\n    while (i < count) {\n      var x = baseval;\n      var y = Math.floor(Math.random() * (yrange.max - yrange.min + 1)) + yrange.min;\n      series.push([x, y]);\n      baseval += 86400000;\n      i++;\n    }\n\n    return series;\n  }; // chart data\n\n\n  const apexAreaChart2Data = [{\n    name: 'South',\n    data: generateDayWiseTimeSeries(new Date('11 Feb 2017').getTime(), 20, {\n      min: 10,\n      max: 60\n    })\n  }, {\n    name: 'North',\n    data: generateDayWiseTimeSeries(new Date('11 Feb 2017').getTime(), 20, {\n      min: 10,\n      max: 20\n    })\n  }, {\n    name: 'Central',\n    data: generateDayWiseTimeSeries(new Date('11 Feb 2017').getTime(), 20, {\n      min: 10,\n      max: 15\n    })\n  }];\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"header-title mb-3\",\n        children: \"Stacked Area\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Chart, {\n        options: apexAreaChart2Opts,\n        series: apexAreaChart2Data,\n        type: \"area\",\n        className: \"apex-charts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 9\n  }, this);\n};\n\n_c = StackedAreaChart;\nexport default StackedAreaChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"StackedAreaChart\");","map":{"version":3,"names":["React","Chart","Card","StackedAreaChart","apexAreaChart2Opts","chart","height","type","stacked","events","selection","e","console","log","Date","xaxis","min","colors","dataLabels","enabled","stroke","width","curve","fill","gradient","opacityFrom","opacityTo","legend","position","horizontalAlign","grid","row","opacity","borderColor","responsive","breakpoint","options","toolbar","show","generateDayWiseTimeSeries","baseval","count","yrange","i","series","x","y","Math","floor","random","max","push","apexAreaChart2Data","name","data","getTime"],"sources":["/Users/josieldelgadillo/GitHub_M1/GitHub/hyper-react-v3.3.0/hyper-react-js/src/pages/charts/Apex/StackedAreaChart.js"],"sourcesContent":["// @flow\nimport React from 'react';\nimport Chart from 'react-apexcharts';\nimport { Card } from 'react-bootstrap';\n\n// StackedAreaChart\nconst StackedAreaChart = (): React$Element<any> => {\n    // default options\n    const apexAreaChart2Opts = {\n        chart: {\n            height: 422,\n            type: 'area',\n            stacked: true,\n            events: {\n                selection: function (chart, e) {\n                    console.log(new Date(e.xaxis.min));\n                },\n            },\n        },\n        colors: ['#727cf5', '#0acf97', '#e3eaef'],\n        dataLabels: {\n            enabled: false,\n        },\n        stroke: {\n            width: 2,\n            curve: 'smooth',\n        },\n        fill: {\n            gradient: {\n                enabled: true,\n                opacityFrom: 0.6,\n                opacityTo: 0.8,\n            },\n        },\n        legend: {\n            position: 'top',\n            horizontalAlign: 'left',\n        },\n        xaxis: {\n            type: 'datetime',\n        },\n        grid: {\n            row: {\n                colors: ['transparent', 'transparent'], // takes an array which will be repeated on columns\n                opacity: 0.2,\n            },\n            borderColor: '#f1f3fa',\n        },\n        responsive: [\n            {\n                breakpoint: 600,\n                options: {\n                    chart: {\n                        toolbar: {\n                            show: false,\n                        },\n                    },\n                },\n            },\n        ],\n    };\n\n    /*\n     * generate day wise time series\n     */\n    const generateDayWiseTimeSeries = (baseval, count, yrange) => {\n        var i = 0;\n        var series = [];\n        while (i < count) {\n            var x = baseval;\n            var y = Math.floor(Math.random() * (yrange.max - yrange.min + 1)) + yrange.min;\n\n            series.push([x, y]);\n            baseval += 86400000;\n            i++;\n        }\n        return series;\n    };\n\n    // chart data\n    const apexAreaChart2Data = [\n        {\n            name: 'South',\n            data: generateDayWiseTimeSeries(new Date('11 Feb 2017').getTime(), 20, {\n                min: 10,\n                max: 60,\n            }),\n        },\n        {\n            name: 'North',\n            data: generateDayWiseTimeSeries(new Date('11 Feb 2017').getTime(), 20, {\n                min: 10,\n                max: 20,\n            }),\n        },\n\n        {\n            name: 'Central',\n            data: generateDayWiseTimeSeries(new Date('11 Feb 2017').getTime(), 20, {\n                min: 10,\n                max: 15,\n            }),\n        },\n    ];\n\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title mb-3\">Stacked Area</h4>\n                <Chart options={apexAreaChart2Opts} series={apexAreaChart2Data} type=\"area\" className=\"apex-charts\" />\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default StackedAreaChart;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}