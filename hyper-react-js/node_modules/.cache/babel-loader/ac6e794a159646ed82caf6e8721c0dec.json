{"ast":null,"code":"var _jsxFileName = \"/Users/josieldelgadillo/GitHub_M1/GitHub/hyper-react-v3.3.0/hyper-react-js/src/routes/PrivateRoute.js\",\n    _s = $RefreshSig$();\n\nimport { Navigate, useLocation } from 'react-router-dom';\nimport { APICore } from '../helpers/api/apiCore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n/**\n * Private Route forces the authorization before the route can be accessed\n * @param {*} param0\n * @returns\n */\nconst PrivateRoute = _ref => {\n  _s();\n\n  let {\n    component: RouteComponent,\n    roles,\n    ...rest\n  } = _ref;\n  let location = useLocation();\n  const api = new APICore();\n  const loggedInUser = api.getLoggedInUser();\n  /**\n   * not logged in so redirect to login page with the return url\n   */\n\n  if (api.isUserAuthenticated() === false) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: '/account/login',\n      state: {\n        from: location\n      },\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 16\n    }, this);\n  } // check if route is restricted by role\n\n\n  if (roles && roles.indexOf(loggedInUser.role) === -1) {\n    // role not authorised so redirect to home page\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: {\n        pathname: '/'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(RouteComponent, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 12\n  }, this);\n};\n\n_s(PrivateRoute, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n\n_c = PrivateRoute;\nexport default PrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["Navigate","useLocation","APICore","PrivateRoute","component","RouteComponent","roles","rest","location","api","loggedInUser","getLoggedInUser","isUserAuthenticated","from","indexOf","role","pathname"],"sources":["/Users/josieldelgadillo/GitHub_M1/GitHub/hyper-react-v3.3.0/hyper-react-js/src/routes/PrivateRoute.js"],"sourcesContent":["import { Navigate, useLocation } from 'react-router-dom';\nimport { APICore } from '../helpers/api/apiCore';\n\ntype PrivateRouteProps = {\n    component: React.ComponentType,\n    roles?: string,\n};\n\n/**\n * Private Route forces the authorization before the route can be accessed\n * @param {*} param0\n * @returns\n */\nconst PrivateRoute = ({ component: RouteComponent, roles, ...rest }: PrivateRouteProps) => {\n    let location = useLocation();\n    const api = new APICore();\n    const loggedInUser = api.getLoggedInUser();\n\n    /**\n     * not logged in so redirect to login page with the return url\n     */\n    if (api.isUserAuthenticated() === false) {\n        return <Navigate to={'/account/login'} state={{ from: location }} replace />;\n    }\n\n    // check if route is restricted by role\n    if (roles && roles.indexOf(loggedInUser.role) === -1) {\n        // role not authorised so redirect to home page\n        return <Navigate to={{ pathname: '/' }} />;\n    }\n\n    return <RouteComponent />;\n};\n\nexport default PrivateRoute;\n"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,WAAnB,QAAsC,kBAAtC;AACA,SAASC,OAAT,QAAwB,wBAAxB;;;AAOA;AACA;AACA;AACA;AACA;AACA,MAAMC,YAAY,GAAG,QAAsE;EAAA;;EAAA,IAArE;IAAEC,SAAS,EAAEC,cAAb;IAA6BC,KAA7B;IAAoC,GAAGC;EAAvC,CAAqE;EACvF,IAAIC,QAAQ,GAAGP,WAAW,EAA1B;EACA,MAAMQ,GAAG,GAAG,IAAIP,OAAJ,EAAZ;EACA,MAAMQ,YAAY,GAAGD,GAAG,CAACE,eAAJ,EAArB;EAEA;AACJ;AACA;;EACI,IAAIF,GAAG,CAACG,mBAAJ,OAA8B,KAAlC,EAAyC;IACrC,oBAAO,QAAC,QAAD;MAAU,EAAE,EAAE,gBAAd;MAAgC,KAAK,EAAE;QAAEC,IAAI,EAAEL;MAAR,CAAvC;MAA2D,OAAO;IAAlE;MAAA;MAAA;MAAA;IAAA,QAAP;EACH,CAVsF,CAYvF;;;EACA,IAAIF,KAAK,IAAIA,KAAK,CAACQ,OAAN,CAAcJ,YAAY,CAACK,IAA3B,MAAqC,CAAC,CAAnD,EAAsD;IAClD;IACA,oBAAO,QAAC,QAAD;MAAU,EAAE,EAAE;QAAEC,QAAQ,EAAE;MAAZ;IAAd;MAAA;MAAA;MAAA;IAAA,QAAP;EACH;;EAED,oBAAO,QAAC,cAAD;IAAA;IAAA;IAAA;EAAA,QAAP;AACH,CAnBD;;GAAMb,Y;UACaF,W;;;KADbE,Y;AAqBN,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}