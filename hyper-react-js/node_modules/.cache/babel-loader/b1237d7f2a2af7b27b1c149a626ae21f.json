{"ast":null,"code":"import jwtDecode from 'jwt-decode';\nimport axios from 'axios';\nimport config from '../../config'; // content type\n\naxios.defaults.headers.post['Content-Type'] = 'application/json';\naxios.defaults.baseURL = config.API_URL; // intercepting to capture errors\n\naxios.interceptors.response.use(response => {\n  return response;\n}, error => {\n  // Any status codes that falls outside the range of 2xx cause this function to trigger\n  let message;\n\n  if (error && error.response && error.response.status === 404) {// window.location.href = '/not-found';\n  } else if (error && error.response && error.response.status === 403) {\n    window.location.href = '/access-denied';\n  } else {\n    switch (error.response.status) {\n      case 401:\n        message = 'Invalid credentials';\n        break;\n\n      case 403:\n        message = 'Access Forbidden';\n        break;\n\n      case 404:\n        message = 'Sorry! the data you are looking for could not be found';\n        break;\n\n      default:\n        {\n          message = error.response && error.response.data ? error.response.data['message'] : error.message || error;\n        }\n    }\n\n    return Promise.reject(message);\n  }\n});\nconst AUTH_SESSION_KEY = 'hyper_user';\n/**\n * Sets the default authorization\n * @param {*} token\n */\n\nconst setAuthorization = token => {\n  if (token) axios.defaults.headers.common['Authorization'] = 'JWT ' + token;else delete axios.defaults.headers.common['Authorization'];\n};\n\nconst getUserFromSession = () => {\n  const user = sessionStorage.getItem(AUTH_SESSION_KEY);\n  return user ? typeof user == 'object' ? user : JSON.parse(user) : null;\n};\n\nclass APICore {\n  constructor() {\n    this.get = (url, params) => {\n      let response;\n\n      if (params) {\n        var queryString = params ? Object.keys(params).map(key => key + '=' + params[key]).join('&') : '';\n        response = axios.get(`${url}?${queryString}`, params);\n      } else {\n        response = axios.get(`${url}`, params);\n      }\n\n      return response;\n    };\n\n    this.getFile = (url, params) => {\n      let response;\n\n      if (params) {\n        var queryString = params ? Object.keys(params).map(key => key + '=' + params[key]).join('&') : '';\n        response = axios.get(`${url}?${queryString}`, {\n          responseType: 'blob'\n        });\n      } else {\n        response = axios.get(`${url}`, {\n          responseType: 'blob'\n        });\n      }\n\n      return response;\n    };\n\n    this.getMultiple = (urls, params) => {\n      const reqs = [];\n      let queryString = '';\n\n      if (params) {\n        queryString = params ? Object.keys(params).map(key => key + '=' + params[key]).join('&') : '';\n      }\n\n      for (const url of urls) {\n        reqs.push(axios.get(`${url}?${queryString}`));\n      }\n\n      return axios.all(reqs);\n    };\n\n    this.create = (url, data) => {\n      return axios.post(url, data);\n    };\n\n    this.updatePatch = (url, data) => {\n      return axios.patch(url, data);\n    };\n\n    this.update = (url, data) => {\n      return axios.put(url, data);\n    };\n\n    this.delete = url => {\n      return axios.delete(url);\n    };\n\n    this.createWithFile = (url, data) => {\n      const formData = new FormData();\n\n      for (const k in data) {\n        formData.append(k, data[k]);\n      }\n\n      const config = {\n        headers: { ...axios.defaults.headers,\n          'content-type': 'multipart/form-data'\n        }\n      };\n      return axios.post(url, formData, config);\n    };\n\n    this.updateWithFile = (url, data) => {\n      const formData = new FormData();\n\n      for (const k in data) {\n        formData.append(k, data[k]);\n      }\n\n      const config = {\n        headers: { ...axios.defaults.headers,\n          'content-type': 'multipart/form-data'\n        }\n      };\n      return axios.patch(url, formData, config);\n    };\n\n    this.isUserAuthenticated = () => {\n      const user = this.getLoggedInUser();\n\n      if (!user || user && !user.token) {\n        return false;\n      }\n\n      const decoded = jwtDecode(user.token);\n      const currentTime = Date.now() / 1000;\n\n      if (decoded.exp < currentTime) {\n        console.warn('access token expired');\n        return false;\n      } else {\n        return true;\n      }\n    };\n\n    this.setLoggedInUser = session => {\n      if (session) sessionStorage.setItem(AUTH_SESSION_KEY, JSON.stringify(session));else {\n        sessionStorage.removeItem(AUTH_SESSION_KEY);\n      }\n    };\n\n    this.getLoggedInUser = () => {\n      return getUserFromSession();\n    };\n\n    this.setUserInSession = modifiedUser => {\n      let userInfo = sessionStorage.getItem(AUTH_SESSION_KEY);\n\n      if (userInfo) {\n        const {\n          token,\n          user\n        } = JSON.parse(userInfo);\n        this.setLoggedInUser({\n          token,\n          ...user,\n          ...modifiedUser\n        });\n      }\n    };\n  }\n\n}\n/*\nCheck if token available in session\n*/\n\n\nlet user = getUserFromSession();\n\nif (user) {\n  const {\n    token\n  } = user;\n\n  if (token) {\n    setAuthorization(token);\n  }\n}\n\nexport { APICore, setAuthorization };","map":{"version":3,"names":["jwtDecode","axios","config","defaults","headers","post","baseURL","API_URL","interceptors","response","use","error","message","status","window","location","href","data","Promise","reject","AUTH_SESSION_KEY","setAuthorization","token","common","getUserFromSession","user","sessionStorage","getItem","JSON","parse","APICore","get","url","params","queryString","Object","keys","map","key","join","getFile","responseType","getMultiple","urls","reqs","push","all","create","updatePatch","patch","update","put","delete","createWithFile","formData","FormData","k","append","updateWithFile","isUserAuthenticated","getLoggedInUser","decoded","currentTime","Date","now","exp","console","warn","setLoggedInUser","session","setItem","stringify","removeItem","setUserInSession","modifiedUser","userInfo"],"sources":["/Users/josieldelgadillo/GitHub_M1/GitHub/hyper-react-v3.3.0/hyper-react-js/src/helpers/api/apiCore.js"],"sourcesContent":["import jwtDecode from 'jwt-decode';\nimport axios from 'axios';\n\nimport config from '../../config';\n\n// content type\naxios.defaults.headers.post['Content-Type'] = 'application/json';\naxios.defaults.baseURL = config.API_URL;\n\n// intercepting to capture errors\naxios.interceptors.response.use(\n    (response) => {\n        return response;\n    },\n    (error) => {\n        // Any status codes that falls outside the range of 2xx cause this function to trigger\n        let message;\n\n        if (error && error.response && error.response.status === 404) {\n            // window.location.href = '/not-found';\n        } else if (error && error.response && error.response.status === 403) {\n            window.location.href = '/access-denied';\n        } else {\n            switch (error.response.status) {\n                case 401:\n                    message = 'Invalid credentials';\n                    break;\n                case 403:\n                    message = 'Access Forbidden';\n                    break;\n                case 404:\n                    message = 'Sorry! the data you are looking for could not be found';\n                    break;\n                default: {\n                    message =\n                        error.response && error.response.data ? error.response.data['message'] : error.message || error;\n                }\n            }\n            return Promise.reject(message);\n        }\n    }\n);\n\nconst AUTH_SESSION_KEY = 'hyper_user';\n\n/**\n * Sets the default authorization\n * @param {*} token\n */\nconst setAuthorization = (token) => {\n    if (token) axios.defaults.headers.common['Authorization'] = 'JWT ' + token;\n    else delete axios.defaults.headers.common['Authorization'];\n};\n\nconst getUserFromSession = () => {\n    const user = sessionStorage.getItem(AUTH_SESSION_KEY);\n    return user ? (typeof user == 'object' ? user : JSON.parse(user)) : null;\n};\nclass APICore {\n    /**\n     * Fetches data from given url\n     */\n    get = (url, params) => {\n        let response;\n        if (params) {\n            var queryString = params\n                ? Object.keys(params)\n                      .map((key) => key + '=' + params[key])\n                      .join('&')\n                : '';\n            response = axios.get(`${url}?${queryString}`, params);\n        } else {\n            response = axios.get(`${url}`, params);\n        }\n        return response;\n    };\n\n    getFile = (url, params) => {\n        let response;\n        if (params) {\n            var queryString = params\n                ? Object.keys(params)\n                      .map((key) => key + '=' + params[key])\n                      .join('&')\n                : '';\n            response = axios.get(`${url}?${queryString}`, { responseType: 'blob' });\n        } else {\n            response = axios.get(`${url}`, { responseType: 'blob' });\n        }\n        return response;\n    };\n\n    getMultiple = (urls, params) => {\n        const reqs = [];\n        let queryString = '';\n        if (params) {\n            queryString = params\n                ? Object.keys(params)\n                      .map((key) => key + '=' + params[key])\n                      .join('&')\n                : '';\n        }\n\n        for (const url of urls) {\n            reqs.push(axios.get(`${url}?${queryString}`));\n        }\n        return axios.all(reqs);\n    };\n\n    /**\n     * post given data to url\n     */\n    create = (url, data) => {\n        return axios.post(url, data);\n    };\n\n    /**\n     * Updates patch data\n     */\n    updatePatch = (url, data) => {\n        return axios.patch(url, data);\n    };\n\n    /**\n     * Updates data\n     */\n    update = (url, data) => {\n        return axios.put(url, data);\n    };\n\n    /**\n     * Deletes data\n     */\n    delete = (url) => {\n        return axios.delete(url);\n    };\n\n    /**\n     * post given data to url with file\n     */\n    createWithFile = (url, data) => {\n        const formData = new FormData();\n        for (const k in data) {\n            formData.append(k, data[k]);\n        }\n\n        const config = {\n            headers: {\n                ...axios.defaults.headers,\n                'content-type': 'multipart/form-data',\n            },\n        };\n        return axios.post(url, formData, config);\n    };\n\n    /**\n     * post given data to url with file\n     */\n    updateWithFile = (url, data) => {\n        const formData = new FormData();\n        for (const k in data) {\n            formData.append(k, data[k]);\n        }\n\n        const config = {\n            headers: {\n                ...axios.defaults.headers,\n                'content-type': 'multipart/form-data',\n            },\n        };\n        return axios.patch(url, formData, config);\n    };\n\n    isUserAuthenticated = () => {\n        const user = this.getLoggedInUser();\n        if (!user || (user && !user.token)) {\n            return false;\n        }\n        const decoded = jwtDecode(user.token);\n        const currentTime = Date.now() / 1000;\n        if (decoded.exp < currentTime) {\n            console.warn('access token expired');\n            return false;\n        } else {\n            return true;\n        }\n    };\n\n    setLoggedInUser = (session) => {\n        if (session) sessionStorage.setItem(AUTH_SESSION_KEY, JSON.stringify(session));\n        else {\n            sessionStorage.removeItem(AUTH_SESSION_KEY);\n        }\n    };\n\n    /**\n     * Returns the logged in user\n     */\n    getLoggedInUser = () => {\n        return getUserFromSession();\n    };\n\n    setUserInSession = (modifiedUser) => {\n        let userInfo = sessionStorage.getItem(AUTH_SESSION_KEY);\n        if (userInfo) {\n            const { token, user } = JSON.parse(userInfo);\n            this.setLoggedInUser({ token, ...user, ...modifiedUser });\n        }\n    };\n}\n\n/*\nCheck if token available in session\n*/\nlet user = getUserFromSession();\nif (user) {\n    const { token } = user;\n    if (token) {\n        setAuthorization(token);\n    }\n}\n\nexport { APICore, setAuthorization };\n"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,MAAP,MAAmB,cAAnB,C,CAEA;;AACAD,KAAK,CAACE,QAAN,CAAeC,OAAf,CAAuBC,IAAvB,CAA4B,cAA5B,IAA8C,kBAA9C;AACAJ,KAAK,CAACE,QAAN,CAAeG,OAAf,GAAyBJ,MAAM,CAACK,OAAhC,C,CAEA;;AACAN,KAAK,CAACO,YAAN,CAAmBC,QAAnB,CAA4BC,GAA5B,CACKD,QAAD,IAAc;EACV,OAAOA,QAAP;AACH,CAHL,EAIKE,KAAD,IAAW;EACP;EACA,IAAIC,OAAJ;;EAEA,IAAID,KAAK,IAAIA,KAAK,CAACF,QAAf,IAA2BE,KAAK,CAACF,QAAN,CAAeI,MAAf,KAA0B,GAAzD,EAA8D,CAC1D;EACH,CAFD,MAEO,IAAIF,KAAK,IAAIA,KAAK,CAACF,QAAf,IAA2BE,KAAK,CAACF,QAAN,CAAeI,MAAf,KAA0B,GAAzD,EAA8D;IACjEC,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,gBAAvB;EACH,CAFM,MAEA;IACH,QAAQL,KAAK,CAACF,QAAN,CAAeI,MAAvB;MACI,KAAK,GAAL;QACID,OAAO,GAAG,qBAAV;QACA;;MACJ,KAAK,GAAL;QACIA,OAAO,GAAG,kBAAV;QACA;;MACJ,KAAK,GAAL;QACIA,OAAO,GAAG,wDAAV;QACA;;MACJ;QAAS;UACLA,OAAO,GACHD,KAAK,CAACF,QAAN,IAAkBE,KAAK,CAACF,QAAN,CAAeQ,IAAjC,GAAwCN,KAAK,CAACF,QAAN,CAAeQ,IAAf,CAAoB,SAApB,CAAxC,GAAyEN,KAAK,CAACC,OAAN,IAAiBD,KAD9F;QAEH;IAbL;;IAeA,OAAOO,OAAO,CAACC,MAAR,CAAeP,OAAf,CAAP;EACH;AACJ,CA9BL;AAiCA,MAAMQ,gBAAgB,GAAG,YAAzB;AAEA;AACA;AACA;AACA;;AACA,MAAMC,gBAAgB,GAAIC,KAAD,IAAW;EAChC,IAAIA,KAAJ,EAAWrB,KAAK,CAACE,QAAN,CAAeC,OAAf,CAAuBmB,MAAvB,CAA8B,eAA9B,IAAiD,SAASD,KAA1D,CAAX,KACK,OAAOrB,KAAK,CAACE,QAAN,CAAeC,OAAf,CAAuBmB,MAAvB,CAA8B,eAA9B,CAAP;AACR,CAHD;;AAKA,MAAMC,kBAAkB,GAAG,MAAM;EAC7B,MAAMC,IAAI,GAAGC,cAAc,CAACC,OAAf,CAAuBP,gBAAvB,CAAb;EACA,OAAOK,IAAI,GAAI,OAAOA,IAAP,IAAe,QAAf,GAA0BA,IAA1B,GAAiCG,IAAI,CAACC,KAAL,CAAWJ,IAAX,CAArC,GAAyD,IAApE;AACH,CAHD;;AAIA,MAAMK,OAAN,CAAc;EAAA;IAAA,KAIVC,GAJU,GAIJ,CAACC,GAAD,EAAMC,MAAN,KAAiB;MACnB,IAAIxB,QAAJ;;MACA,IAAIwB,MAAJ,EAAY;QACR,IAAIC,WAAW,GAAGD,MAAM,GAClBE,MAAM,CAACC,IAAP,CAAYH,MAAZ,EACKI,GADL,CACUC,GAAD,IAASA,GAAG,GAAG,GAAN,GAAYL,MAAM,CAACK,GAAD,CADpC,EAEKC,IAFL,CAEU,GAFV,CADkB,GAIlB,EAJN;QAKA9B,QAAQ,GAAGR,KAAK,CAAC8B,GAAN,CAAW,GAAEC,GAAI,IAAGE,WAAY,EAAhC,EAAmCD,MAAnC,CAAX;MACH,CAPD,MAOO;QACHxB,QAAQ,GAAGR,KAAK,CAAC8B,GAAN,CAAW,GAAEC,GAAI,EAAjB,EAAoBC,MAApB,CAAX;MACH;;MACD,OAAOxB,QAAP;IACH,CAjBS;;IAAA,KAmBV+B,OAnBU,GAmBA,CAACR,GAAD,EAAMC,MAAN,KAAiB;MACvB,IAAIxB,QAAJ;;MACA,IAAIwB,MAAJ,EAAY;QACR,IAAIC,WAAW,GAAGD,MAAM,GAClBE,MAAM,CAACC,IAAP,CAAYH,MAAZ,EACKI,GADL,CACUC,GAAD,IAASA,GAAG,GAAG,GAAN,GAAYL,MAAM,CAACK,GAAD,CADpC,EAEKC,IAFL,CAEU,GAFV,CADkB,GAIlB,EAJN;QAKA9B,QAAQ,GAAGR,KAAK,CAAC8B,GAAN,CAAW,GAAEC,GAAI,IAAGE,WAAY,EAAhC,EAAmC;UAAEO,YAAY,EAAE;QAAhB,CAAnC,CAAX;MACH,CAPD,MAOO;QACHhC,QAAQ,GAAGR,KAAK,CAAC8B,GAAN,CAAW,GAAEC,GAAI,EAAjB,EAAoB;UAAES,YAAY,EAAE;QAAhB,CAApB,CAAX;MACH;;MACD,OAAOhC,QAAP;IACH,CAhCS;;IAAA,KAkCViC,WAlCU,GAkCI,CAACC,IAAD,EAAOV,MAAP,KAAkB;MAC5B,MAAMW,IAAI,GAAG,EAAb;MACA,IAAIV,WAAW,GAAG,EAAlB;;MACA,IAAID,MAAJ,EAAY;QACRC,WAAW,GAAGD,MAAM,GACdE,MAAM,CAACC,IAAP,CAAYH,MAAZ,EACKI,GADL,CACUC,GAAD,IAASA,GAAG,GAAG,GAAN,GAAYL,MAAM,CAACK,GAAD,CADpC,EAEKC,IAFL,CAEU,GAFV,CADc,GAId,EAJN;MAKH;;MAED,KAAK,MAAMP,GAAX,IAAkBW,IAAlB,EAAwB;QACpBC,IAAI,CAACC,IAAL,CAAU5C,KAAK,CAAC8B,GAAN,CAAW,GAAEC,GAAI,IAAGE,WAAY,EAAhC,CAAV;MACH;;MACD,OAAOjC,KAAK,CAAC6C,GAAN,CAAUF,IAAV,CAAP;IACH,CAjDS;;IAAA,KAsDVG,MAtDU,GAsDD,CAACf,GAAD,EAAMf,IAAN,KAAe;MACpB,OAAOhB,KAAK,CAACI,IAAN,CAAW2B,GAAX,EAAgBf,IAAhB,CAAP;IACH,CAxDS;;IAAA,KA6DV+B,WA7DU,GA6DI,CAAChB,GAAD,EAAMf,IAAN,KAAe;MACzB,OAAOhB,KAAK,CAACgD,KAAN,CAAYjB,GAAZ,EAAiBf,IAAjB,CAAP;IACH,CA/DS;;IAAA,KAoEViC,MApEU,GAoED,CAAClB,GAAD,EAAMf,IAAN,KAAe;MACpB,OAAOhB,KAAK,CAACkD,GAAN,CAAUnB,GAAV,EAAef,IAAf,CAAP;IACH,CAtES;;IAAA,KA2EVmC,MA3EU,GA2EApB,GAAD,IAAS;MACd,OAAO/B,KAAK,CAACmD,MAAN,CAAapB,GAAb,CAAP;IACH,CA7ES;;IAAA,KAkFVqB,cAlFU,GAkFO,CAACrB,GAAD,EAAMf,IAAN,KAAe;MAC5B,MAAMqC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;;MACA,KAAK,MAAMC,CAAX,IAAgBvC,IAAhB,EAAsB;QAClBqC,QAAQ,CAACG,MAAT,CAAgBD,CAAhB,EAAmBvC,IAAI,CAACuC,CAAD,CAAvB;MACH;;MAED,MAAMtD,MAAM,GAAG;QACXE,OAAO,EAAE,EACL,GAAGH,KAAK,CAACE,QAAN,CAAeC,OADb;UAEL,gBAAgB;QAFX;MADE,CAAf;MAMA,OAAOH,KAAK,CAACI,IAAN,CAAW2B,GAAX,EAAgBsB,QAAhB,EAA0BpD,MAA1B,CAAP;IACH,CA/FS;;IAAA,KAoGVwD,cApGU,GAoGO,CAAC1B,GAAD,EAAMf,IAAN,KAAe;MAC5B,MAAMqC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;;MACA,KAAK,MAAMC,CAAX,IAAgBvC,IAAhB,EAAsB;QAClBqC,QAAQ,CAACG,MAAT,CAAgBD,CAAhB,EAAmBvC,IAAI,CAACuC,CAAD,CAAvB;MACH;;MAED,MAAMtD,MAAM,GAAG;QACXE,OAAO,EAAE,EACL,GAAGH,KAAK,CAACE,QAAN,CAAeC,OADb;UAEL,gBAAgB;QAFX;MADE,CAAf;MAMA,OAAOH,KAAK,CAACgD,KAAN,CAAYjB,GAAZ,EAAiBsB,QAAjB,EAA2BpD,MAA3B,CAAP;IACH,CAjHS;;IAAA,KAmHVyD,mBAnHU,GAmHY,MAAM;MACxB,MAAMlC,IAAI,GAAG,KAAKmC,eAAL,EAAb;;MACA,IAAI,CAACnC,IAAD,IAAUA,IAAI,IAAI,CAACA,IAAI,CAACH,KAA5B,EAAoC;QAChC,OAAO,KAAP;MACH;;MACD,MAAMuC,OAAO,GAAG7D,SAAS,CAACyB,IAAI,CAACH,KAAN,CAAzB;MACA,MAAMwC,WAAW,GAAGC,IAAI,CAACC,GAAL,KAAa,IAAjC;;MACA,IAAIH,OAAO,CAACI,GAAR,GAAcH,WAAlB,EAA+B;QAC3BI,OAAO,CAACC,IAAR,CAAa,sBAAb;QACA,OAAO,KAAP;MACH,CAHD,MAGO;QACH,OAAO,IAAP;MACH;IACJ,CAhIS;;IAAA,KAkIVC,eAlIU,GAkISC,OAAD,IAAa;MAC3B,IAAIA,OAAJ,EAAa3C,cAAc,CAAC4C,OAAf,CAAuBlD,gBAAvB,EAAyCQ,IAAI,CAAC2C,SAAL,CAAeF,OAAf,CAAzC,EAAb,KACK;QACD3C,cAAc,CAAC8C,UAAf,CAA0BpD,gBAA1B;MACH;IACJ,CAvIS;;IAAA,KA4IVwC,eA5IU,GA4IQ,MAAM;MACpB,OAAOpC,kBAAkB,EAAzB;IACH,CA9IS;;IAAA,KAgJViD,gBAhJU,GAgJUC,YAAD,IAAkB;MACjC,IAAIC,QAAQ,GAAGjD,cAAc,CAACC,OAAf,CAAuBP,gBAAvB,CAAf;;MACA,IAAIuD,QAAJ,EAAc;QACV,MAAM;UAAErD,KAAF;UAASG;QAAT,IAAkBG,IAAI,CAACC,KAAL,CAAW8C,QAAX,CAAxB;QACA,KAAKP,eAAL,CAAqB;UAAE9C,KAAF;UAAS,GAAGG,IAAZ;UAAkB,GAAGiD;QAArB,CAArB;MACH;IACJ,CAtJS;EAAA;;AAAA;AAyJd;AACA;AACA;;;AACA,IAAIjD,IAAI,GAAGD,kBAAkB,EAA7B;;AACA,IAAIC,IAAJ,EAAU;EACN,MAAM;IAAEH;EAAF,IAAYG,IAAlB;;EACA,IAAIH,KAAJ,EAAW;IACPD,gBAAgB,CAACC,KAAD,CAAhB;EACH;AACJ;;AAED,SAASQ,OAAT,EAAkBT,gBAAlB"},"metadata":{},"sourceType":"module"}