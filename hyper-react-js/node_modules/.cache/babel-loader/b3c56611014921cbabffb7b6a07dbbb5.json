{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/josieldelgadillo/GitHub_M1/GitHub/hyper-react-v3.3.0/hyper-react-js/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _toConsumableArray from \"/Users/josieldelgadillo/GitHub_M1/GitHub/hyper-react-v3.3.0/hyper-react-js/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _classCallCheck from \"/Users/josieldelgadillo/GitHub_M1/GitHub/hyper-react-v3.3.0/hyper-react-js/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/josieldelgadillo/GitHub_M1/GitHub/hyper-react-v3.3.0/hyper-react-js/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport date_utils from './date_utils';\nimport { $, createSVG } from './svg_utils';\nimport Bar from './bar';\nimport Arrow from './arrow';\nimport Popup from './popup';\nimport './gantt.scss';\nvar VIEW_MODE = {\n  QUARTER_DAY: 'Quarter Day',\n  HALF_DAY: 'Half Day',\n  DAY: 'Day',\n  WEEK: 'Week',\n  MONTH: 'Month',\n  YEAR: 'Year'\n};\n\nvar Gantt = /*#__PURE__*/function () {\n  function Gantt(wrapper, tasks, options) {\n    _classCallCheck(this, Gantt);\n\n    this.setup_wrapper(wrapper);\n    this.setup_options(options);\n    this.setup_tasks(tasks); // initialize with default view mode\n\n    this.change_view_mode();\n    this.bind_events();\n  }\n\n  _createClass(Gantt, [{\n    key: \"setup_wrapper\",\n    value: function setup_wrapper(element) {\n      var svg_element, wrapper_element; // CSS Selector is passed\n\n      if (typeof element === 'string') {\n        element = document.querySelector(element);\n      } // get the SVGElement\n\n\n      if (element instanceof HTMLElement) {\n        wrapper_element = element;\n        svg_element = element.querySelector('svg');\n      } else if (element instanceof SVGElement) {\n        svg_element = element;\n      } else {\n        throw new TypeError('FrappÃ© Gantt only supports usage of a string CSS selector,' + \" HTML DOM element or SVG DOM element for the 'element' parameter\");\n      } // svg element\n\n\n      if (!svg_element) {\n        // create it\n        this.$svg = createSVG('svg', {\n          append_to: wrapper_element,\n          class: 'gantt'\n        });\n      } else {\n        this.$svg = svg_element;\n        this.$svg.classList.add('gantt');\n      } // wrapper element\n\n\n      this.$container = document.createElement('div');\n      this.$container.classList.add('gantt-container');\n      var parent_element = this.$svg.parentElement;\n      parent_element.appendChild(this.$container);\n      this.$container.appendChild(this.$svg); // popup wrapper\n\n      this.popup_wrapper = document.createElement('div');\n      this.popup_wrapper.classList.add('popup-wrapper');\n      this.$container.appendChild(this.popup_wrapper);\n    }\n  }, {\n    key: \"setup_options\",\n    value: function setup_options(options) {\n      var default_options = {\n        header_height: 50,\n        column_width: 30,\n        step: 24,\n        view_modes: _toConsumableArray(Object.values(VIEW_MODE)),\n        bar_height: 20,\n        bar_corner_radius: 3,\n        arrow_curve: 5,\n        padding: 18,\n        view_mode: 'Day',\n        date_format: 'YYYY-MM-DD',\n        popup_trigger: 'click',\n        custom_popup_html: null,\n        language: 'en'\n      };\n      this.options = Object.assign({}, default_options, options);\n    }\n  }, {\n    key: \"setup_tasks\",\n    value: function setup_tasks(tasks) {\n      // prepare tasks\n      this.tasks = tasks.map(function (task, i) {\n        // convert to Date objects\n        task._start = date_utils.parse(task.start);\n        task._end = date_utils.parse(task.end); // make task invalid if duration too large\n\n        if (date_utils.diff(task._end, task._start, 'year') > 10) {\n          task.end = null;\n        } // cache index\n\n\n        task._index = i; // invalid dates\n\n        if (!task.start && !task.end) {\n          var today = date_utils.today();\n          task._start = today;\n          task._end = date_utils.add(today, 2, 'day');\n        }\n\n        if (!task.start && task.end) {\n          task._start = date_utils.add(task._end, -2, 'day');\n        }\n\n        if (task.start && !task.end) {\n          task._end = date_utils.add(task._start, 2, 'day');\n        } // if hours is not set, assume the last day is full day\n        // e.g: 2018-09-09 becomes 2018-09-09 23:59:59\n\n\n        var task_end_values = date_utils.get_date_values(task._end);\n\n        if (task_end_values.slice(3).every(function (d) {\n          return d === 0;\n        })) {\n          task._end = date_utils.add(task._end, 24, 'hour');\n        } // invalid flag\n\n\n        if (!task.start || !task.end) {\n          task.invalid = true;\n        } // dependencies\n\n\n        if (typeof task.dependencies === 'string' || !task.dependencies) {\n          var deps = [];\n\n          if (task.dependencies) {\n            deps = task.dependencies.split(',').map(function (d) {\n              return d.trim();\n            }).filter(function (d) {\n              return d;\n            });\n          }\n\n          task.dependencies = deps;\n        } // uids\n\n\n        if (!task.id) {\n          task.id = generate_id(task);\n        }\n\n        return task;\n      });\n      this.setup_dependencies();\n    }\n  }, {\n    key: \"setup_dependencies\",\n    value: function setup_dependencies() {\n      this.dependency_map = {};\n\n      var _iterator = _createForOfIteratorHelper(this.tasks),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var t = _step.value;\n\n          var _iterator2 = _createForOfIteratorHelper(t.dependencies),\n              _step2;\n\n          try {\n            for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n              var d = _step2.value;\n              this.dependency_map[d] = this.dependency_map[d] || [];\n              this.dependency_map[d].push(t.id);\n            }\n          } catch (err) {\n            _iterator2.e(err);\n          } finally {\n            _iterator2.f();\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n  }, {\n    key: \"refresh\",\n    value: function refresh(tasks) {\n      this.setup_tasks(tasks);\n      this.change_view_mode();\n    }\n  }, {\n    key: \"change_view_mode\",\n    value: function change_view_mode() {\n      var mode = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.options.view_mode;\n      this.update_view_scale(mode);\n      this.setup_dates();\n      this.render(); // fire viewmode_change event\n\n      this.trigger_event('view_change', [mode]);\n    }\n  }, {\n    key: \"update_view_scale\",\n    value: function update_view_scale(view_mode) {\n      this.options.view_mode = view_mode;\n\n      if (view_mode === VIEW_MODE.DAY) {\n        this.options.step = 24;\n        this.options.column_width = 38;\n      } else if (view_mode === VIEW_MODE.HALF_DAY) {\n        this.options.step = 24 / 2;\n        this.options.column_width = 38;\n      } else if (view_mode === VIEW_MODE.QUARTER_DAY) {\n        this.options.step = 24 / 4;\n        this.options.column_width = 38;\n      } else if (view_mode === VIEW_MODE.WEEK) {\n        this.options.step = 24 * 7;\n        this.options.column_width = 140;\n      } else if (view_mode === VIEW_MODE.MONTH) {\n        this.options.step = 24 * 30;\n        this.options.column_width = 120;\n      } else if (view_mode === VIEW_MODE.YEAR) {\n        this.options.step = 24 * 365;\n        this.options.column_width = 120;\n      }\n    }\n  }, {\n    key: \"setup_dates\",\n    value: function setup_dates() {\n      this.setup_gantt_dates();\n      this.setup_date_values();\n    }\n  }, {\n    key: \"setup_gantt_dates\",\n    value: function setup_gantt_dates() {\n      this.gantt_start = this.gantt_end = null;\n\n      var _iterator3 = _createForOfIteratorHelper(this.tasks),\n          _step3;\n\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var task = _step3.value;\n\n          // set global start and end date\n          if (!this.gantt_start || task._start < this.gantt_start) {\n            this.gantt_start = task._start;\n          }\n\n          if (!this.gantt_end || task._end > this.gantt_end) {\n            this.gantt_end = task._end;\n          }\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n\n      this.gantt_start = date_utils.start_of(this.gantt_start, 'day');\n      this.gantt_end = date_utils.start_of(this.gantt_end, 'day'); // add date padding on both sides\n\n      if (this.view_is([VIEW_MODE.QUARTER_DAY, VIEW_MODE.HALF_DAY])) {\n        this.gantt_start = date_utils.add(this.gantt_start, -7, 'day');\n        this.gantt_end = date_utils.add(this.gantt_end, 7, 'day');\n      } else if (this.view_is(VIEW_MODE.MONTH)) {\n        this.gantt_start = date_utils.start_of(this.gantt_start, 'year');\n        this.gantt_end = date_utils.add(this.gantt_end, 1, 'year');\n      } else if (this.view_is(VIEW_MODE.YEAR)) {\n        this.gantt_start = date_utils.add(this.gantt_start, -2, 'year');\n        this.gantt_end = date_utils.add(this.gantt_end, 2, 'year');\n      } else {\n        this.gantt_start = date_utils.add(this.gantt_start, -1, 'month');\n        this.gantt_end = date_utils.add(this.gantt_end, 1, 'month');\n      }\n    }\n  }, {\n    key: \"setup_date_values\",\n    value: function setup_date_values() {\n      this.dates = [];\n      var cur_date = null;\n\n      while (cur_date === null || cur_date < this.gantt_end) {\n        if (!cur_date) {\n          cur_date = date_utils.clone(this.gantt_start);\n        } else {\n          if (this.view_is(VIEW_MODE.YEAR)) {\n            cur_date = date_utils.add(cur_date, 1, 'year');\n          } else if (this.view_is(VIEW_MODE.MONTH)) {\n            cur_date = date_utils.add(cur_date, 1, 'month');\n          } else {\n            cur_date = date_utils.add(cur_date, this.options.step, 'hour');\n          }\n        }\n\n        this.dates.push(cur_date);\n      }\n    }\n  }, {\n    key: \"bind_events\",\n    value: function bind_events() {\n      this.bind_grid_click();\n      this.bind_bar_events();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      this.clear();\n      this.setup_layers();\n      this.make_grid();\n      this.make_dates();\n      this.make_bars();\n      this.make_arrows();\n      this.map_arrows_on_bars();\n      this.set_width();\n      this.set_scroll_position();\n    }\n  }, {\n    key: \"setup_layers\",\n    value: function setup_layers() {\n      this.layers = {};\n      var layers = ['grid', 'date', 'arrow', 'progress', 'bar', 'details']; // make group layers\n\n      for (var _i = 0, _layers = layers; _i < _layers.length; _i++) {\n        var layer = _layers[_i];\n        this.layers[layer] = createSVG('g', {\n          class: layer,\n          append_to: this.$svg\n        });\n      }\n    }\n  }, {\n    key: \"make_grid\",\n    value: function make_grid() {\n      this.make_grid_background();\n      this.make_grid_rows();\n      this.make_grid_header();\n      this.make_grid_ticks();\n      this.make_grid_highlights();\n    }\n  }, {\n    key: \"make_grid_background\",\n    value: function make_grid_background() {\n      var grid_width = this.dates.length * this.options.column_width;\n      var grid_height = this.options.header_height + this.options.padding + (this.options.bar_height + this.options.padding) * this.tasks.length;\n      createSVG('rect', {\n        x: 0,\n        y: 0,\n        width: grid_width,\n        height: grid_height,\n        class: 'grid-background',\n        append_to: this.layers.grid\n      });\n      $.attr(this.$svg, {\n        height: grid_height + this.options.padding + 100,\n        width: '100%'\n      });\n    }\n  }, {\n    key: \"make_grid_rows\",\n    value: function make_grid_rows() {\n      var rows_layer = createSVG('g', {\n        append_to: this.layers.grid\n      });\n      var lines_layer = createSVG('g', {\n        append_to: this.layers.grid\n      });\n      var row_width = this.dates.length * this.options.column_width;\n      var row_height = this.options.bar_height + this.options.padding;\n      var row_y = this.options.header_height + this.options.padding / 2;\n\n      var _iterator4 = _createForOfIteratorHelper(this.tasks),\n          _step4;\n\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var task = _step4.value;\n          createSVG('rect', {\n            x: 0,\n            y: row_y,\n            width: row_width,\n            height: row_height,\n            class: 'grid-row',\n            append_to: rows_layer\n          });\n          createSVG('line', {\n            x1: 0,\n            y1: row_y + row_height,\n            x2: row_width,\n            y2: row_y + row_height,\n            class: 'row-line',\n            append_to: lines_layer\n          });\n          row_y += this.options.bar_height + this.options.padding;\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n    }\n  }, {\n    key: \"make_grid_header\",\n    value: function make_grid_header() {\n      var header_width = this.dates.length * this.options.column_width;\n      var header_height = this.options.header_height + 10;\n      createSVG('rect', {\n        x: 0,\n        y: 0,\n        width: header_width,\n        height: header_height,\n        class: 'grid-header',\n        append_to: this.layers.grid\n      });\n    }\n  }, {\n    key: \"make_grid_ticks\",\n    value: function make_grid_ticks() {\n      var tick_x = 0;\n      var tick_y = this.options.header_height + this.options.padding / 2;\n      var tick_height = (this.options.bar_height + this.options.padding) * this.tasks.length;\n\n      var _iterator5 = _createForOfIteratorHelper(this.dates),\n          _step5;\n\n      try {\n        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n          var date = _step5.value;\n          var tick_class = 'tick'; // thick tick for monday\n\n          if (this.view_is(VIEW_MODE.DAY) && date.getDate() === 1) {\n            tick_class += ' thick';\n          } // thick tick for first week\n\n\n          if (this.view_is(VIEW_MODE.WEEK) && date.getDate() >= 1 && date.getDate() < 8) {\n            tick_class += ' thick';\n          } // thick ticks for quarters\n\n\n          if (this.view_is(VIEW_MODE.MONTH) && (date.getMonth() + 1) % 3 === 0) {\n            tick_class += ' thick';\n          }\n\n          createSVG('path', {\n            d: \"M \".concat(tick_x, \" \").concat(tick_y, \" v \").concat(tick_height),\n            class: tick_class,\n            append_to: this.layers.grid\n          });\n\n          if (this.view_is(VIEW_MODE.MONTH)) {\n            tick_x += date_utils.get_days_in_month(date) * this.options.column_width / 30;\n          } else {\n            tick_x += this.options.column_width;\n          }\n        }\n      } catch (err) {\n        _iterator5.e(err);\n      } finally {\n        _iterator5.f();\n      }\n    }\n  }, {\n    key: \"make_grid_highlights\",\n    value: function make_grid_highlights() {\n      // highlight today's date\n      if (this.view_is(VIEW_MODE.DAY)) {\n        var x = date_utils.diff(date_utils.today(), this.gantt_start, 'hour') / this.options.step * this.options.column_width;\n        var y = 0;\n        var width = this.options.column_width;\n        var height = (this.options.bar_height + this.options.padding) * this.tasks.length + this.options.header_height + this.options.padding / 2;\n        createSVG('rect', {\n          x: x,\n          y: y,\n          width: width,\n          height: height,\n          class: 'today-highlight',\n          append_to: this.layers.grid\n        });\n      }\n    }\n  }, {\n    key: \"make_dates\",\n    value: function make_dates() {\n      var _iterator6 = _createForOfIteratorHelper(this.get_dates_to_draw()),\n          _step6;\n\n      try {\n        for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n          var date = _step6.value;\n          createSVG('text', {\n            x: date.lower_x,\n            y: date.lower_y,\n            innerHTML: date.lower_text,\n            class: 'lower-text',\n            append_to: this.layers.date\n          });\n\n          if (date.upper_text) {\n            var $upper_text = createSVG('text', {\n              x: date.upper_x,\n              y: date.upper_y,\n              innerHTML: date.upper_text,\n              class: 'upper-text',\n              append_to: this.layers.date\n            }); // remove out-of-bound dates\n\n            if ($upper_text.getBBox().x2 > this.layers.grid.getBBox().width) {\n              $upper_text.remove();\n            }\n          }\n        }\n      } catch (err) {\n        _iterator6.e(err);\n      } finally {\n        _iterator6.f();\n      }\n    }\n  }, {\n    key: \"get_dates_to_draw\",\n    value: function get_dates_to_draw() {\n      var _this = this;\n\n      var last_date = null;\n      var dates = this.dates.map(function (date, i) {\n        var d = _this.get_date_info(date, last_date, i);\n\n        last_date = date;\n        return d;\n      });\n      return dates;\n    }\n  }, {\n    key: \"get_date_info\",\n    value: function get_date_info(date, last_date, i) {\n      if (!last_date) {\n        last_date = date_utils.add(date, 1, 'year');\n      }\n\n      var date_text = {\n        'Quarter Day_lower': date_utils.format(date, 'HH', this.options.language),\n        'Half Day_lower': date_utils.format(date, 'HH', this.options.language),\n        Day_lower: date.getDate() !== last_date.getDate() ? date_utils.format(date, 'D', this.options.language) : '',\n        Week_lower: date.getMonth() !== last_date.getMonth() ? date_utils.format(date, 'D MMM', this.options.language) : date_utils.format(date, 'D', this.options.language),\n        Month_lower: date_utils.format(date, 'MMMM', this.options.language),\n        Year_lower: date_utils.format(date, 'YYYY', this.options.language),\n        'Quarter Day_upper': date.getDate() !== last_date.getDate() ? date_utils.format(date, 'D MMM', this.options.language) : '',\n        'Half Day_upper': date.getDate() !== last_date.getDate() ? date.getMonth() !== last_date.getMonth() ? date_utils.format(date, 'D MMM', this.options.language) : date_utils.format(date, 'D', this.options.language) : '',\n        Day_upper: date.getMonth() !== last_date.getMonth() ? date_utils.format(date, 'MMMM', this.options.language) : '',\n        Week_upper: date.getMonth() !== last_date.getMonth() ? date_utils.format(date, 'MMMM', this.options.language) : '',\n        Month_upper: date.getFullYear() !== last_date.getFullYear() ? date_utils.format(date, 'YYYY', this.options.language) : '',\n        Year_upper: date.getFullYear() !== last_date.getFullYear() ? date_utils.format(date, 'YYYY', this.options.language) : ''\n      };\n      var base_pos = {\n        x: i * this.options.column_width,\n        lower_y: this.options.header_height,\n        upper_y: this.options.header_height - 25\n      };\n      var x_pos = {\n        'Quarter Day_lower': this.options.column_width * 4 / 2,\n        'Quarter Day_upper': 0,\n        'Half Day_lower': this.options.column_width * 2 / 2,\n        'Half Day_upper': 0,\n        Day_lower: this.options.column_width / 2,\n        Day_upper: this.options.column_width * 30 / 2,\n        Week_lower: 0,\n        Week_upper: this.options.column_width * 4 / 2,\n        Month_lower: this.options.column_width / 2,\n        Month_upper: this.options.column_width * 12 / 2,\n        Year_lower: this.options.column_width / 2,\n        Year_upper: this.options.column_width * 30 / 2\n      };\n      return {\n        upper_text: date_text[\"\".concat(this.options.view_mode, \"_upper\")],\n        lower_text: date_text[\"\".concat(this.options.view_mode, \"_lower\")],\n        upper_x: base_pos.x + x_pos[\"\".concat(this.options.view_mode, \"_upper\")],\n        upper_y: base_pos.upper_y,\n        lower_x: base_pos.x + x_pos[\"\".concat(this.options.view_mode, \"_lower\")],\n        lower_y: base_pos.lower_y\n      };\n    }\n  }, {\n    key: \"make_bars\",\n    value: function make_bars() {\n      var _this2 = this;\n\n      this.bars = this.tasks.map(function (task) {\n        var bar = new Bar(_this2, task);\n\n        _this2.layers.bar.appendChild(bar.group);\n\n        return bar;\n      });\n    }\n  }, {\n    key: \"make_arrows\",\n    value: function make_arrows() {\n      var _this3 = this;\n\n      this.arrows = [];\n\n      var _iterator7 = _createForOfIteratorHelper(this.tasks),\n          _step7;\n\n      try {\n        var _loop = function _loop() {\n          var task = _step7.value;\n          var arrows = [];\n          arrows = task.dependencies.map(function (task_id) {\n            var dependency = _this3.get_task(task_id);\n\n            if (!dependency) return;\n            var arrow = new Arrow(_this3, _this3.bars[dependency._index], // from_task\n            _this3.bars[task._index] // to_task\n            );\n\n            _this3.layers.arrow.appendChild(arrow.element);\n\n            return arrow;\n          }).filter(Boolean); // filter falsy values\n\n          _this3.arrows = _this3.arrows.concat(arrows);\n        };\n\n        for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n          _loop();\n        }\n      } catch (err) {\n        _iterator7.e(err);\n      } finally {\n        _iterator7.f();\n      }\n    }\n  }, {\n    key: \"map_arrows_on_bars\",\n    value: function map_arrows_on_bars() {\n      var _this4 = this;\n\n      var _iterator8 = _createForOfIteratorHelper(this.bars),\n          _step8;\n\n      try {\n        var _loop2 = function _loop2() {\n          var bar = _step8.value;\n          bar.arrows = _this4.arrows.filter(function (arrow) {\n            return arrow.from_task.task.id === bar.task.id || arrow.to_task.task.id === bar.task.id;\n          });\n        };\n\n        for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n          _loop2();\n        }\n      } catch (err) {\n        _iterator8.e(err);\n      } finally {\n        _iterator8.f();\n      }\n    }\n  }, {\n    key: \"set_width\",\n    value: function set_width() {\n      var cur_width = this.$svg.getBoundingClientRect().width;\n      var actual_width = this.$svg.querySelector('.grid .grid-row').getAttribute('width');\n\n      if (cur_width < actual_width) {\n        this.$svg.setAttribute('width', actual_width);\n      }\n    }\n  }, {\n    key: \"set_scroll_position\",\n    value: function set_scroll_position() {\n      var parent_element = this.$svg.parentElement;\n      if (!parent_element) return;\n      var hours_before_first_task = date_utils.diff(this.get_oldest_starting_date(), this.gantt_start, 'hour');\n      var scroll_pos = hours_before_first_task / this.options.step * this.options.column_width - this.options.column_width;\n      parent_element.scrollLeft = scroll_pos;\n    }\n  }, {\n    key: \"bind_grid_click\",\n    value: function bind_grid_click() {\n      var _this5 = this;\n\n      $.on(this.$svg, this.options.popup_trigger, '.grid-row, .grid-header', function () {\n        _this5.unselect_all();\n\n        _this5.hide_popup();\n      });\n    }\n  }, {\n    key: \"bind_bar_events\",\n    value: function bind_bar_events() {\n      var _this6 = this;\n\n      var is_dragging = false;\n      var x_on_start = 0;\n      var y_on_start = 0;\n      var is_resizing_left = false;\n      var is_resizing_right = false;\n      var parent_bar_id = null;\n      var bars = []; // instanceof Bar\n\n      this.bar_being_dragged = null;\n\n      function action_in_progress() {\n        return is_dragging || is_resizing_left || is_resizing_right;\n      }\n\n      $.on(this.$svg, 'mousedown', '.bar-wrapper, .handle', function (e, element) {\n        var bar_wrapper = $.closest('.bar-wrapper', element);\n\n        if (element.classList.contains('left')) {\n          is_resizing_left = true;\n        } else if (element.classList.contains('right')) {\n          is_resizing_right = true;\n        } else if (element.classList.contains('bar-wrapper')) {\n          is_dragging = true;\n        }\n\n        bar_wrapper.classList.add('active');\n        x_on_start = e.offsetX;\n        y_on_start = e.offsetY;\n        parent_bar_id = bar_wrapper.getAttribute('data-id');\n        var ids = [parent_bar_id].concat(_toConsumableArray(_this6.get_all_dependent_tasks(parent_bar_id)));\n        bars = ids.map(function (id) {\n          return _this6.get_bar(id);\n        });\n        _this6.bar_being_dragged = parent_bar_id;\n        bars.forEach(function (bar) {\n          var $bar = bar.$bar;\n          $bar.ox = $bar.getX();\n          $bar.oy = $bar.getY();\n          $bar.owidth = $bar.getWidth();\n          $bar.finaldx = 0;\n        });\n      });\n      $.on(this.$svg, 'mousemove', function (e) {\n        if (!action_in_progress()) return;\n        var dx = e.offsetX - x_on_start;\n        var dy = e.offsetY - y_on_start;\n        bars.forEach(function (bar) {\n          var $bar = bar.$bar;\n          $bar.finaldx = _this6.get_snap_position(dx);\n\n          _this6.hide_popup();\n\n          if (is_resizing_left) {\n            if (parent_bar_id === bar.task.id) {\n              bar.update_bar_position({\n                x: $bar.ox + $bar.finaldx,\n                width: $bar.owidth - $bar.finaldx\n              });\n            } else {\n              bar.update_bar_position({\n                x: $bar.ox + $bar.finaldx\n              });\n            }\n          } else if (is_resizing_right) {\n            if (parent_bar_id === bar.task.id) {\n              bar.update_bar_position({\n                width: $bar.owidth + $bar.finaldx\n              });\n            }\n          } else if (is_dragging) {\n            bar.update_bar_position({\n              x: $bar.ox + $bar.finaldx\n            });\n          }\n        });\n      });\n      document.addEventListener('mouseup', function (e) {\n        if (is_dragging || is_resizing_left || is_resizing_right) {\n          bars.forEach(function (bar) {\n            return bar.group.classList.remove('active');\n          });\n        }\n\n        is_dragging = false;\n        is_resizing_left = false;\n        is_resizing_right = false;\n      });\n      $.on(this.$svg, 'mouseup', function (e) {\n        _this6.bar_being_dragged = null;\n        bars.forEach(function (bar) {\n          var $bar = bar.$bar;\n          if (!$bar.finaldx) return;\n          bar.date_changed();\n          bar.set_action_completed();\n        });\n      });\n      this.bind_bar_progress();\n    }\n  }, {\n    key: \"bind_bar_progress\",\n    value: function bind_bar_progress() {\n      var _this7 = this;\n\n      var x_on_start = 0;\n      var y_on_start = 0;\n      var is_resizing = null;\n      var bar = null;\n      var $bar_progress = null;\n      var $bar = null;\n      $.on(this.$svg, 'mousedown', '.handle.progress', function (e, handle) {\n        is_resizing = true;\n        x_on_start = e.offsetX;\n        y_on_start = e.offsetY;\n        var $bar_wrapper = $.closest('.bar-wrapper', handle);\n        var id = $bar_wrapper.getAttribute('data-id');\n        bar = _this7.get_bar(id);\n        $bar_progress = bar.$bar_progress;\n        $bar = bar.$bar;\n        $bar_progress.finaldx = 0;\n        $bar_progress.owidth = $bar_progress.getWidth();\n        $bar_progress.min_dx = -$bar_progress.getWidth();\n        $bar_progress.max_dx = $bar.getWidth() - $bar_progress.getWidth();\n      });\n      $.on(this.$svg, 'mousemove', function (e) {\n        if (!is_resizing) return;\n        var dx = e.offsetX - x_on_start;\n        var dy = e.offsetY - y_on_start;\n\n        if (dx > $bar_progress.max_dx) {\n          dx = $bar_progress.max_dx;\n        }\n\n        if (dx < $bar_progress.min_dx) {\n          dx = $bar_progress.min_dx;\n        }\n\n        var $handle = bar.$handle_progress;\n        $.attr($bar_progress, 'width', $bar_progress.owidth + dx);\n        $.attr($handle, 'points', bar.get_progress_polygon_points());\n        $bar_progress.finaldx = dx;\n      });\n      $.on(this.$svg, 'mouseup', function () {\n        is_resizing = false;\n        if (!($bar_progress && $bar_progress.finaldx)) return;\n        bar.progress_changed();\n        bar.set_action_completed();\n      });\n    }\n  }, {\n    key: \"get_all_dependent_tasks\",\n    value: function get_all_dependent_tasks(task_id) {\n      var _this8 = this;\n\n      var out = [];\n      var to_process = [task_id];\n\n      while (to_process.length) {\n        var deps = to_process.reduce(function (acc, curr) {\n          acc = acc.concat(_this8.dependency_map[curr]);\n          return acc;\n        }, []);\n        out = out.concat(deps);\n        to_process = deps.filter(function (d) {\n          return !to_process.includes(d);\n        });\n      }\n\n      return out.filter(Boolean);\n    }\n  }, {\n    key: \"get_snap_position\",\n    value: function get_snap_position(dx) {\n      var odx = dx,\n          rem,\n          position;\n\n      if (this.view_is(VIEW_MODE.WEEK)) {\n        rem = dx % (this.options.column_width / 7);\n        position = odx - rem + (rem < this.options.column_width / 14 ? 0 : this.options.column_width / 7);\n      } else if (this.view_is(VIEW_MODE.MONTH)) {\n        rem = dx % (this.options.column_width / 30);\n        position = odx - rem + (rem < this.options.column_width / 60 ? 0 : this.options.column_width / 30);\n      } else {\n        rem = dx % this.options.column_width;\n        position = odx - rem + (rem < this.options.column_width / 2 ? 0 : this.options.column_width);\n      }\n\n      return position;\n    }\n  }, {\n    key: \"unselect_all\",\n    value: function unselect_all() {\n      _toConsumableArray(this.$svg.querySelectorAll('.bar-wrapper')).forEach(function (el) {\n        el.classList.remove('active');\n      });\n    }\n  }, {\n    key: \"view_is\",\n    value: function view_is(modes) {\n      var _this9 = this;\n\n      if (typeof modes === 'string') {\n        return this.options.view_mode === modes;\n      }\n\n      if (Array.isArray(modes)) {\n        return modes.some(function (mode) {\n          return _this9.options.view_mode === mode;\n        });\n      }\n\n      return false;\n    }\n  }, {\n    key: \"get_task\",\n    value: function get_task(id) {\n      return this.tasks.find(function (task) {\n        return task.id === id;\n      });\n    }\n  }, {\n    key: \"get_bar\",\n    value: function get_bar(id) {\n      return this.bars.find(function (bar) {\n        return bar.task.id === id;\n      });\n    }\n  }, {\n    key: \"show_popup\",\n    value: function show_popup(options) {\n      if (!this.popup) {\n        this.popup = new Popup(this.popup_wrapper, this.options.custom_popup_html);\n      }\n\n      this.popup.show(options);\n    }\n  }, {\n    key: \"hide_popup\",\n    value: function hide_popup() {\n      this.popup && this.popup.hide();\n    }\n  }, {\n    key: \"trigger_event\",\n    value: function trigger_event(event, args) {\n      if (this.options['on_' + event]) {\n        this.options['on_' + event].apply(null, args);\n      }\n    }\n    /**\n     * Gets the oldest starting date from the list of tasks\n     *\n     * @returns Date\n     * @memberof Gantt\n     */\n\n  }, {\n    key: \"get_oldest_starting_date\",\n    value: function get_oldest_starting_date() {\n      return this.tasks.map(function (task) {\n        return task._start;\n      }).reduce(function (prev_date, cur_date) {\n        return cur_date <= prev_date ? cur_date : prev_date;\n      });\n    }\n    /**\n     * Clear all elements from the parent svg element\n     *\n     * @memberof Gantt\n     */\n\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.$svg.innerHTML = '';\n    }\n  }]);\n\n  return Gantt;\n}();\n\nexport { Gantt as default };\nGantt.VIEW_MODE = VIEW_MODE;\n\nfunction generate_id(task) {\n  return task.name + '_' + Math.random().toString(36).slice(2, 12);\n}","map":{"version":3,"names":["date_utils","$","createSVG","Bar","Arrow","Popup","VIEW_MODE","QUARTER_DAY","HALF_DAY","DAY","WEEK","MONTH","YEAR","Gantt","wrapper","tasks","options","setup_wrapper","setup_options","setup_tasks","change_view_mode","bind_events","element","svg_element","wrapper_element","document","querySelector","HTMLElement","SVGElement","TypeError","$svg","append_to","class","classList","add","$container","createElement","parent_element","parentElement","appendChild","popup_wrapper","default_options","header_height","column_width","step","view_modes","Object","values","bar_height","bar_corner_radius","arrow_curve","padding","view_mode","date_format","popup_trigger","custom_popup_html","language","assign","map","task","i","_start","parse","start","_end","end","diff","_index","today","task_end_values","get_date_values","slice","every","d","invalid","dependencies","deps","split","trim","filter","id","generate_id","setup_dependencies","dependency_map","t","push","mode","update_view_scale","setup_dates","render","trigger_event","setup_gantt_dates","setup_date_values","gantt_start","gantt_end","start_of","view_is","dates","cur_date","clone","bind_grid_click","bind_bar_events","clear","setup_layers","make_grid","make_dates","make_bars","make_arrows","map_arrows_on_bars","set_width","set_scroll_position","layers","layer","make_grid_background","make_grid_rows","make_grid_header","make_grid_ticks","make_grid_highlights","grid_width","length","grid_height","x","y","width","height","grid","attr","rows_layer","lines_layer","row_width","row_height","row_y","x1","y1","x2","y2","header_width","tick_x","tick_y","tick_height","date","tick_class","getDate","getMonth","get_days_in_month","get_dates_to_draw","lower_x","lower_y","innerHTML","lower_text","upper_text","$upper_text","upper_x","upper_y","getBBox","remove","last_date","get_date_info","date_text","format","Day_lower","Week_lower","Month_lower","Year_lower","Day_upper","Week_upper","Month_upper","getFullYear","Year_upper","base_pos","x_pos","bars","bar","group","arrows","task_id","dependency","get_task","arrow","Boolean","concat","from_task","to_task","cur_width","getBoundingClientRect","actual_width","getAttribute","setAttribute","hours_before_first_task","get_oldest_starting_date","scroll_pos","scrollLeft","on","unselect_all","hide_popup","is_dragging","x_on_start","y_on_start","is_resizing_left","is_resizing_right","parent_bar_id","bar_being_dragged","action_in_progress","e","bar_wrapper","closest","contains","offsetX","offsetY","ids","get_all_dependent_tasks","get_bar","forEach","$bar","ox","getX","oy","getY","owidth","getWidth","finaldx","dx","dy","get_snap_position","update_bar_position","addEventListener","date_changed","set_action_completed","bind_bar_progress","is_resizing","$bar_progress","handle","$bar_wrapper","min_dx","max_dx","$handle","$handle_progress","get_progress_polygon_points","progress_changed","out","to_process","reduce","acc","curr","includes","odx","rem","position","querySelectorAll","el","modes","Array","isArray","some","find","popup","show","hide","event","args","apply","prev_date","name","Math","random","toString"],"sources":["/Users/josieldelgadillo/GitHub_M1/GitHub/hyper-react-v3.3.0/hyper-react-js/node_modules/frappe-gantt/src/index.js"],"sourcesContent":["import date_utils from './date_utils';\nimport { $, createSVG } from './svg_utils';\nimport Bar from './bar';\nimport Arrow from './arrow';\nimport Popup from './popup';\n\nimport './gantt.scss';\n\nconst VIEW_MODE = {\n    QUARTER_DAY: 'Quarter Day',\n    HALF_DAY: 'Half Day',\n    DAY: 'Day',\n    WEEK: 'Week',\n    MONTH: 'Month',\n    YEAR: 'Year',\n};\n\nexport default class Gantt {\n    constructor(wrapper, tasks, options) {\n        this.setup_wrapper(wrapper);\n        this.setup_options(options);\n        this.setup_tasks(tasks);\n        // initialize with default view mode\n        this.change_view_mode();\n        this.bind_events();\n    }\n\n    setup_wrapper(element) {\n        let svg_element, wrapper_element;\n\n        // CSS Selector is passed\n        if (typeof element === 'string') {\n            element = document.querySelector(element);\n        }\n\n        // get the SVGElement\n        if (element instanceof HTMLElement) {\n            wrapper_element = element;\n            svg_element = element.querySelector('svg');\n        } else if (element instanceof SVGElement) {\n            svg_element = element;\n        } else {\n            throw new TypeError(\n                'FrappÃ© Gantt only supports usage of a string CSS selector,' +\n                    \" HTML DOM element or SVG DOM element for the 'element' parameter\"\n            );\n        }\n\n        // svg element\n        if (!svg_element) {\n            // create it\n            this.$svg = createSVG('svg', {\n                append_to: wrapper_element,\n                class: 'gantt',\n            });\n        } else {\n            this.$svg = svg_element;\n            this.$svg.classList.add('gantt');\n        }\n\n        // wrapper element\n        this.$container = document.createElement('div');\n        this.$container.classList.add('gantt-container');\n\n        const parent_element = this.$svg.parentElement;\n        parent_element.appendChild(this.$container);\n        this.$container.appendChild(this.$svg);\n\n        // popup wrapper\n        this.popup_wrapper = document.createElement('div');\n        this.popup_wrapper.classList.add('popup-wrapper');\n        this.$container.appendChild(this.popup_wrapper);\n    }\n\n    setup_options(options) {\n        const default_options = {\n            header_height: 50,\n            column_width: 30,\n            step: 24,\n            view_modes: [...Object.values(VIEW_MODE)],\n            bar_height: 20,\n            bar_corner_radius: 3,\n            arrow_curve: 5,\n            padding: 18,\n            view_mode: 'Day',\n            date_format: 'YYYY-MM-DD',\n            popup_trigger: 'click',\n            custom_popup_html: null,\n            language: 'en',\n        };\n        this.options = Object.assign({}, default_options, options);\n    }\n\n    setup_tasks(tasks) {\n        // prepare tasks\n        this.tasks = tasks.map((task, i) => {\n            // convert to Date objects\n            task._start = date_utils.parse(task.start);\n            task._end = date_utils.parse(task.end);\n\n            // make task invalid if duration too large\n            if (date_utils.diff(task._end, task._start, 'year') > 10) {\n                task.end = null;\n            }\n\n            // cache index\n            task._index = i;\n\n            // invalid dates\n            if (!task.start && !task.end) {\n                const today = date_utils.today();\n                task._start = today;\n                task._end = date_utils.add(today, 2, 'day');\n            }\n\n            if (!task.start && task.end) {\n                task._start = date_utils.add(task._end, -2, 'day');\n            }\n\n            if (task.start && !task.end) {\n                task._end = date_utils.add(task._start, 2, 'day');\n            }\n\n            // if hours is not set, assume the last day is full day\n            // e.g: 2018-09-09 becomes 2018-09-09 23:59:59\n            const task_end_values = date_utils.get_date_values(task._end);\n            if (task_end_values.slice(3).every((d) => d === 0)) {\n                task._end = date_utils.add(task._end, 24, 'hour');\n            }\n\n            // invalid flag\n            if (!task.start || !task.end) {\n                task.invalid = true;\n            }\n\n            // dependencies\n            if (typeof task.dependencies === 'string' || !task.dependencies) {\n                let deps = [];\n                if (task.dependencies) {\n                    deps = task.dependencies\n                        .split(',')\n                        .map((d) => d.trim())\n                        .filter((d) => d);\n                }\n                task.dependencies = deps;\n            }\n\n            // uids\n            if (!task.id) {\n                task.id = generate_id(task);\n            }\n\n            return task;\n        });\n\n        this.setup_dependencies();\n    }\n\n    setup_dependencies() {\n        this.dependency_map = {};\n        for (let t of this.tasks) {\n            for (let d of t.dependencies) {\n                this.dependency_map[d] = this.dependency_map[d] || [];\n                this.dependency_map[d].push(t.id);\n            }\n        }\n    }\n\n    refresh(tasks) {\n        this.setup_tasks(tasks);\n        this.change_view_mode();\n    }\n\n    change_view_mode(mode = this.options.view_mode) {\n        this.update_view_scale(mode);\n        this.setup_dates();\n        this.render();\n        // fire viewmode_change event\n        this.trigger_event('view_change', [mode]);\n    }\n\n    update_view_scale(view_mode) {\n        this.options.view_mode = view_mode;\n\n        if (view_mode === VIEW_MODE.DAY) {\n            this.options.step = 24;\n            this.options.column_width = 38;\n        } else if (view_mode === VIEW_MODE.HALF_DAY) {\n            this.options.step = 24 / 2;\n            this.options.column_width = 38;\n        } else if (view_mode === VIEW_MODE.QUARTER_DAY) {\n            this.options.step = 24 / 4;\n            this.options.column_width = 38;\n        } else if (view_mode === VIEW_MODE.WEEK) {\n            this.options.step = 24 * 7;\n            this.options.column_width = 140;\n        } else if (view_mode === VIEW_MODE.MONTH) {\n            this.options.step = 24 * 30;\n            this.options.column_width = 120;\n        } else if (view_mode === VIEW_MODE.YEAR) {\n            this.options.step = 24 * 365;\n            this.options.column_width = 120;\n        }\n    }\n\n    setup_dates() {\n        this.setup_gantt_dates();\n        this.setup_date_values();\n    }\n\n    setup_gantt_dates() {\n        this.gantt_start = this.gantt_end = null;\n\n        for (let task of this.tasks) {\n            // set global start and end date\n            if (!this.gantt_start || task._start < this.gantt_start) {\n                this.gantt_start = task._start;\n            }\n            if (!this.gantt_end || task._end > this.gantt_end) {\n                this.gantt_end = task._end;\n            }\n        }\n\n        this.gantt_start = date_utils.start_of(this.gantt_start, 'day');\n        this.gantt_end = date_utils.start_of(this.gantt_end, 'day');\n\n        // add date padding on both sides\n        if (this.view_is([VIEW_MODE.QUARTER_DAY, VIEW_MODE.HALF_DAY])) {\n            this.gantt_start = date_utils.add(this.gantt_start, -7, 'day');\n            this.gantt_end = date_utils.add(this.gantt_end, 7, 'day');\n        } else if (this.view_is(VIEW_MODE.MONTH)) {\n            this.gantt_start = date_utils.start_of(this.gantt_start, 'year');\n            this.gantt_end = date_utils.add(this.gantt_end, 1, 'year');\n        } else if (this.view_is(VIEW_MODE.YEAR)) {\n            this.gantt_start = date_utils.add(this.gantt_start, -2, 'year');\n            this.gantt_end = date_utils.add(this.gantt_end, 2, 'year');\n        } else {\n            this.gantt_start = date_utils.add(this.gantt_start, -1, 'month');\n            this.gantt_end = date_utils.add(this.gantt_end, 1, 'month');\n        }\n    }\n\n    setup_date_values() {\n        this.dates = [];\n        let cur_date = null;\n\n        while (cur_date === null || cur_date < this.gantt_end) {\n            if (!cur_date) {\n                cur_date = date_utils.clone(this.gantt_start);\n            } else {\n                if (this.view_is(VIEW_MODE.YEAR)) {\n                    cur_date = date_utils.add(cur_date, 1, 'year');\n                } else if (this.view_is(VIEW_MODE.MONTH)) {\n                    cur_date = date_utils.add(cur_date, 1, 'month');\n                } else {\n                    cur_date = date_utils.add(\n                        cur_date,\n                        this.options.step,\n                        'hour'\n                    );\n                }\n            }\n            this.dates.push(cur_date);\n        }\n    }\n\n    bind_events() {\n        this.bind_grid_click();\n        this.bind_bar_events();\n    }\n\n    render() {\n        this.clear();\n        this.setup_layers();\n        this.make_grid();\n        this.make_dates();\n        this.make_bars();\n        this.make_arrows();\n        this.map_arrows_on_bars();\n        this.set_width();\n        this.set_scroll_position();\n    }\n\n    setup_layers() {\n        this.layers = {};\n        const layers = ['grid', 'date', 'arrow', 'progress', 'bar', 'details'];\n        // make group layers\n        for (let layer of layers) {\n            this.layers[layer] = createSVG('g', {\n                class: layer,\n                append_to: this.$svg,\n            });\n        }\n    }\n\n    make_grid() {\n        this.make_grid_background();\n        this.make_grid_rows();\n        this.make_grid_header();\n        this.make_grid_ticks();\n        this.make_grid_highlights();\n    }\n\n    make_grid_background() {\n        const grid_width = this.dates.length * this.options.column_width;\n        const grid_height =\n            this.options.header_height +\n            this.options.padding +\n            (this.options.bar_height + this.options.padding) *\n                this.tasks.length;\n\n        createSVG('rect', {\n            x: 0,\n            y: 0,\n            width: grid_width,\n            height: grid_height,\n            class: 'grid-background',\n            append_to: this.layers.grid,\n        });\n\n        $.attr(this.$svg, {\n            height: grid_height + this.options.padding + 100,\n            width: '100%',\n        });\n    }\n\n    make_grid_rows() {\n        const rows_layer = createSVG('g', { append_to: this.layers.grid });\n        const lines_layer = createSVG('g', { append_to: this.layers.grid });\n\n        const row_width = this.dates.length * this.options.column_width;\n        const row_height = this.options.bar_height + this.options.padding;\n\n        let row_y = this.options.header_height + this.options.padding / 2;\n\n        for (let task of this.tasks) {\n            createSVG('rect', {\n                x: 0,\n                y: row_y,\n                width: row_width,\n                height: row_height,\n                class: 'grid-row',\n                append_to: rows_layer,\n            });\n\n            createSVG('line', {\n                x1: 0,\n                y1: row_y + row_height,\n                x2: row_width,\n                y2: row_y + row_height,\n                class: 'row-line',\n                append_to: lines_layer,\n            });\n\n            row_y += this.options.bar_height + this.options.padding;\n        }\n    }\n\n    make_grid_header() {\n        const header_width = this.dates.length * this.options.column_width;\n        const header_height = this.options.header_height + 10;\n        createSVG('rect', {\n            x: 0,\n            y: 0,\n            width: header_width,\n            height: header_height,\n            class: 'grid-header',\n            append_to: this.layers.grid,\n        });\n    }\n\n    make_grid_ticks() {\n        let tick_x = 0;\n        let tick_y = this.options.header_height + this.options.padding / 2;\n        let tick_height =\n            (this.options.bar_height + this.options.padding) *\n            this.tasks.length;\n\n        for (let date of this.dates) {\n            let tick_class = 'tick';\n            // thick tick for monday\n            if (this.view_is(VIEW_MODE.DAY) && date.getDate() === 1) {\n                tick_class += ' thick';\n            }\n            // thick tick for first week\n            if (\n                this.view_is(VIEW_MODE.WEEK) &&\n                date.getDate() >= 1 &&\n                date.getDate() < 8\n            ) {\n                tick_class += ' thick';\n            }\n            // thick ticks for quarters\n            if (\n                this.view_is(VIEW_MODE.MONTH) &&\n                (date.getMonth() + 1) % 3 === 0\n            ) {\n                tick_class += ' thick';\n            }\n\n            createSVG('path', {\n                d: `M ${tick_x} ${tick_y} v ${tick_height}`,\n                class: tick_class,\n                append_to: this.layers.grid,\n            });\n\n            if (this.view_is(VIEW_MODE.MONTH)) {\n                tick_x +=\n                    (date_utils.get_days_in_month(date) *\n                        this.options.column_width) /\n                    30;\n            } else {\n                tick_x += this.options.column_width;\n            }\n        }\n    }\n\n    make_grid_highlights() {\n        // highlight today's date\n        if (this.view_is(VIEW_MODE.DAY)) {\n            const x =\n                (date_utils.diff(date_utils.today(), this.gantt_start, 'hour') /\n                    this.options.step) *\n                this.options.column_width;\n            const y = 0;\n\n            const width = this.options.column_width;\n            const height =\n                (this.options.bar_height + this.options.padding) *\n                    this.tasks.length +\n                this.options.header_height +\n                this.options.padding / 2;\n\n            createSVG('rect', {\n                x,\n                y,\n                width,\n                height,\n                class: 'today-highlight',\n                append_to: this.layers.grid,\n            });\n        }\n    }\n\n    make_dates() {\n        for (let date of this.get_dates_to_draw()) {\n            createSVG('text', {\n                x: date.lower_x,\n                y: date.lower_y,\n                innerHTML: date.lower_text,\n                class: 'lower-text',\n                append_to: this.layers.date,\n            });\n\n            if (date.upper_text) {\n                const $upper_text = createSVG('text', {\n                    x: date.upper_x,\n                    y: date.upper_y,\n                    innerHTML: date.upper_text,\n                    class: 'upper-text',\n                    append_to: this.layers.date,\n                });\n\n                // remove out-of-bound dates\n                if (\n                    $upper_text.getBBox().x2 > this.layers.grid.getBBox().width\n                ) {\n                    $upper_text.remove();\n                }\n            }\n        }\n    }\n\n    get_dates_to_draw() {\n        let last_date = null;\n        const dates = this.dates.map((date, i) => {\n            const d = this.get_date_info(date, last_date, i);\n            last_date = date;\n            return d;\n        });\n        return dates;\n    }\n\n    get_date_info(date, last_date, i) {\n        if (!last_date) {\n            last_date = date_utils.add(date, 1, 'year');\n        }\n        const date_text = {\n            'Quarter Day_lower': date_utils.format(\n                date,\n                'HH',\n                this.options.language\n            ),\n            'Half Day_lower': date_utils.format(\n                date,\n                'HH',\n                this.options.language\n            ),\n            Day_lower:\n                date.getDate() !== last_date.getDate()\n                    ? date_utils.format(date, 'D', this.options.language)\n                    : '',\n            Week_lower:\n                date.getMonth() !== last_date.getMonth()\n                    ? date_utils.format(date, 'D MMM', this.options.language)\n                    : date_utils.format(date, 'D', this.options.language),\n            Month_lower: date_utils.format(date, 'MMMM', this.options.language),\n            Year_lower: date_utils.format(date, 'YYYY', this.options.language),\n            'Quarter Day_upper':\n                date.getDate() !== last_date.getDate()\n                    ? date_utils.format(date, 'D MMM', this.options.language)\n                    : '',\n            'Half Day_upper':\n                date.getDate() !== last_date.getDate()\n                    ? date.getMonth() !== last_date.getMonth()\n                        ? date_utils.format(\n                              date,\n                              'D MMM',\n                              this.options.language\n                          )\n                        : date_utils.format(date, 'D', this.options.language)\n                    : '',\n            Day_upper:\n                date.getMonth() !== last_date.getMonth()\n                    ? date_utils.format(date, 'MMMM', this.options.language)\n                    : '',\n            Week_upper:\n                date.getMonth() !== last_date.getMonth()\n                    ? date_utils.format(date, 'MMMM', this.options.language)\n                    : '',\n            Month_upper:\n                date.getFullYear() !== last_date.getFullYear()\n                    ? date_utils.format(date, 'YYYY', this.options.language)\n                    : '',\n            Year_upper:\n                date.getFullYear() !== last_date.getFullYear()\n                    ? date_utils.format(date, 'YYYY', this.options.language)\n                    : '',\n        };\n\n        const base_pos = {\n            x: i * this.options.column_width,\n            lower_y: this.options.header_height,\n            upper_y: this.options.header_height - 25,\n        };\n\n        const x_pos = {\n            'Quarter Day_lower': (this.options.column_width * 4) / 2,\n            'Quarter Day_upper': 0,\n            'Half Day_lower': (this.options.column_width * 2) / 2,\n            'Half Day_upper': 0,\n            Day_lower: this.options.column_width / 2,\n            Day_upper: (this.options.column_width * 30) / 2,\n            Week_lower: 0,\n            Week_upper: (this.options.column_width * 4) / 2,\n            Month_lower: this.options.column_width / 2,\n            Month_upper: (this.options.column_width * 12) / 2,\n            Year_lower: this.options.column_width / 2,\n            Year_upper: (this.options.column_width * 30) / 2,\n        };\n\n        return {\n            upper_text: date_text[`${this.options.view_mode}_upper`],\n            lower_text: date_text[`${this.options.view_mode}_lower`],\n            upper_x: base_pos.x + x_pos[`${this.options.view_mode}_upper`],\n            upper_y: base_pos.upper_y,\n            lower_x: base_pos.x + x_pos[`${this.options.view_mode}_lower`],\n            lower_y: base_pos.lower_y,\n        };\n    }\n\n    make_bars() {\n        this.bars = this.tasks.map((task) => {\n            const bar = new Bar(this, task);\n            this.layers.bar.appendChild(bar.group);\n            return bar;\n        });\n    }\n\n    make_arrows() {\n        this.arrows = [];\n        for (let task of this.tasks) {\n            let arrows = [];\n            arrows = task.dependencies\n                .map((task_id) => {\n                    const dependency = this.get_task(task_id);\n                    if (!dependency) return;\n                    const arrow = new Arrow(\n                        this,\n                        this.bars[dependency._index], // from_task\n                        this.bars[task._index] // to_task\n                    );\n                    this.layers.arrow.appendChild(arrow.element);\n                    return arrow;\n                })\n                .filter(Boolean); // filter falsy values\n            this.arrows = this.arrows.concat(arrows);\n        }\n    }\n\n    map_arrows_on_bars() {\n        for (let bar of this.bars) {\n            bar.arrows = this.arrows.filter((arrow) => {\n                return (\n                    arrow.from_task.task.id === bar.task.id ||\n                    arrow.to_task.task.id === bar.task.id\n                );\n            });\n        }\n    }\n\n    set_width() {\n        const cur_width = this.$svg.getBoundingClientRect().width;\n        const actual_width = this.$svg\n            .querySelector('.grid .grid-row')\n            .getAttribute('width');\n        if (cur_width < actual_width) {\n            this.$svg.setAttribute('width', actual_width);\n        }\n    }\n\n    set_scroll_position() {\n        const parent_element = this.$svg.parentElement;\n        if (!parent_element) return;\n\n        const hours_before_first_task = date_utils.diff(\n            this.get_oldest_starting_date(),\n            this.gantt_start,\n            'hour'\n        );\n\n        const scroll_pos =\n            (hours_before_first_task / this.options.step) *\n                this.options.column_width -\n            this.options.column_width;\n\n        parent_element.scrollLeft = scroll_pos;\n    }\n\n    bind_grid_click() {\n        $.on(\n            this.$svg,\n            this.options.popup_trigger,\n            '.grid-row, .grid-header',\n            () => {\n                this.unselect_all();\n                this.hide_popup();\n            }\n        );\n    }\n\n    bind_bar_events() {\n        let is_dragging = false;\n        let x_on_start = 0;\n        let y_on_start = 0;\n        let is_resizing_left = false;\n        let is_resizing_right = false;\n        let parent_bar_id = null;\n        let bars = []; // instanceof Bar\n        this.bar_being_dragged = null;\n\n        function action_in_progress() {\n            return is_dragging || is_resizing_left || is_resizing_right;\n        }\n\n        $.on(this.$svg, 'mousedown', '.bar-wrapper, .handle', (e, element) => {\n            const bar_wrapper = $.closest('.bar-wrapper', element);\n\n            if (element.classList.contains('left')) {\n                is_resizing_left = true;\n            } else if (element.classList.contains('right')) {\n                is_resizing_right = true;\n            } else if (element.classList.contains('bar-wrapper')) {\n                is_dragging = true;\n            }\n\n            bar_wrapper.classList.add('active');\n\n            x_on_start = e.offsetX;\n            y_on_start = e.offsetY;\n\n            parent_bar_id = bar_wrapper.getAttribute('data-id');\n            const ids = [\n                parent_bar_id,\n                ...this.get_all_dependent_tasks(parent_bar_id),\n            ];\n            bars = ids.map((id) => this.get_bar(id));\n\n            this.bar_being_dragged = parent_bar_id;\n\n            bars.forEach((bar) => {\n                const $bar = bar.$bar;\n                $bar.ox = $bar.getX();\n                $bar.oy = $bar.getY();\n                $bar.owidth = $bar.getWidth();\n                $bar.finaldx = 0;\n            });\n        });\n\n        $.on(this.$svg, 'mousemove', (e) => {\n            if (!action_in_progress()) return;\n            const dx = e.offsetX - x_on_start;\n            const dy = e.offsetY - y_on_start;\n\n            bars.forEach((bar) => {\n                const $bar = bar.$bar;\n                $bar.finaldx = this.get_snap_position(dx);\n                this.hide_popup();\n                if (is_resizing_left) {\n                    if (parent_bar_id === bar.task.id) {\n                        bar.update_bar_position({\n                            x: $bar.ox + $bar.finaldx,\n                            width: $bar.owidth - $bar.finaldx,\n                        });\n                    } else {\n                        bar.update_bar_position({\n                            x: $bar.ox + $bar.finaldx,\n                        });\n                    }\n                } else if (is_resizing_right) {\n                    if (parent_bar_id === bar.task.id) {\n                        bar.update_bar_position({\n                            width: $bar.owidth + $bar.finaldx,\n                        });\n                    }\n                } else if (is_dragging) {\n                    bar.update_bar_position({ x: $bar.ox + $bar.finaldx });\n                }\n            });\n        });\n\n        document.addEventListener('mouseup', (e) => {\n            if (is_dragging || is_resizing_left || is_resizing_right) {\n                bars.forEach((bar) => bar.group.classList.remove('active'));\n            }\n\n            is_dragging = false;\n            is_resizing_left = false;\n            is_resizing_right = false;\n        });\n\n        $.on(this.$svg, 'mouseup', (e) => {\n            this.bar_being_dragged = null;\n            bars.forEach((bar) => {\n                const $bar = bar.$bar;\n                if (!$bar.finaldx) return;\n                bar.date_changed();\n                bar.set_action_completed();\n            });\n        });\n\n        this.bind_bar_progress();\n    }\n\n    bind_bar_progress() {\n        let x_on_start = 0;\n        let y_on_start = 0;\n        let is_resizing = null;\n        let bar = null;\n        let $bar_progress = null;\n        let $bar = null;\n\n        $.on(this.$svg, 'mousedown', '.handle.progress', (e, handle) => {\n            is_resizing = true;\n            x_on_start = e.offsetX;\n            y_on_start = e.offsetY;\n\n            const $bar_wrapper = $.closest('.bar-wrapper', handle);\n            const id = $bar_wrapper.getAttribute('data-id');\n            bar = this.get_bar(id);\n\n            $bar_progress = bar.$bar_progress;\n            $bar = bar.$bar;\n\n            $bar_progress.finaldx = 0;\n            $bar_progress.owidth = $bar_progress.getWidth();\n            $bar_progress.min_dx = -$bar_progress.getWidth();\n            $bar_progress.max_dx = $bar.getWidth() - $bar_progress.getWidth();\n        });\n\n        $.on(this.$svg, 'mousemove', (e) => {\n            if (!is_resizing) return;\n            let dx = e.offsetX - x_on_start;\n            let dy = e.offsetY - y_on_start;\n\n            if (dx > $bar_progress.max_dx) {\n                dx = $bar_progress.max_dx;\n            }\n            if (dx < $bar_progress.min_dx) {\n                dx = $bar_progress.min_dx;\n            }\n\n            const $handle = bar.$handle_progress;\n            $.attr($bar_progress, 'width', $bar_progress.owidth + dx);\n            $.attr($handle, 'points', bar.get_progress_polygon_points());\n            $bar_progress.finaldx = dx;\n        });\n\n        $.on(this.$svg, 'mouseup', () => {\n            is_resizing = false;\n            if (!($bar_progress && $bar_progress.finaldx)) return;\n            bar.progress_changed();\n            bar.set_action_completed();\n        });\n    }\n\n    get_all_dependent_tasks(task_id) {\n        let out = [];\n        let to_process = [task_id];\n        while (to_process.length) {\n            const deps = to_process.reduce((acc, curr) => {\n                acc = acc.concat(this.dependency_map[curr]);\n                return acc;\n            }, []);\n\n            out = out.concat(deps);\n            to_process = deps.filter((d) => !to_process.includes(d));\n        }\n\n        return out.filter(Boolean);\n    }\n\n    get_snap_position(dx) {\n        let odx = dx,\n            rem,\n            position;\n\n        if (this.view_is(VIEW_MODE.WEEK)) {\n            rem = dx % (this.options.column_width / 7);\n            position =\n                odx -\n                rem +\n                (rem < this.options.column_width / 14\n                    ? 0\n                    : this.options.column_width / 7);\n        } else if (this.view_is(VIEW_MODE.MONTH)) {\n            rem = dx % (this.options.column_width / 30);\n            position =\n                odx -\n                rem +\n                (rem < this.options.column_width / 60\n                    ? 0\n                    : this.options.column_width / 30);\n        } else {\n            rem = dx % this.options.column_width;\n            position =\n                odx -\n                rem +\n                (rem < this.options.column_width / 2\n                    ? 0\n                    : this.options.column_width);\n        }\n        return position;\n    }\n\n    unselect_all() {\n        [...this.$svg.querySelectorAll('.bar-wrapper')].forEach((el) => {\n            el.classList.remove('active');\n        });\n    }\n\n    view_is(modes) {\n        if (typeof modes === 'string') {\n            return this.options.view_mode === modes;\n        }\n\n        if (Array.isArray(modes)) {\n            return modes.some((mode) => this.options.view_mode === mode);\n        }\n\n        return false;\n    }\n\n    get_task(id) {\n        return this.tasks.find((task) => {\n            return task.id === id;\n        });\n    }\n\n    get_bar(id) {\n        return this.bars.find((bar) => {\n            return bar.task.id === id;\n        });\n    }\n\n    show_popup(options) {\n        if (!this.popup) {\n            this.popup = new Popup(\n                this.popup_wrapper,\n                this.options.custom_popup_html\n            );\n        }\n        this.popup.show(options);\n    }\n\n    hide_popup() {\n        this.popup && this.popup.hide();\n    }\n\n    trigger_event(event, args) {\n        if (this.options['on_' + event]) {\n            this.options['on_' + event].apply(null, args);\n        }\n    }\n\n    /**\n     * Gets the oldest starting date from the list of tasks\n     *\n     * @returns Date\n     * @memberof Gantt\n     */\n    get_oldest_starting_date() {\n        return this.tasks\n            .map((task) => task._start)\n            .reduce((prev_date, cur_date) =>\n                cur_date <= prev_date ? cur_date : prev_date\n            );\n    }\n\n    /**\n     * Clear all elements from the parent svg element\n     *\n     * @memberof Gantt\n     */\n    clear() {\n        this.$svg.innerHTML = '';\n    }\n}\n\nGantt.VIEW_MODE = VIEW_MODE;\n\nfunction generate_id(task) {\n    return task.name + '_' + Math.random().toString(36).slice(2, 12);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}