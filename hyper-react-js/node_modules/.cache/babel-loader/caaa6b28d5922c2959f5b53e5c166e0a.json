{"ast":null,"code":"var _jsxFileName = \"/Users/josieldelgadillo/GitHub_M1/GitHub/hyper-react-v3.3.0/hyper-react-js/src/pages/uikit/Spinners.js\";\nimport React from 'react';\nimport { Row, Col, Card, Button } from 'react-bootstrap'; // components\n\nimport PageTitle from '../../components/PageTitle';\nimport Spinner from '../../components/Spinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst colors = ['primary', 'secondary', 'success', 'danger', 'warning', 'info', 'light', 'dark'];\n\nconst BorderedSpinners = () => {\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"mt-0 header-title\",\n        children: \"Border spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-muted mb-4\",\n        children: \"Use the border spinners for a lightweight loading indicator.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n};\n\n_c = BorderedSpinners;\n\nconst GrowingSpinners = () => {\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"mt-0 header-title\",\n        children: \"Growing spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-muted mb-4\",\n        children: \"You can go for growing spinner as well. While it doesn\\u2019t technically spin, it does repeatedly grow!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Spinner, {\n        type: \"grow\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = GrowingSpinners;\n\nconst Variants = () => {\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"mt-0 header-title\",\n        children: \"Variants\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-muted mb-4\",\n        children: [\"All standard visual variants are available for both animation styles by setting the\", ' ', /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"variant\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), \" property.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), colors.map((color, index) => {\n        return /*#__PURE__*/_jsxDEV(Spinner, {\n          className: \"m-2\",\n          color: color\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 28\n        }, this);\n      }), colors.map((color, index) => {\n        return /*#__PURE__*/_jsxDEV(Spinner, {\n          className: \"m-2\",\n          type: \"grow\",\n          color: color\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 28\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\n_c3 = Variants;\n\nconst SpinnersSizes = () => {\n  const sizes = ['lg', 'md', 'sm'];\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"mt-0 header-title\",\n        children: \"Size\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-muted mb-4\",\n        children: [\"Add \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"size\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this), \" attribute to make spinner with sizes including lg, md or sm.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [sizes.map((size, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-lg-6\",\n            children: [/*#__PURE__*/_jsxDEV(Spinner, {\n              className: \"text-primary m-2\",\n              color: \"primary\",\n              size: size\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Spinner, {\n              className: \"text-secondary m-2\",\n              type: \"grow\",\n              size: size\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 33\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 29\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-lg-6\",\n          children: [/*#__PURE__*/_jsxDEV(Spinner, {\n            className: \"spinner-border-sm m-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Spinner, {\n            type: \"grow\",\n            className: \"spinner-grow-sm m-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n};\n\n_c4 = SpinnersSizes;\n\nconst ButtonSpinners = () => {\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"mt-0 header-title\",\n        children: \"Buttons spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-muted mb-4\",\n        children: \"Use spinners within buttons to indicate an action is currently processing or taking place. You may also swap the text out of the spinner element and utilize button text as needed.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-lg-6\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button-list\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              color: \"primary\",\n              disabled: true,\n              children: [/*#__PURE__*/_jsxDEV(Spinner, {\n                className: \"spinner-border-sm\",\n                tag: \"span\",\n                color: \"white\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"visually-hidden\",\n                children: \"Loading...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              color: \"primary\",\n              disabled: true,\n              children: [/*#__PURE__*/_jsxDEV(Spinner, {\n                className: \"spinner-border-sm me-1\",\n                tag: \"span\",\n                color: \"white\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 33\n              }, this), \"Loading...\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-lg-6\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button-list\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              color: \"primary\",\n              disabled: true,\n              children: [/*#__PURE__*/_jsxDEV(Spinner, {\n                className: \"spinner-grow-sm\",\n                tag: \"span\",\n                color: \"white\",\n                type: \"grow\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"visually-hidden\",\n                children: \"Loading...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              color: \"primary\",\n              disabled: true,\n              children: [/*#__PURE__*/_jsxDEV(Spinner, {\n                className: \"spinner-grow-sm me-1\",\n                tag: \"span\",\n                color: \"white\",\n                type: \"grow\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 33\n              }, this), \"Loading...\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 9\n  }, this);\n};\n\n_c5 = ButtonSpinners;\n\nconst Spinners = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(PageTitle, {\n      breadCrumbItems: [{\n        label: 'Base UI',\n        path: '/ui/spinners'\n      }, {\n        label: 'Spinners',\n        path: '/ui/spinners',\n        active: true\n      }],\n      title: 'Spinners'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        xl: 6,\n        children: [/*#__PURE__*/_jsxDEV(BorderedSpinners, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Variants, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"mt-0 header-title\",\n              children: \"Alignment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-muted mb-4\",\n              children: \"Use flexbox utilities, float utilities, or text alignment utilities to place spinners exactly where you need them in any situation.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex justify-content-center\",\n              children: /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(SpinnersSizes, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        xl: 6,\n        children: [/*#__PURE__*/_jsxDEV(GrowingSpinners, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"mt-0 header-title\",\n              children: \"Placement\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-muted mb-4\",\n              children: [\"Use \", /*#__PURE__*/_jsxDEV(\"code\", {\n                children: \"flexbox utilities\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 37\n              }, this), \", \", /*#__PURE__*/_jsxDEV(\"code\", {\n                children: \"float utilities\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 69\n              }, this), \", or\", ' ', /*#__PURE__*/_jsxDEV(\"code\", {\n                children: \"text alignment\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 33\n              }, this), \" utilities to place spinners exactly where you need them in any situation.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex align-items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Loading...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Spinner, {\n                className: \"ms-auto\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ButtonSpinners, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_c6 = Spinners;\nexport default Spinners;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"BorderedSpinners\");\n$RefreshReg$(_c2, \"GrowingSpinners\");\n$RefreshReg$(_c3, \"Variants\");\n$RefreshReg$(_c4, \"SpinnersSizes\");\n$RefreshReg$(_c5, \"ButtonSpinners\");\n$RefreshReg$(_c6, \"Spinners\");","map":{"version":3,"names":["React","Row","Col","Card","Button","PageTitle","Spinner","colors","BorderedSpinners","GrowingSpinners","Variants","map","color","index","SpinnersSizes","sizes","size","ButtonSpinners","Spinners","label","path","active"],"sources":["/Users/josieldelgadillo/GitHub_M1/GitHub/hyper-react-v3.3.0/hyper-react-js/src/pages/uikit/Spinners.js"],"sourcesContent":["// @flow\nimport React from 'react';\nimport { Row, Col, Card, Button } from 'react-bootstrap';\n\n// components\nimport PageTitle from '../../components/PageTitle';\nimport Spinner from '../../components/Spinner';\n\nconst colors = ['primary', 'secondary', 'success', 'danger', 'warning', 'info', 'light', 'dark'];\n\nconst BorderedSpinners = () => {\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"mt-0 header-title\">Border spinner</h4>\n                <p className=\"text-muted mb-4\">Use the border spinners for a lightweight loading indicator.</p>\n                <Spinner />\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst GrowingSpinners = () => {\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"mt-0 header-title\">Growing spinner</h4>\n                <p className=\"text-muted mb-4\">\n                    You can go for growing spinner as well. While it doesn’t technically spin, it does repeatedly grow!\n                </p>\n                <Spinner type=\"grow\" />\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst Variants = () => {\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"mt-0 header-title\">Variants</h4>\n                <p className=\"text-muted mb-4\">\n                    All standard visual variants are available for both animation styles by setting the{' '}\n                    <code>variant</code> property.\n                </p>\n\n                {colors.map((color, index) => {\n                    return <Spinner key={index} className=\"m-2\" color={color} />;\n                })}\n\n                {colors.map((color, index) => {\n                    return <Spinner key={index} className=\"m-2\" type=\"grow\" color={color} />;\n                })}\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst SpinnersSizes = () => {\n    const sizes = ['lg', 'md', 'sm'];\n\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"mt-0 header-title\">Size</h4>\n                <p className=\"text-muted mb-4\">\n                    Add <code>size</code> attribute to make spinner with sizes including lg, md or sm.\n                </p>\n                <div className=\"row\">\n                    {sizes.map((size, index) => {\n                        return (\n                            <div key={index} className=\"col-lg-6\">\n                                <Spinner className=\"text-primary m-2\" color=\"primary\" size={size} />\n                                <Spinner className=\"text-secondary m-2\" type=\"grow\" size={size} />\n                            </div>\n                        );\n                    })}\n                    <div className=\"col-lg-6\">\n                        <Spinner className=\"spinner-border-sm m-2\" />\n                        <Spinner type=\"grow\" className=\"spinner-grow-sm m-2\" />\n                    </div>\n                </div>\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst ButtonSpinners = () => {\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"mt-0 header-title\">Buttons spinner</h4>\n                <p className=\"text-muted mb-4\">\n                    Use spinners within buttons to indicate an action is currently processing or taking place. You may\n                    also swap the text out of the spinner element and utilize button text as needed.\n                </p>\n                <div className=\"row\">\n                    <div className=\"col-lg-6\">\n                        <div className=\"button-list\">\n                            <Button color=\"primary\" disabled>\n                                <Spinner className=\"spinner-border-sm\" tag=\"span\" color=\"white\" />\n                                <span className=\"visually-hidden\">Loading...</span>\n                            </Button>\n\n                            <Button color=\"primary\" disabled>\n                                <Spinner className=\"spinner-border-sm me-1\" tag=\"span\" color=\"white\" />\n                                Loading...\n                            </Button>\n                        </div>\n                    </div>\n                    <div className=\"col-lg-6\">\n                        <div className=\"button-list\">\n                            <Button color=\"primary\" disabled>\n                                <Spinner className=\"spinner-grow-sm\" tag=\"span\" color=\"white\" type=\"grow\" />\n                                <span className=\"visually-hidden\">Loading...</span>\n                            </Button>\n\n                            <Button color=\"primary\" disabled>\n                                <Spinner className=\"spinner-grow-sm me-1\" tag=\"span\" color=\"white\" type=\"grow\" />\n                                Loading...\n                            </Button>\n                        </div>\n                    </div>\n                </div>\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst Spinners = (): React$Element<React$FragmentType> => {\n    return (\n        <>\n            <PageTitle\n                breadCrumbItems={[\n                    { label: 'Base UI', path: '/ui/spinners' },\n                    { label: 'Spinners', path: '/ui/spinners', active: true },\n                ]}\n                title={'Spinners'}\n            />\n\n            <Row>\n                <Col xl={6}>\n                    <BorderedSpinners />\n                    <Variants />\n\n                    <Card>\n                        <Card.Body>\n                            <h4 className=\"mt-0 header-title\">Alignment</h4>\n                            <p className=\"text-muted mb-4\">\n                                Use flexbox utilities, float utilities, or text alignment utilities to place spinners\n                                exactly where you need them in any situation.\n                            </p>\n                            <div className=\"d-flex justify-content-center\">\n                                <Spinner />\n                            </div>\n                        </Card.Body>\n                    </Card>\n\n                    <SpinnersSizes />\n                </Col>\n\n                <Col xl={6}>\n                    <GrowingSpinners />\n\n                    <Card>\n                        <Card.Body>\n                            <h4 className=\"mt-0 header-title\">Placement</h4>\n                            <p className=\"text-muted mb-4\">\n                                Use <code>flexbox utilities</code>, <code>float utilities</code>, or{' '}\n                                <code>text alignment</code> utilities to place spinners exactly where you need them in\n                                any situation.\n                            </p>\n                            <div className=\"d-flex align-items-center\">\n                                <strong>Loading...</strong>\n                                <Spinner className=\"ms-auto\" />\n                            </div>\n                        </Card.Body>\n                    </Card>\n\n                    <ButtonSpinners />\n                </Col>\n            </Row>\n        </>\n    );\n};\n\nexport default Spinners;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}