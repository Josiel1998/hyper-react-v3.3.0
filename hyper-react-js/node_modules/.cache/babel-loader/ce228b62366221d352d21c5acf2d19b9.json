{"ast":null,"code":"import { all, fork, put, takeEvery, call } from 'redux-saga/effects';\nimport { login as loginApi, logout as logoutApi, signup as signupApi, forgotPassword as forgotPasswordApi, forgotPasswordConfirm } from '../../helpers/';\nimport { APICore, setAuthorization } from '../../helpers/api/apiCore';\nimport { authApiResponseSuccess, authApiResponseError } from './actions';\nimport { AuthActionTypes } from './constants';\nconst api = new APICore();\n/**\n * Login the user\n * @param {*} payload - username and password\n */\n\nfunction* login(_ref) {\n  let {\n    payload: {\n      username,\n      password\n    }\n  } = _ref;\n\n  try {\n    const response = yield call(loginApi, {\n      username,\n      password\n    });\n    const user = response.data; // NOTE - You can change this according to response format from your api\n\n    api.setLoggedInUser(user);\n    setAuthorization(user['token']);\n    yield put(authApiResponseSuccess(AuthActionTypes.LOGIN_USER, user));\n  } catch (error) {\n    yield put(authApiResponseError(AuthActionTypes.LOGIN_USER, error));\n    api.setLoggedInUser(null);\n    setAuthorization(null);\n  }\n}\n/**\n * Logout the user\n */\n\n\nfunction* logout() {\n  try {\n    yield call(logoutApi);\n    api.setLoggedInUser(null);\n    setAuthorization(null);\n    yield put(authApiResponseSuccess(AuthActionTypes.LOGOUT_USER, {}));\n  } catch (error) {\n    yield put(authApiResponseError(AuthActionTypes.LOGOUT_USER, error));\n  }\n}\n\nfunction* signup(_ref2) {\n  let {\n    payload: {\n      fullname,\n      email,\n      password\n    }\n  } = _ref2;\n\n  try {\n    const response = yield call(signupApi, {\n      fullname,\n      email,\n      password\n    });\n    const user = response.data; // api.setLoggedInUser(user);\n    // setAuthorization(user['token']);\n\n    yield put(authApiResponseSuccess(AuthActionTypes.SIGNUP_USER, user));\n  } catch (error) {\n    yield put(authApiResponseError(AuthActionTypes.SIGNUP_USER, error));\n    api.setLoggedInUser(null);\n    setAuthorization(null);\n  }\n}\n\nfunction* forgotPassword(_ref3) {\n  let {\n    payload: {\n      username\n    }\n  } = _ref3;\n\n  try {\n    const response = yield call(forgotPasswordApi, {\n      username\n    });\n    yield put(authApiResponseSuccess(AuthActionTypes.FORGOT_PASSWORD, response.data));\n  } catch (error) {\n    yield put(authApiResponseError(AuthActionTypes.FORGOT_PASSWORD, error));\n  }\n}\n\nfunction* forgotPasswordChange(_ref4) {\n  let {\n    payload: {\n      data\n    }\n  } = _ref4;\n\n  try {\n    const response = yield call(forgotPasswordConfirm, data);\n    yield put(authApiResponseSuccess(AuthActionTypes.FORGOT_PASSWORD_CHANGE, response.data));\n  } catch (error) {\n    yield put(authApiResponseError(AuthActionTypes.FORGOT_PASSWORD_CHANGE, error));\n  }\n}\n\nexport function* watchLoginUser() {\n  yield takeEvery(AuthActionTypes.LOGIN_USER, login);\n}\nexport function* watchLogout() {\n  yield takeEvery(AuthActionTypes.LOGOUT_USER, logout);\n}\nexport function* watchSignup() {\n  yield takeEvery(AuthActionTypes.SIGNUP_USER, signup);\n}\nexport function* watchForgotPassword() {\n  yield takeEvery(AuthActionTypes.FORGOT_PASSWORD, forgotPassword);\n}\nexport function* watchForgotPasswordChange() {\n  yield takeEvery(AuthActionTypes.FORGOT_PASSWORD_CHANGE, forgotPasswordChange);\n}\n\nfunction* authSaga() {\n  yield all([fork(watchLoginUser), fork(watchLogout), fork(watchSignup), fork(watchForgotPassword), fork(watchForgotPasswordChange)]);\n}\n\nexport default authSaga;","map":{"version":3,"names":["all","fork","put","takeEvery","call","login","loginApi","logout","logoutApi","signup","signupApi","forgotPassword","forgotPasswordApi","forgotPasswordConfirm","APICore","setAuthorization","authApiResponseSuccess","authApiResponseError","AuthActionTypes","api","payload","username","password","response","user","data","setLoggedInUser","LOGIN_USER","error","LOGOUT_USER","fullname","email","SIGNUP_USER","FORGOT_PASSWORD","forgotPasswordChange","FORGOT_PASSWORD_CHANGE","watchLoginUser","watchLogout","watchSignup","watchForgotPassword","watchForgotPasswordChange","authSaga"],"sources":["/Users/josieldelgadillo/GitHub_M1/GitHub/hyper-react-v3.3.0/hyper-react-js/src/redux/auth/saga.js"],"sourcesContent":["// @flow\nimport { all, fork, put, takeEvery, call } from 'redux-saga/effects';\n\nimport {\n    login as loginApi,\n    logout as logoutApi,\n    signup as signupApi,\n    forgotPassword as forgotPasswordApi,\n    forgotPasswordConfirm,\n} from '../../helpers/';\n\nimport { APICore, setAuthorization } from '../../helpers/api/apiCore';\nimport { authApiResponseSuccess, authApiResponseError } from './actions';\nimport { AuthActionTypes } from './constants';\n\nconst api = new APICore();\n\n/**\n * Login the user\n * @param {*} payload - username and password\n */\nfunction* login({ payload: { username, password } }) {\n    try {\n        const response = yield call(loginApi, { username, password });\n        const user = response.data;\n        // NOTE - You can change this according to response format from your api\n        api.setLoggedInUser(user);\n        setAuthorization(user['token']);\n        yield put(authApiResponseSuccess(AuthActionTypes.LOGIN_USER, user));\n    } catch (error) {\n        yield put(authApiResponseError(AuthActionTypes.LOGIN_USER, error));\n        api.setLoggedInUser(null);\n        setAuthorization(null);\n    }\n}\n\n/**\n * Logout the user\n */\nfunction* logout() {\n    try {\n        yield call(logoutApi);\n        api.setLoggedInUser(null);\n        setAuthorization(null);\n        yield put(authApiResponseSuccess(AuthActionTypes.LOGOUT_USER, {}));\n    } catch (error) {\n        yield put(authApiResponseError(AuthActionTypes.LOGOUT_USER, error));\n    }\n}\n\nfunction* signup({ payload: { fullname, email, password } }) {\n    try {\n        const response = yield call(signupApi, { fullname, email, password });\n        const user = response.data;\n        // api.setLoggedInUser(user);\n        // setAuthorization(user['token']);\n        yield put(authApiResponseSuccess(AuthActionTypes.SIGNUP_USER, user));\n    } catch (error) {\n        yield put(authApiResponseError(AuthActionTypes.SIGNUP_USER, error));\n        api.setLoggedInUser(null);\n        setAuthorization(null);\n    }\n}\n\nfunction* forgotPassword({ payload: { username } }) {\n    try {\n        const response = yield call(forgotPasswordApi, { username });\n        yield put(authApiResponseSuccess(AuthActionTypes.FORGOT_PASSWORD, response.data));\n    } catch (error) {\n        yield put(authApiResponseError(AuthActionTypes.FORGOT_PASSWORD, error));\n    }\n}\n\nfunction* forgotPasswordChange({ payload: { data } }) {\n    try {\n        const response = yield call(forgotPasswordConfirm, data);\n        yield put(authApiResponseSuccess(AuthActionTypes.FORGOT_PASSWORD_CHANGE, response.data));\n    } catch (error) {\n        yield put(authApiResponseError(AuthActionTypes.FORGOT_PASSWORD_CHANGE, error));\n    }\n}\n\nexport function* watchLoginUser(): any {\n    yield takeEvery(AuthActionTypes.LOGIN_USER, login);\n}\n\nexport function* watchLogout(): any {\n    yield takeEvery(AuthActionTypes.LOGOUT_USER, logout);\n}\n\nexport function* watchSignup(): any {\n    yield takeEvery(AuthActionTypes.SIGNUP_USER, signup);\n}\n\nexport function* watchForgotPassword(): any {\n    yield takeEvery(AuthActionTypes.FORGOT_PASSWORD, forgotPassword);\n}\n\nexport function* watchForgotPasswordChange(): any {\n    yield takeEvery(AuthActionTypes.FORGOT_PASSWORD_CHANGE, forgotPasswordChange);\n}\n\nfunction* authSaga(): any {\n    yield all([\n        fork(watchLoginUser),\n        fork(watchLogout),\n        fork(watchSignup),\n        fork(watchForgotPassword),\n        fork(watchForgotPasswordChange),\n    ]);\n}\n\nexport default authSaga;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}