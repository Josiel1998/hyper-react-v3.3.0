{"ast":null,"code":"/**\n * marked - a markdown parser\n * Copyright (c) 2011-2022, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */\n\n/**\n * DO NOT EDIT THIS FILE\n * The code in this file is generated from files in ./src/\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) : typeof define === 'function' && define.amd ? define(['exports'], factory) : (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.marked = {}));\n})(this, function (exports) {\n  'use strict';\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    Object.defineProperty(Constructor, \"prototype\", {\n      writable: false\n    });\n    return Constructor;\n  }\n\n  function _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n  }\n\n  function _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n\n  function _createForOfIteratorHelperLoose(o, allowArrayLike) {\n    var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n    if (it) return (it = it.call(o)).next.bind(it);\n\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      return function () {\n        if (i >= o.length) return {\n          done: true\n        };\n        return {\n          done: false,\n          value: o[i++]\n        };\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  function getDefaults() {\n    return {\n      baseUrl: null,\n      breaks: false,\n      extensions: null,\n      gfm: true,\n      headerIds: true,\n      headerPrefix: '',\n      highlight: null,\n      langPrefix: 'language-',\n      mangle: true,\n      pedantic: false,\n      renderer: null,\n      sanitize: false,\n      sanitizer: null,\n      silent: false,\n      smartLists: false,\n      smartypants: false,\n      tokenizer: null,\n      walkTokens: null,\n      xhtml: false\n    };\n  }\n\n  exports.defaults = getDefaults();\n\n  function changeDefaults(newDefaults) {\n    exports.defaults = newDefaults;\n  }\n  /**\n   * Helpers\n   */\n\n\n  var escapeTest = /[&<>\"']/;\n  var escapeReplace = /[&<>\"']/g;\n  var escapeTestNoEncode = /[<>\"']|&(?!#?\\w+;)/;\n  var escapeReplaceNoEncode = /[<>\"']|&(?!#?\\w+;)/g;\n  var escapeReplacements = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n\n  var getEscapeReplacement = function getEscapeReplacement(ch) {\n    return escapeReplacements[ch];\n  };\n\n  function escape(html, encode) {\n    if (encode) {\n      if (escapeTest.test(html)) {\n        return html.replace(escapeReplace, getEscapeReplacement);\n      }\n    } else {\n      if (escapeTestNoEncode.test(html)) {\n        return html.replace(escapeReplaceNoEncode, getEscapeReplacement);\n      }\n    }\n\n    return html;\n  }\n\n  var unescapeTest = /&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig;\n  /**\n   * @param {string} html\n   */\n\n  function unescape(html) {\n    // explicitly match decimal, hex, and named HTML entities\n    return html.replace(unescapeTest, function (_, n) {\n      n = n.toLowerCase();\n      if (n === 'colon') return ':';\n\n      if (n.charAt(0) === '#') {\n        return n.charAt(1) === 'x' ? String.fromCharCode(parseInt(n.substring(2), 16)) : String.fromCharCode(+n.substring(1));\n      }\n\n      return '';\n    });\n  }\n\n  var caret = /(^|[^\\[])\\^/g;\n  /**\n   * @param {string | RegExp} regex\n   * @param {string} opt\n   */\n\n  function edit(regex, opt) {\n    regex = typeof regex === 'string' ? regex : regex.source;\n    opt = opt || '';\n    var obj = {\n      replace: function replace(name, val) {\n        val = val.source || val;\n        val = val.replace(caret, '$1');\n        regex = regex.replace(name, val);\n        return obj;\n      },\n      getRegex: function getRegex() {\n        return new RegExp(regex, opt);\n      }\n    };\n    return obj;\n  }\n\n  var nonWordAndColonTest = /[^\\w:]/g;\n  var originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\n  /**\n   * @param {boolean} sanitize\n   * @param {string} base\n   * @param {string} href\n   */\n\n  function cleanUrl(sanitize, base, href) {\n    if (sanitize) {\n      var prot;\n\n      try {\n        prot = decodeURIComponent(unescape(href)).replace(nonWordAndColonTest, '').toLowerCase();\n      } catch (e) {\n        return null;\n      }\n\n      if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n        return null;\n      }\n    }\n\n    if (base && !originIndependentUrl.test(href)) {\n      href = resolveUrl(base, href);\n    }\n\n    try {\n      href = encodeURI(href).replace(/%25/g, '%');\n    } catch (e) {\n      return null;\n    }\n\n    return href;\n  }\n\n  var baseUrls = {};\n  var justDomain = /^[^:]+:\\/*[^/]*$/;\n  var protocol = /^([^:]+:)[\\s\\S]*$/;\n  var domain = /^([^:]+:\\/*[^/]*)[\\s\\S]*$/;\n  /**\n   * @param {string} base\n   * @param {string} href\n   */\n\n  function resolveUrl(base, href) {\n    if (!baseUrls[' ' + base]) {\n      // we can ignore everything in base after the last slash of its path component,\n      // but we might need to add _that_\n      // https://tools.ietf.org/html/rfc3986#section-3\n      if (justDomain.test(base)) {\n        baseUrls[' ' + base] = base + '/';\n      } else {\n        baseUrls[' ' + base] = rtrim(base, '/', true);\n      }\n    }\n\n    base = baseUrls[' ' + base];\n    var relativeBase = base.indexOf(':') === -1;\n\n    if (href.substring(0, 2) === '//') {\n      if (relativeBase) {\n        return href;\n      }\n\n      return base.replace(protocol, '$1') + href;\n    } else if (href.charAt(0) === '/') {\n      if (relativeBase) {\n        return href;\n      }\n\n      return base.replace(domain, '$1') + href;\n    } else {\n      return base + href;\n    }\n  }\n\n  var noopTest = {\n    exec: function noopTest() {}\n  };\n\n  function merge(obj) {\n    var i = 1,\n        target,\n        key;\n\n    for (; i < arguments.length; i++) {\n      target = arguments[i];\n\n      for (key in target) {\n        if (Object.prototype.hasOwnProperty.call(target, key)) {\n          obj[key] = target[key];\n        }\n      }\n    }\n\n    return obj;\n  }\n\n  function splitCells(tableRow, count) {\n    // ensure that every cell-delimiting pipe has a space\n    // before it to distinguish it from an escaped pipe\n    var row = tableRow.replace(/\\|/g, function (match, offset, str) {\n      var escaped = false,\n          curr = offset;\n\n      while (--curr >= 0 && str[curr] === '\\\\') {\n        escaped = !escaped;\n      }\n\n      if (escaped) {\n        // odd number of slashes means | is escaped\n        // so we leave it alone\n        return '|';\n      } else {\n        // add space before unescaped |\n        return ' |';\n      }\n    }),\n        cells = row.split(/ \\|/);\n    var i = 0; // First/last cell in a row cannot be empty if it has no leading/trailing pipe\n\n    if (!cells[0].trim()) {\n      cells.shift();\n    }\n\n    if (cells.length > 0 && !cells[cells.length - 1].trim()) {\n      cells.pop();\n    }\n\n    if (cells.length > count) {\n      cells.splice(count);\n    } else {\n      while (cells.length < count) {\n        cells.push('');\n      }\n    }\n\n    for (; i < cells.length; i++) {\n      // leading or trailing whitespace is ignored per the gfm spec\n      cells[i] = cells[i].trim().replace(/\\\\\\|/g, '|');\n    }\n\n    return cells;\n  }\n  /**\n   * Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n   * /c*$/ is vulnerable to REDOS.\n   *\n   * @param {string} str\n   * @param {string} c\n   * @param {boolean} invert Remove suffix of non-c chars instead. Default falsey.\n   */\n\n\n  function rtrim(str, c, invert) {\n    var l = str.length;\n\n    if (l === 0) {\n      return '';\n    } // Length of suffix matching the invert condition.\n\n\n    var suffLen = 0; // Step left until we fail to match the invert condition.\n\n    while (suffLen < l) {\n      var currChar = str.charAt(l - suffLen - 1);\n\n      if (currChar === c && !invert) {\n        suffLen++;\n      } else if (currChar !== c && invert) {\n        suffLen++;\n      } else {\n        break;\n      }\n    }\n\n    return str.slice(0, l - suffLen);\n  }\n\n  function findClosingBracket(str, b) {\n    if (str.indexOf(b[1]) === -1) {\n      return -1;\n    }\n\n    var l = str.length;\n    var level = 0,\n        i = 0;\n\n    for (; i < l; i++) {\n      if (str[i] === '\\\\') {\n        i++;\n      } else if (str[i] === b[0]) {\n        level++;\n      } else if (str[i] === b[1]) {\n        level--;\n\n        if (level < 0) {\n          return i;\n        }\n      }\n    }\n\n    return -1;\n  }\n\n  function checkSanitizeDeprecation(opt) {\n    if (opt && opt.sanitize && !opt.silent) {\n      console.warn('marked(): sanitize and sanitizer parameters are deprecated since version 0.7.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/#/USING_ADVANCED.md#options');\n    }\n  } // copied from https://stackoverflow.com/a/5450113/806777\n\n  /**\n   * @param {string} pattern\n   * @param {number} count\n   */\n\n\n  function repeatString(pattern, count) {\n    if (count < 1) {\n      return '';\n    }\n\n    var result = '';\n\n    while (count > 1) {\n      if (count & 1) {\n        result += pattern;\n      }\n\n      count >>= 1;\n      pattern += pattern;\n    }\n\n    return result + pattern;\n  }\n\n  function outputLink(cap, link, raw, lexer) {\n    var href = link.href;\n    var title = link.title ? escape(link.title) : null;\n    var text = cap[1].replace(/\\\\([\\[\\]])/g, '$1');\n\n    if (cap[0].charAt(0) !== '!') {\n      lexer.state.inLink = true;\n      var token = {\n        type: 'link',\n        raw: raw,\n        href: href,\n        title: title,\n        text: text,\n        tokens: lexer.inlineTokens(text, [])\n      };\n      lexer.state.inLink = false;\n      return token;\n    }\n\n    return {\n      type: 'image',\n      raw: raw,\n      href: href,\n      title: title,\n      text: escape(text)\n    };\n  }\n\n  function indentCodeCompensation(raw, text) {\n    var matchIndentToCode = raw.match(/^(\\s+)(?:```)/);\n\n    if (matchIndentToCode === null) {\n      return text;\n    }\n\n    var indentToCode = matchIndentToCode[1];\n    return text.split('\\n').map(function (node) {\n      var matchIndentInNode = node.match(/^\\s+/);\n\n      if (matchIndentInNode === null) {\n        return node;\n      }\n\n      var indentInNode = matchIndentInNode[0];\n\n      if (indentInNode.length >= indentToCode.length) {\n        return node.slice(indentToCode.length);\n      }\n\n      return node;\n    }).join('\\n');\n  }\n  /**\n   * Tokenizer\n   */\n\n\n  var Tokenizer = /*#__PURE__*/function () {\n    function Tokenizer(options) {\n      this.options = options || exports.defaults;\n    }\n\n    var _proto = Tokenizer.prototype;\n\n    _proto.space = function space(src) {\n      var cap = this.rules.block.newline.exec(src);\n\n      if (cap && cap[0].length > 0) {\n        return {\n          type: 'space',\n          raw: cap[0]\n        };\n      }\n    };\n\n    _proto.code = function code(src) {\n      var cap = this.rules.block.code.exec(src);\n\n      if (cap) {\n        var text = cap[0].replace(/^ {1,4}/gm, '');\n        return {\n          type: 'code',\n          raw: cap[0],\n          codeBlockStyle: 'indented',\n          text: !this.options.pedantic ? rtrim(text, '\\n') : text\n        };\n      }\n    };\n\n    _proto.fences = function fences(src) {\n      var cap = this.rules.block.fences.exec(src);\n\n      if (cap) {\n        var raw = cap[0];\n        var text = indentCodeCompensation(raw, cap[3] || '');\n        return {\n          type: 'code',\n          raw: raw,\n          lang: cap[2] ? cap[2].trim() : cap[2],\n          text: text\n        };\n      }\n    };\n\n    _proto.heading = function heading(src) {\n      var cap = this.rules.block.heading.exec(src);\n\n      if (cap) {\n        var text = cap[2].trim(); // remove trailing #s\n\n        if (/#$/.test(text)) {\n          var trimmed = rtrim(text, '#');\n\n          if (this.options.pedantic) {\n            text = trimmed.trim();\n          } else if (!trimmed || / $/.test(trimmed)) {\n            // CommonMark requires space before trailing #s\n            text = trimmed.trim();\n          }\n        }\n\n        var token = {\n          type: 'heading',\n          raw: cap[0],\n          depth: cap[1].length,\n          text: text,\n          tokens: []\n        };\n        this.lexer.inline(token.text, token.tokens);\n        return token;\n      }\n    };\n\n    _proto.hr = function hr(src) {\n      var cap = this.rules.block.hr.exec(src);\n\n      if (cap) {\n        return {\n          type: 'hr',\n          raw: cap[0]\n        };\n      }\n    };\n\n    _proto.blockquote = function blockquote(src) {\n      var cap = this.rules.block.blockquote.exec(src);\n\n      if (cap) {\n        var text = cap[0].replace(/^ *>[ \\t]?/gm, '');\n        return {\n          type: 'blockquote',\n          raw: cap[0],\n          tokens: this.lexer.blockTokens(text, []),\n          text: text\n        };\n      }\n    };\n\n    _proto.list = function list(src) {\n      var cap = this.rules.block.list.exec(src);\n\n      if (cap) {\n        var raw, istask, ischecked, indent, i, blankLine, endsWithBlankLine, line, nextLine, rawLine, itemContents, endEarly;\n        var bull = cap[1].trim();\n        var isordered = bull.length > 1;\n        var list = {\n          type: 'list',\n          raw: '',\n          ordered: isordered,\n          start: isordered ? +bull.slice(0, -1) : '',\n          loose: false,\n          items: []\n        };\n        bull = isordered ? \"\\\\d{1,9}\\\\\" + bull.slice(-1) : \"\\\\\" + bull;\n\n        if (this.options.pedantic) {\n          bull = isordered ? bull : '[*+-]';\n        } // Get next list item\n\n\n        var itemRegex = new RegExp(\"^( {0,3}\" + bull + \")((?:[\\t ][^\\\\n]*)?(?:\\\\n|$))\"); // Check if current bullet point can start a new List Item\n\n        while (src) {\n          endEarly = false;\n\n          if (!(cap = itemRegex.exec(src))) {\n            break;\n          }\n\n          if (this.rules.block.hr.test(src)) {\n            // End list if bullet was actually HR (possibly move into itemRegex?)\n            break;\n          }\n\n          raw = cap[0];\n          src = src.substring(raw.length);\n          line = cap[2].split('\\n', 1)[0];\n          nextLine = src.split('\\n', 1)[0];\n\n          if (this.options.pedantic) {\n            indent = 2;\n            itemContents = line.trimLeft();\n          } else {\n            indent = cap[2].search(/[^ ]/); // Find first non-space char\n\n            indent = indent > 4 ? 1 : indent; // Treat indented code blocks (> 4 spaces) as having only 1 indent\n\n            itemContents = line.slice(indent);\n            indent += cap[1].length;\n          }\n\n          blankLine = false;\n\n          if (!line && /^ *$/.test(nextLine)) {\n            // Items begin with at most one blank line\n            raw += nextLine + '\\n';\n            src = src.substring(nextLine.length + 1);\n            endEarly = true;\n          }\n\n          if (!endEarly) {\n            var nextBulletRegex = new RegExp(\"^ {0,\" + Math.min(3, indent - 1) + \"}(?:[*+-]|\\\\d{1,9}[.)])((?: [^\\\\n]*)?(?:\\\\n|$))\");\n            var hrRegex = new RegExp(\"^ {0,\" + Math.min(3, indent - 1) + \"}((?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$)\");\n            var fencesBeginRegex = new RegExp(\"^( {0,\" + Math.min(3, indent - 1) + \"})(```|~~~)\"); // Check if following lines should be included in List Item\n\n            while (src) {\n              rawLine = src.split('\\n', 1)[0];\n              line = rawLine; // Re-align to follow commonmark nesting rules\n\n              if (this.options.pedantic) {\n                line = line.replace(/^ {1,4}(?=( {4})*[^ ])/g, '  ');\n              } // End list item if found code fences\n\n\n              if (fencesBeginRegex.test(line)) {\n                break;\n              } // End list item if found start of new heading\n\n\n              if (this.rules.block.heading.test(line)) {\n                break;\n              } // End list item if found start of new bullet\n\n\n              if (nextBulletRegex.test(line)) {\n                break;\n              } // Horizontal rule found\n\n\n              if (hrRegex.test(src)) {\n                break;\n              }\n\n              if (line.search(/[^ ]/) >= indent || !line.trim()) {\n                // Dedent if possible\n                itemContents += '\\n' + line.slice(indent);\n              } else if (!blankLine) {\n                // Until blank line, item doesn't need indentation\n                itemContents += '\\n' + line;\n              } else {\n                // Otherwise, improper indentation ends this item\n                break;\n              }\n\n              if (!blankLine && !line.trim()) {\n                // Check if current line is blank\n                blankLine = true;\n              }\n\n              raw += rawLine + '\\n';\n              src = src.substring(rawLine.length + 1);\n            }\n          }\n\n          if (!list.loose) {\n            // If the previous item ended with a blank line, the list is loose\n            if (endsWithBlankLine) {\n              list.loose = true;\n            } else if (/\\n *\\n *$/.test(raw)) {\n              endsWithBlankLine = true;\n            }\n          } // Check for task list items\n\n\n          if (this.options.gfm) {\n            istask = /^\\[[ xX]\\] /.exec(itemContents);\n\n            if (istask) {\n              ischecked = istask[0] !== '[ ] ';\n              itemContents = itemContents.replace(/^\\[[ xX]\\] +/, '');\n            }\n          }\n\n          list.items.push({\n            type: 'list_item',\n            raw: raw,\n            task: !!istask,\n            checked: ischecked,\n            loose: false,\n            text: itemContents\n          });\n          list.raw += raw;\n        } // Do not consume newlines at end of final item. Alternatively, make itemRegex *start* with any newlines to simplify/speed up endsWithBlankLine logic\n\n\n        list.items[list.items.length - 1].raw = raw.trimRight();\n        list.items[list.items.length - 1].text = itemContents.trimRight();\n        list.raw = list.raw.trimRight();\n        var l = list.items.length; // Item child tokens handled here at end because we needed to have the final item to trim it first\n\n        for (i = 0; i < l; i++) {\n          this.lexer.state.top = false;\n          list.items[i].tokens = this.lexer.blockTokens(list.items[i].text, []);\n          var spacers = list.items[i].tokens.filter(function (t) {\n            return t.type === 'space';\n          });\n          var hasMultipleLineBreaks = spacers.every(function (t) {\n            var chars = t.raw.split('');\n            var lineBreaks = 0;\n\n            for (var _iterator = _createForOfIteratorHelperLoose(chars), _step; !(_step = _iterator()).done;) {\n              var _char = _step.value;\n\n              if (_char === '\\n') {\n                lineBreaks += 1;\n              }\n\n              if (lineBreaks > 1) {\n                return true;\n              }\n            }\n\n            return false;\n          });\n\n          if (!list.loose && spacers.length && hasMultipleLineBreaks) {\n            // Having a single line break doesn't mean a list is loose. A single line break is terminating the last list item\n            list.loose = true;\n            list.items[i].loose = true;\n          }\n        }\n\n        return list;\n      }\n    };\n\n    _proto.html = function html(src) {\n      var cap = this.rules.block.html.exec(src);\n\n      if (cap) {\n        var token = {\n          type: 'html',\n          raw: cap[0],\n          pre: !this.options.sanitizer && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n          text: cap[0]\n        };\n\n        if (this.options.sanitize) {\n          token.type = 'paragraph';\n          token.text = this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0]);\n          token.tokens = [];\n          this.lexer.inline(token.text, token.tokens);\n        }\n\n        return token;\n      }\n    };\n\n    _proto.def = function def(src) {\n      var cap = this.rules.block.def.exec(src);\n\n      if (cap) {\n        if (cap[3]) cap[3] = cap[3].substring(1, cap[3].length - 1);\n        var tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n        return {\n          type: 'def',\n          tag: tag,\n          raw: cap[0],\n          href: cap[2],\n          title: cap[3]\n        };\n      }\n    };\n\n    _proto.table = function table(src) {\n      var cap = this.rules.block.table.exec(src);\n\n      if (cap) {\n        var item = {\n          type: 'table',\n          header: splitCells(cap[1]).map(function (c) {\n            return {\n              text: c\n            };\n          }),\n          align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n          rows: cap[3] && cap[3].trim() ? cap[3].replace(/\\n[ \\t]*$/, '').split('\\n') : []\n        };\n\n        if (item.header.length === item.align.length) {\n          item.raw = cap[0];\n          var l = item.align.length;\n          var i, j, k, row;\n\n          for (i = 0; i < l; i++) {\n            if (/^ *-+: *$/.test(item.align[i])) {\n              item.align[i] = 'right';\n            } else if (/^ *:-+: *$/.test(item.align[i])) {\n              item.align[i] = 'center';\n            } else if (/^ *:-+ *$/.test(item.align[i])) {\n              item.align[i] = 'left';\n            } else {\n              item.align[i] = null;\n            }\n          }\n\n          l = item.rows.length;\n\n          for (i = 0; i < l; i++) {\n            item.rows[i] = splitCells(item.rows[i], item.header.length).map(function (c) {\n              return {\n                text: c\n              };\n            });\n          } // parse child tokens inside headers and cells\n          // header child tokens\n\n\n          l = item.header.length;\n\n          for (j = 0; j < l; j++) {\n            item.header[j].tokens = [];\n            this.lexer.inline(item.header[j].text, item.header[j].tokens);\n          } // cell child tokens\n\n\n          l = item.rows.length;\n\n          for (j = 0; j < l; j++) {\n            row = item.rows[j];\n\n            for (k = 0; k < row.length; k++) {\n              row[k].tokens = [];\n              this.lexer.inline(row[k].text, row[k].tokens);\n            }\n          }\n\n          return item;\n        }\n      }\n    };\n\n    _proto.lheading = function lheading(src) {\n      var cap = this.rules.block.lheading.exec(src);\n\n      if (cap) {\n        var token = {\n          type: 'heading',\n          raw: cap[0],\n          depth: cap[2].charAt(0) === '=' ? 1 : 2,\n          text: cap[1],\n          tokens: []\n        };\n        this.lexer.inline(token.text, token.tokens);\n        return token;\n      }\n    };\n\n    _proto.paragraph = function paragraph(src) {\n      var cap = this.rules.block.paragraph.exec(src);\n\n      if (cap) {\n        var token = {\n          type: 'paragraph',\n          raw: cap[0],\n          text: cap[1].charAt(cap[1].length - 1) === '\\n' ? cap[1].slice(0, -1) : cap[1],\n          tokens: []\n        };\n        this.lexer.inline(token.text, token.tokens);\n        return token;\n      }\n    };\n\n    _proto.text = function text(src) {\n      var cap = this.rules.block.text.exec(src);\n\n      if (cap) {\n        var token = {\n          type: 'text',\n          raw: cap[0],\n          text: cap[0],\n          tokens: []\n        };\n        this.lexer.inline(token.text, token.tokens);\n        return token;\n      }\n    };\n\n    _proto.escape = function escape$1(src) {\n      var cap = this.rules.inline.escape.exec(src);\n\n      if (cap) {\n        return {\n          type: 'escape',\n          raw: cap[0],\n          text: escape(cap[1])\n        };\n      }\n    };\n\n    _proto.tag = function tag(src) {\n      var cap = this.rules.inline.tag.exec(src);\n\n      if (cap) {\n        if (!this.lexer.state.inLink && /^<a /i.test(cap[0])) {\n          this.lexer.state.inLink = true;\n        } else if (this.lexer.state.inLink && /^<\\/a>/i.test(cap[0])) {\n          this.lexer.state.inLink = false;\n        }\n\n        if (!this.lexer.state.inRawBlock && /^<(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n          this.lexer.state.inRawBlock = true;\n        } else if (this.lexer.state.inRawBlock && /^<\\/(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n          this.lexer.state.inRawBlock = false;\n        }\n\n        return {\n          type: this.options.sanitize ? 'text' : 'html',\n          raw: cap[0],\n          inLink: this.lexer.state.inLink,\n          inRawBlock: this.lexer.state.inRawBlock,\n          text: this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0]) : cap[0]\n        };\n      }\n    };\n\n    _proto.link = function link(src) {\n      var cap = this.rules.inline.link.exec(src);\n\n      if (cap) {\n        var trimmedUrl = cap[2].trim();\n\n        if (!this.options.pedantic && /^</.test(trimmedUrl)) {\n          // commonmark requires matching angle brackets\n          if (!/>$/.test(trimmedUrl)) {\n            return;\n          } // ending angle bracket cannot be escaped\n\n\n          var rtrimSlash = rtrim(trimmedUrl.slice(0, -1), '\\\\');\n\n          if ((trimmedUrl.length - rtrimSlash.length) % 2 === 0) {\n            return;\n          }\n        } else {\n          // find closing parenthesis\n          var lastParenIndex = findClosingBracket(cap[2], '()');\n\n          if (lastParenIndex > -1) {\n            var start = cap[0].indexOf('!') === 0 ? 5 : 4;\n            var linkLen = start + cap[1].length + lastParenIndex;\n            cap[2] = cap[2].substring(0, lastParenIndex);\n            cap[0] = cap[0].substring(0, linkLen).trim();\n            cap[3] = '';\n          }\n        }\n\n        var href = cap[2];\n        var title = '';\n\n        if (this.options.pedantic) {\n          // split pedantic href and title\n          var link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n\n          if (link) {\n            href = link[1];\n            title = link[3];\n          }\n        } else {\n          title = cap[3] ? cap[3].slice(1, -1) : '';\n        }\n\n        href = href.trim();\n\n        if (/^</.test(href)) {\n          if (this.options.pedantic && !/>$/.test(trimmedUrl)) {\n            // pedantic allows starting angle bracket without ending angle bracket\n            href = href.slice(1);\n          } else {\n            href = href.slice(1, -1);\n          }\n        }\n\n        return outputLink(cap, {\n          href: href ? href.replace(this.rules.inline._escapes, '$1') : href,\n          title: title ? title.replace(this.rules.inline._escapes, '$1') : title\n        }, cap[0], this.lexer);\n      }\n    };\n\n    _proto.reflink = function reflink(src, links) {\n      var cap;\n\n      if ((cap = this.rules.inline.reflink.exec(src)) || (cap = this.rules.inline.nolink.exec(src))) {\n        var link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n        link = links[link.toLowerCase()];\n\n        if (!link || !link.href) {\n          var text = cap[0].charAt(0);\n          return {\n            type: 'text',\n            raw: text,\n            text: text\n          };\n        }\n\n        return outputLink(cap, link, cap[0], this.lexer);\n      }\n    };\n\n    _proto.emStrong = function emStrong(src, maskedSrc, prevChar) {\n      if (prevChar === void 0) {\n        prevChar = '';\n      }\n\n      var match = this.rules.inline.emStrong.lDelim.exec(src);\n      if (!match) return; // _ can't be between two alphanumerics. \\p{L}\\p{N} includes non-english alphabet/numbers as well\n\n      if (match[3] && prevChar.match(/(?:[0-9A-Za-z\\xAA\\xB2\\xB3\\xB5\\xB9\\xBA\\xBC-\\xBE\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05D0-\\u05EA\\u05EF-\\u05F2\\u0620-\\u064A\\u0660-\\u0669\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07C0-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086A\\u0870-\\u0887\\u0889-\\u088E\\u08A0-\\u08C9\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0966-\\u096F\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09E6-\\u09F1\\u09F4-\\u09F9\\u09FC\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A6F\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AE6-\\u0AEF\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B66-\\u0B6F\\u0B71-\\u0B77\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0BE6-\\u0BF2\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C5D\\u0C60\\u0C61\\u0C66-\\u0C6F\\u0C78-\\u0C7E\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDD\\u0CDE\\u0CE0\\u0CE1\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D04-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D58-\\u0D61\\u0D66-\\u0D78\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DE6-\\u0DEF\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E86-\\u0E8A\\u0E8C-\\u0EA3\\u0EA5\\u0EA7-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F20-\\u0F33\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F-\\u1049\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u1090-\\u1099\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1369-\\u137C\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u1711\\u171F-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u17E0-\\u17E9\\u17F0-\\u17F9\\u1810-\\u1819\\u1820-\\u1878\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19DA\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1A80-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4C\\u1B50-\\u1B59\\u1B83-\\u1BA0\\u1BAE-\\u1BE5\\u1C00-\\u1C23\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1C80-\\u1C88\\u1C90-\\u1CBA\\u1CBD-\\u1CBF\\u1CE9-\\u1CEC\\u1CEE-\\u1CF3\\u1CF5\\u1CF6\\u1CFA\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2070\\u2071\\u2074-\\u2079\\u207F-\\u2089\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2150-\\u2189\\u2460-\\u249B\\u24EA-\\u24FF\\u2776-\\u2793\\u2C00-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2CFD\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u3192-\\u3195\\u31A0-\\u31BF\\u31F0-\\u31FF\\u3220-\\u3229\\u3248-\\u324F\\u3251-\\u325F\\u3280-\\u3289\\u32B1-\\u32BF\\u3400-\\u4DBF\\u4E00-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7CA\\uA7D0\\uA7D1\\uA7D3\\uA7D5-\\uA7D9\\uA7F2-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA830-\\uA835\\uA840-\\uA873\\uA882-\\uA8B3\\uA8D0-\\uA8D9\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA8FE\\uA900-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF-\\uA9D9\\uA9E0-\\uA9E4\\uA9E6-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB69\\uAB70-\\uABE2\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD07-\\uDD33\\uDD40-\\uDD78\\uDD8A\\uDD8B\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDEE1-\\uDEFB\\uDF00-\\uDF23\\uDF2D-\\uDF4A\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCA0-\\uDCA9\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDD70-\\uDD7A\\uDD7C-\\uDD8A\\uDD8C-\\uDD92\\uDD94\\uDD95\\uDD97-\\uDDA1\\uDDA3-\\uDDB1\\uDDB3-\\uDDB9\\uDDBB\\uDDBC\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67\\uDF80-\\uDF85\\uDF87-\\uDFB0\\uDFB2-\\uDFBA]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC58-\\uDC76\\uDC79-\\uDC9E\\uDCA7-\\uDCAF\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDCFB-\\uDD1B\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBC-\\uDDCF\\uDDD2-\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE35\\uDE40-\\uDE48\\uDE60-\\uDE7E\\uDE80-\\uDE9F\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDEEB-\\uDEEF\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF58-\\uDF72\\uDF78-\\uDF91\\uDFA9-\\uDFAF]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2\\uDCFA-\\uDD23\\uDD30-\\uDD39\\uDE60-\\uDE7E\\uDE80-\\uDEA9\\uDEB0\\uDEB1\\uDF00-\\uDF27\\uDF30-\\uDF45\\uDF51-\\uDF54\\uDF70-\\uDF81\\uDFB0-\\uDFCB\\uDFE0-\\uDFF6]|\\uD804[\\uDC03-\\uDC37\\uDC52-\\uDC6F\\uDC71\\uDC72\\uDC75\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDCF0-\\uDCF9\\uDD03-\\uDD26\\uDD36-\\uDD3F\\uDD44\\uDD47\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDD0-\\uDDDA\\uDDDC\\uDDE1-\\uDDF4\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDEF0-\\uDEF9\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC00-\\uDC34\\uDC47-\\uDC4A\\uDC50-\\uDC59\\uDC5F-\\uDC61\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDCD0-\\uDCD9\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE50-\\uDE59\\uDE80-\\uDEAA\\uDEB8\\uDEC0-\\uDEC9\\uDF00-\\uDF1A\\uDF30-\\uDF3B\\uDF40-\\uDF46]|\\uD806[\\uDC00-\\uDC2B\\uDCA0-\\uDCF2\\uDCFF-\\uDD06\\uDD09\\uDD0C-\\uDD13\\uDD15\\uDD16\\uDD18-\\uDD2F\\uDD3F\\uDD41\\uDD50-\\uDD59\\uDDA0-\\uDDA7\\uDDAA-\\uDDD0\\uDDE1\\uDDE3\\uDE00\\uDE0B-\\uDE32\\uDE3A\\uDE50\\uDE5C-\\uDE89\\uDE9D\\uDEB0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC2E\\uDC40\\uDC50-\\uDC6C\\uDC72-\\uDC8F\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD30\\uDD46\\uDD50-\\uDD59\\uDD60-\\uDD65\\uDD67\\uDD68\\uDD6A-\\uDD89\\uDD98\\uDDA0-\\uDDA9\\uDEE0-\\uDEF2\\uDFB0\\uDFC0-\\uDFD4]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|\\uD80B[\\uDF90-\\uDFF0]|[\\uD80C\\uD81C-\\uD820\\uD822\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879\\uD880-\\uD883][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDE60-\\uDE69\\uDE70-\\uDEBE\\uDEC0-\\uDEC9\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF50-\\uDF59\\uDF5B-\\uDF61\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDE40-\\uDE96\\uDF00-\\uDF4A\\uDF50\\uDF93-\\uDF9F\\uDFE0\\uDFE1\\uDFE3]|\\uD821[\\uDC00-\\uDFF7]|\\uD823[\\uDC00-\\uDCD5\\uDD00-\\uDD08]|\\uD82B[\\uDFF0-\\uDFF3\\uDFF5-\\uDFFB\\uDFFD\\uDFFE]|\\uD82C[\\uDC00-\\uDD22\\uDD50-\\uDD52\\uDD64-\\uDD67\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD834[\\uDEE0-\\uDEF3\\uDF60-\\uDF78]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB\\uDFCE-\\uDFFF]|\\uD837[\\uDF00-\\uDF1E]|\\uD838[\\uDD00-\\uDD2C\\uDD37-\\uDD3D\\uDD40-\\uDD49\\uDD4E\\uDE90-\\uDEAD\\uDEC0-\\uDEEB\\uDEF0-\\uDEF9]|\\uD839[\\uDFE0-\\uDFE6\\uDFE8-\\uDFEB\\uDFED\\uDFEE\\uDFF0-\\uDFFE]|\\uD83A[\\uDC00-\\uDCC4\\uDCC7-\\uDCCF\\uDD00-\\uDD43\\uDD4B\\uDD50-\\uDD59]|\\uD83B[\\uDC71-\\uDCAB\\uDCAD-\\uDCAF\\uDCB1-\\uDCB4\\uDD01-\\uDD2D\\uDD2F-\\uDD3D\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD83C[\\uDD00-\\uDD0C]|\\uD83E[\\uDFF0-\\uDFF9]|\\uD869[\\uDC00-\\uDEDF\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF38\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D]|\\uD884[\\uDC00-\\uDF4A])/)) return;\n      var nextChar = match[1] || match[2] || '';\n\n      if (!nextChar || nextChar && (prevChar === '' || this.rules.inline.punctuation.exec(prevChar))) {\n        var lLength = match[0].length - 1;\n        var rDelim,\n            rLength,\n            delimTotal = lLength,\n            midDelimTotal = 0;\n        var endReg = match[0][0] === '*' ? this.rules.inline.emStrong.rDelimAst : this.rules.inline.emStrong.rDelimUnd;\n        endReg.lastIndex = 0; // Clip maskedSrc to same section of string as src (move to lexer?)\n\n        maskedSrc = maskedSrc.slice(-1 * src.length + lLength);\n\n        while ((match = endReg.exec(maskedSrc)) != null) {\n          rDelim = match[1] || match[2] || match[3] || match[4] || match[5] || match[6];\n          if (!rDelim) continue; // skip single * in __abc*abc__\n\n          rLength = rDelim.length;\n\n          if (match[3] || match[4]) {\n            // found another Left Delim\n            delimTotal += rLength;\n            continue;\n          } else if (match[5] || match[6]) {\n            // either Left or Right Delim\n            if (lLength % 3 && !((lLength + rLength) % 3)) {\n              midDelimTotal += rLength;\n              continue; // CommonMark Emphasis Rules 9-10\n            }\n          }\n\n          delimTotal -= rLength;\n          if (delimTotal > 0) continue; // Haven't found enough closing delimiters\n          // Remove extra characters. *a*** -> *a*\n\n          rLength = Math.min(rLength, rLength + delimTotal + midDelimTotal); // Create `em` if smallest delimiter has odd char count. *a***\n\n          if (Math.min(lLength, rLength) % 2) {\n            var _text = src.slice(1, lLength + match.index + rLength);\n\n            return {\n              type: 'em',\n              raw: src.slice(0, lLength + match.index + rLength + 1),\n              text: _text,\n              tokens: this.lexer.inlineTokens(_text, [])\n            };\n          } // Create 'strong' if smallest delimiter has even char count. **a***\n\n\n          var text = src.slice(2, lLength + match.index + rLength - 1);\n          return {\n            type: 'strong',\n            raw: src.slice(0, lLength + match.index + rLength + 1),\n            text: text,\n            tokens: this.lexer.inlineTokens(text, [])\n          };\n        }\n      }\n    };\n\n    _proto.codespan = function codespan(src) {\n      var cap = this.rules.inline.code.exec(src);\n\n      if (cap) {\n        var text = cap[2].replace(/\\n/g, ' ');\n        var hasNonSpaceChars = /[^ ]/.test(text);\n        var hasSpaceCharsOnBothEnds = /^ /.test(text) && / $/.test(text);\n\n        if (hasNonSpaceChars && hasSpaceCharsOnBothEnds) {\n          text = text.substring(1, text.length - 1);\n        }\n\n        text = escape(text, true);\n        return {\n          type: 'codespan',\n          raw: cap[0],\n          text: text\n        };\n      }\n    };\n\n    _proto.br = function br(src) {\n      var cap = this.rules.inline.br.exec(src);\n\n      if (cap) {\n        return {\n          type: 'br',\n          raw: cap[0]\n        };\n      }\n    };\n\n    _proto.del = function del(src) {\n      var cap = this.rules.inline.del.exec(src);\n\n      if (cap) {\n        return {\n          type: 'del',\n          raw: cap[0],\n          text: cap[2],\n          tokens: this.lexer.inlineTokens(cap[2], [])\n        };\n      }\n    };\n\n    _proto.autolink = function autolink(src, mangle) {\n      var cap = this.rules.inline.autolink.exec(src);\n\n      if (cap) {\n        var text, href;\n\n        if (cap[2] === '@') {\n          text = escape(this.options.mangle ? mangle(cap[1]) : cap[1]);\n          href = 'mailto:' + text;\n        } else {\n          text = escape(cap[1]);\n          href = text;\n        }\n\n        return {\n          type: 'link',\n          raw: cap[0],\n          text: text,\n          href: href,\n          tokens: [{\n            type: 'text',\n            raw: text,\n            text: text\n          }]\n        };\n      }\n    };\n\n    _proto.url = function url(src, mangle) {\n      var cap;\n\n      if (cap = this.rules.inline.url.exec(src)) {\n        var text, href;\n\n        if (cap[2] === '@') {\n          text = escape(this.options.mangle ? mangle(cap[0]) : cap[0]);\n          href = 'mailto:' + text;\n        } else {\n          // do extended autolink path validation\n          var prevCapZero;\n\n          do {\n            prevCapZero = cap[0];\n            cap[0] = this.rules.inline._backpedal.exec(cap[0])[0];\n          } while (prevCapZero !== cap[0]);\n\n          text = escape(cap[0]);\n\n          if (cap[1] === 'www.') {\n            href = 'http://' + text;\n          } else {\n            href = text;\n          }\n        }\n\n        return {\n          type: 'link',\n          raw: cap[0],\n          text: text,\n          href: href,\n          tokens: [{\n            type: 'text',\n            raw: text,\n            text: text\n          }]\n        };\n      }\n    };\n\n    _proto.inlineText = function inlineText(src, smartypants) {\n      var cap = this.rules.inline.text.exec(src);\n\n      if (cap) {\n        var text;\n\n        if (this.lexer.state.inRawBlock) {\n          text = this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0]) : cap[0];\n        } else {\n          text = escape(this.options.smartypants ? smartypants(cap[0]) : cap[0]);\n        }\n\n        return {\n          type: 'text',\n          raw: cap[0],\n          text: text\n        };\n      }\n    };\n\n    return Tokenizer;\n  }();\n  /**\n   * Block-Level Grammar\n   */\n\n\n  var block = {\n    newline: /^(?: *(?:\\n|$))+/,\n    code: /^( {4}[^\\n]+(?:\\n(?: *(?:\\n|$))*)?)+/,\n    fences: /^ {0,3}(`{3,}(?=[^`\\n]*\\n)|~{3,})([^\\n]*)\\n(?:|([\\s\\S]*?)\\n)(?: {0,3}\\1[~`]* *(?=\\n|$)|$)/,\n    hr: /^ {0,3}((?:-[\\t ]*){3,}|(?:_[ \\t]*){3,}|(?:\\*[ \\t]*){3,})(?:\\n+|$)/,\n    heading: /^ {0,3}(#{1,6})(?=\\s|$)(.*)(?:\\n+|$)/,\n    blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\n    list: /^( {0,3}bull)([ \\t][^\\n]+?)?(?:\\n|$)/,\n    html: '^ {0,3}(?:' // optional indentation\n    + '<(script|pre|style|textarea)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n    + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n    + '|<\\\\?[\\\\s\\\\S]*?(?:\\\\?>\\\\n*|$)' // (3)\n    + '|<![A-Z][\\\\s\\\\S]*?(?:>\\\\n*|$)' // (4)\n    + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?(?:\\\\]\\\\]>\\\\n*|$)' // (5)\n    + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (6)\n    + '|<(?!script|pre|style|textarea)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) open tag\n    + '|</(?!script|pre|style|textarea)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) closing tag\n    + ')',\n    def: /^ {0,3}\\[(label)\\]: *(?:\\n *)?<?([^\\s>]+)>?(?:(?: +(?:\\n *)?| *\\n *)(title))? *(?:\\n+|$)/,\n    table: noopTest,\n    lheading: /^([^\\n]+)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n    // regex template, placeholders will be replaced according to different paragraph\n    // interruption rules of commonmark and the original markdown spec:\n    _paragraph: /^([^\\n]+(?:\\n(?!hr|heading|lheading|blockquote|fences|list|html|table| +\\n)[^\\n]+)*)/,\n    text: /^[^\\n]+/\n  };\n  block._label = /(?!\\s*\\])(?:\\\\.|[^\\[\\]\\\\])+/;\n  block._title = /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/;\n  block.def = edit(block.def).replace('label', block._label).replace('title', block._title).getRegex();\n  block.bullet = /(?:[*+-]|\\d{1,9}[.)])/;\n  block.listItemStart = edit(/^( *)(bull) */).replace('bull', block.bullet).getRegex();\n  block.list = edit(block.list).replace(/bull/g, block.bullet).replace('hr', '\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))').replace('def', '\\\\n+(?=' + block.def.source + ')').getRegex();\n  block._tag = 'address|article|aside|base|basefont|blockquote|body|caption' + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption' + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe' + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option' + '|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr' + '|track|ul';\n  block._comment = /<!--(?!-?>)[\\s\\S]*?(?:-->|$)/;\n  block.html = edit(block.html, 'i').replace('comment', block._comment).replace('tag', block._tag).replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/).getRegex();\n  block.paragraph = edit(block._paragraph).replace('hr', block.hr).replace('heading', ' {0,3}#{1,6} ').replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('|table', '').replace('blockquote', ' {0,3}>').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)').replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n  block.blockquote = edit(block.blockquote).replace('paragraph', block.paragraph).getRegex();\n  /**\n   * Normal Block Grammar\n   */\n\n  block.normal = merge({}, block);\n  /**\n   * GFM Block Grammar\n   */\n\n  block.gfm = merge({}, block.normal, {\n    table: '^ *([^\\\\n ].*\\\\|.*)\\\\n' // Header\n    + ' {0,3}(?:\\\\| *)?(:?-+:? *(?:\\\\| *:?-+:? *)*)(?:\\\\| *)?' // Align\n    + '(?:\\\\n((?:(?! *\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)' // Cells\n\n  });\n  block.gfm.table = edit(block.gfm.table).replace('hr', block.hr).replace('heading', ' {0,3}#{1,6} ').replace('blockquote', ' {0,3}>').replace('code', ' {4}[^\\\\n]').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)').replace('tag', block._tag) // tables can be interrupted by type (6) html blocks\n  .getRegex();\n  block.gfm.paragraph = edit(block._paragraph).replace('hr', block.hr).replace('heading', ' {0,3}#{1,6} ').replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('table', block.gfm.table) // interrupt paragraphs with table\n  .replace('blockquote', ' {0,3}>').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)').replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n  /**\n   * Pedantic grammar (original John Gruber's loose markdown specification)\n   */\n\n  block.pedantic = merge({}, block.normal, {\n    html: edit('^ *(?:comment *(?:\\\\n|\\\\s*$)' + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n    + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))').replace('comment', block._comment).replace(/tag/g, '(?!(?:' + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub' + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)' + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b').getRegex(),\n    def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/,\n    heading: /^(#{1,6})(.*)(?:\\n+|$)/,\n    fences: noopTest,\n    // fences not supported\n    paragraph: edit(block.normal._paragraph).replace('hr', block.hr).replace('heading', ' *#{1,6} *[^\\n]').replace('lheading', block.lheading).replace('blockquote', ' {0,3}>').replace('|fences', '').replace('|list', '').replace('|html', '').getRegex()\n  });\n  /**\n   * Inline-Level Grammar\n   */\n\n  var inline = {\n    escape: /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/,\n    autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\n    url: noopTest,\n    tag: '^comment' + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n    + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n    + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n    + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n    + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>',\n    // CDATA section\n    link: /^!?\\[(label)\\]\\(\\s*(href)(?:\\s+(title))?\\s*\\)/,\n    reflink: /^!?\\[(label)\\]\\[(ref)\\]/,\n    nolink: /^!?\\[(ref)\\](?:\\[\\])?/,\n    reflinkSearch: 'reflink|nolink(?!\\\\()',\n    emStrong: {\n      lDelim: /^(?:\\*+(?:([punct_])|[^\\s*]))|^_+(?:([punct*])|([^\\s_]))/,\n      //        (1) and (2) can only be a Right Delimiter. (3) and (4) can only be Left.  (5) and (6) can be either Left or Right.\n      //          () Skip orphan inside strong  () Consume to delim (1) #***                (2) a***#, a***                   (3) #***a, ***a                 (4) ***#              (5) #***#                 (6) a***a\n      rDelimAst: /^[^_*]*?\\_\\_[^_*]*?\\*[^_*]*?(?=\\_\\_)|[^*]+(?=[^*])|[punct_](\\*+)(?=[\\s]|$)|[^punct*_\\s](\\*+)(?=[punct_\\s]|$)|[punct_\\s](\\*+)(?=[^punct*_\\s])|[\\s](\\*+)(?=[punct_])|[punct_](\\*+)(?=[punct_])|[^punct*_\\s](\\*+)(?=[^punct*_\\s])/,\n      rDelimUnd: /^[^_*]*?\\*\\*[^_*]*?\\_[^_*]*?(?=\\*\\*)|[^_]+(?=[^_])|[punct*](\\_+)(?=[\\s]|$)|[^punct*_\\s](\\_+)(?=[punct*\\s]|$)|[punct*\\s](\\_+)(?=[^punct*_\\s])|[\\s](\\_+)(?=[punct*])|[punct*](\\_+)(?=[punct*])/ // ^- Not allowed for _\n\n    },\n    code: /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/,\n    br: /^( {2,}|\\\\)\\n(?!\\s*$)/,\n    del: noopTest,\n    text: /^(`+|[^`])(?:(?= {2,}\\n)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*_]|\\b_|$)|[^ ](?= {2,}\\n)))/,\n    punctuation: /^([\\spunctuation])/\n  }; // list of punctuation marks from CommonMark spec\n  // without * and _ to handle the different emphasis markers * and _\n\n  inline._punctuation = '!\"#$%&\\'()+\\\\-.,/:;<=>?@\\\\[\\\\]`^{|}~';\n  inline.punctuation = edit(inline.punctuation).replace(/punctuation/g, inline._punctuation).getRegex(); // sequences em should skip over [title](link), `code`, <html>\n\n  inline.blockSkip = /\\[[^\\]]*?\\]\\([^\\)]*?\\)|`[^`]*?`|<[^>]*?>/g;\n  inline.escapedEmSt = /\\\\\\*|\\\\_/g;\n  inline._comment = edit(block._comment).replace('(?:-->|$)', '-->').getRegex();\n  inline.emStrong.lDelim = edit(inline.emStrong.lDelim).replace(/punct/g, inline._punctuation).getRegex();\n  inline.emStrong.rDelimAst = edit(inline.emStrong.rDelimAst, 'g').replace(/punct/g, inline._punctuation).getRegex();\n  inline.emStrong.rDelimUnd = edit(inline.emStrong.rDelimUnd, 'g').replace(/punct/g, inline._punctuation).getRegex();\n  inline._escapes = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/g;\n  inline._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\n  inline._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\n  inline.autolink = edit(inline.autolink).replace('scheme', inline._scheme).replace('email', inline._email).getRegex();\n  inline._attribute = /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/;\n  inline.tag = edit(inline.tag).replace('comment', inline._comment).replace('attribute', inline._attribute).getRegex();\n  inline._label = /(?:\\[(?:\\\\.|[^\\[\\]\\\\])*\\]|\\\\.|`[^`]*`|[^\\[\\]\\\\`])*?/;\n  inline._href = /<(?:\\\\.|[^\\n<>\\\\])+>|[^\\s\\x00-\\x1f]*/;\n  inline._title = /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/;\n  inline.link = edit(inline.link).replace('label', inline._label).replace('href', inline._href).replace('title', inline._title).getRegex();\n  inline.reflink = edit(inline.reflink).replace('label', inline._label).replace('ref', block._label).getRegex();\n  inline.nolink = edit(inline.nolink).replace('ref', block._label).getRegex();\n  inline.reflinkSearch = edit(inline.reflinkSearch, 'g').replace('reflink', inline.reflink).replace('nolink', inline.nolink).getRegex();\n  /**\n   * Normal Inline Grammar\n   */\n\n  inline.normal = merge({}, inline);\n  /**\n   * Pedantic Inline Grammar\n   */\n\n  inline.pedantic = merge({}, inline.normal, {\n    strong: {\n      start: /^__|\\*\\*/,\n      middle: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n      endAst: /\\*\\*(?!\\*)/g,\n      endUnd: /__(?!_)/g\n    },\n    em: {\n      start: /^_|\\*/,\n      middle: /^()\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)|^_(?=\\S)([\\s\\S]*?\\S)_(?!_)/,\n      endAst: /\\*(?!\\*)/g,\n      endUnd: /_(?!_)/g\n    },\n    link: edit(/^!?\\[(label)\\]\\((.*?)\\)/).replace('label', inline._label).getRegex(),\n    reflink: edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/).replace('label', inline._label).getRegex()\n  });\n  /**\n   * GFM Inline Grammar\n   */\n\n  inline.gfm = merge({}, inline.normal, {\n    escape: edit(inline.escape).replace('])', '~|])').getRegex(),\n    _extended_email: /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,\n    url: /^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/,\n    _backpedal: /(?:[^?!.,:;*_~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,\n    del: /^(~~?)(?=[^\\s~])([\\s\\S]*?[^\\s~])\\1(?=[^~]|$)/,\n    text: /^([`~]+|[^`~])(?:(?= {2,}\\n)|(?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*~_]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)))/\n  });\n  inline.gfm.url = edit(inline.gfm.url, 'i').replace('email', inline.gfm._extended_email).getRegex();\n  /**\n   * GFM + Line Breaks Inline Grammar\n   */\n\n  inline.breaks = merge({}, inline.gfm, {\n    br: edit(inline.br).replace('{2,}', '*').getRegex(),\n    text: edit(inline.gfm.text).replace('\\\\b_', '\\\\b_| {2,}\\\\n').replace(/\\{2,\\}/g, '*').getRegex()\n  });\n  /**\n   * smartypants text replacement\n   * @param {string} text\n   */\n\n  function smartypants(text) {\n    return text // em-dashes\n    .replace(/---/g, \"\\u2014\") // en-dashes\n    .replace(/--/g, \"\\u2013\") // opening singles\n    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, \"$1\\u2018\") // closing singles & apostrophes\n    .replace(/'/g, \"\\u2019\") // opening doubles\n    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, \"$1\\u201C\") // closing doubles\n    .replace(/\"/g, \"\\u201D\") // ellipses\n    .replace(/\\.{3}/g, \"\\u2026\");\n  }\n  /**\n   * mangle email addresses\n   * @param {string} text\n   */\n\n\n  function mangle(text) {\n    var out = '',\n        i,\n        ch;\n    var l = text.length;\n\n    for (i = 0; i < l; i++) {\n      ch = text.charCodeAt(i);\n\n      if (Math.random() > 0.5) {\n        ch = 'x' + ch.toString(16);\n      }\n\n      out += '&#' + ch + ';';\n    }\n\n    return out;\n  }\n  /**\n   * Block Lexer\n   */\n\n\n  var Lexer = /*#__PURE__*/function () {\n    function Lexer(options) {\n      this.tokens = [];\n      this.tokens.links = Object.create(null);\n      this.options = options || exports.defaults;\n      this.options.tokenizer = this.options.tokenizer || new Tokenizer();\n      this.tokenizer = this.options.tokenizer;\n      this.tokenizer.options = this.options;\n      this.tokenizer.lexer = this;\n      this.inlineQueue = [];\n      this.state = {\n        inLink: false,\n        inRawBlock: false,\n        top: true\n      };\n      var rules = {\n        block: block.normal,\n        inline: inline.normal\n      };\n\n      if (this.options.pedantic) {\n        rules.block = block.pedantic;\n        rules.inline = inline.pedantic;\n      } else if (this.options.gfm) {\n        rules.block = block.gfm;\n\n        if (this.options.breaks) {\n          rules.inline = inline.breaks;\n        } else {\n          rules.inline = inline.gfm;\n        }\n      }\n\n      this.tokenizer.rules = rules;\n    }\n    /**\n     * Expose Rules\n     */\n\n    /**\n     * Static Lex Method\n     */\n\n\n    Lexer.lex = function lex(src, options) {\n      var lexer = new Lexer(options);\n      return lexer.lex(src);\n    }\n    /**\n     * Static Lex Inline Method\n     */\n    ;\n\n    Lexer.lexInline = function lexInline(src, options) {\n      var lexer = new Lexer(options);\n      return lexer.inlineTokens(src);\n    }\n    /**\n     * Preprocessing\n     */\n    ;\n\n    var _proto = Lexer.prototype;\n\n    _proto.lex = function lex(src) {\n      src = src.replace(/\\r\\n|\\r/g, '\\n');\n      this.blockTokens(src, this.tokens);\n      var next;\n\n      while (next = this.inlineQueue.shift()) {\n        this.inlineTokens(next.src, next.tokens);\n      }\n\n      return this.tokens;\n    }\n    /**\n     * Lexing\n     */\n    ;\n\n    _proto.blockTokens = function blockTokens(src, tokens) {\n      var _this = this;\n\n      if (tokens === void 0) {\n        tokens = [];\n      }\n\n      if (this.options.pedantic) {\n        src = src.replace(/\\t/g, '    ').replace(/^ +$/gm, '');\n      } else {\n        src = src.replace(/^( *)(\\t+)/gm, function (_, leading, tabs) {\n          return leading + '    '.repeat(tabs.length);\n        });\n      }\n\n      var token, lastToken, cutSrc, lastParagraphClipped;\n\n      while (src) {\n        if (this.options.extensions && this.options.extensions.block && this.options.extensions.block.some(function (extTokenizer) {\n          if (token = extTokenizer.call({\n            lexer: _this\n          }, src, tokens)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            return true;\n          }\n\n          return false;\n        })) {\n          continue;\n        } // newline\n\n\n        if (token = this.tokenizer.space(src)) {\n          src = src.substring(token.raw.length);\n\n          if (token.raw.length === 1 && tokens.length > 0) {\n            // if there's a single \\n as a spacer, it's terminating the last line,\n            // so move it there so that we don't get unecessary paragraph tags\n            tokens[tokens.length - 1].raw += '\\n';\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        } // code\n\n\n        if (token = this.tokenizer.code(src)) {\n          src = src.substring(token.raw.length);\n          lastToken = tokens[tokens.length - 1]; // An indented code block cannot interrupt a paragraph.\n\n          if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n            lastToken.raw += '\\n' + token.raw;\n            lastToken.text += '\\n' + token.text;\n            this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        } // fences\n\n\n        if (token = this.tokenizer.fences(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // heading\n\n\n        if (token = this.tokenizer.heading(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // hr\n\n\n        if (token = this.tokenizer.hr(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // blockquote\n\n\n        if (token = this.tokenizer.blockquote(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // list\n\n\n        if (token = this.tokenizer.list(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // html\n\n\n        if (token = this.tokenizer.html(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // def\n\n\n        if (token = this.tokenizer.def(src)) {\n          src = src.substring(token.raw.length);\n          lastToken = tokens[tokens.length - 1];\n\n          if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n            lastToken.raw += '\\n' + token.raw;\n            lastToken.text += '\\n' + token.raw;\n            this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n          } else if (!this.tokens.links[token.tag]) {\n            this.tokens.links[token.tag] = {\n              href: token.href,\n              title: token.title\n            };\n          }\n\n          continue;\n        } // table (gfm)\n\n\n        if (token = this.tokenizer.table(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // lheading\n\n\n        if (token = this.tokenizer.lheading(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // top-level paragraph\n        // prevent paragraph consuming extensions by clipping 'src' to extension start\n\n\n        cutSrc = src;\n\n        if (this.options.extensions && this.options.extensions.startBlock) {\n          (function () {\n            var startIndex = Infinity;\n            var tempSrc = src.slice(1);\n            var tempStart = void 0;\n\n            _this.options.extensions.startBlock.forEach(function (getStartIndex) {\n              tempStart = getStartIndex.call({\n                lexer: this\n              }, tempSrc);\n\n              if (typeof tempStart === 'number' && tempStart >= 0) {\n                startIndex = Math.min(startIndex, tempStart);\n              }\n            });\n\n            if (startIndex < Infinity && startIndex >= 0) {\n              cutSrc = src.substring(0, startIndex + 1);\n            }\n          })();\n        }\n\n        if (this.state.top && (token = this.tokenizer.paragraph(cutSrc))) {\n          lastToken = tokens[tokens.length - 1];\n\n          if (lastParagraphClipped && lastToken.type === 'paragraph') {\n            lastToken.raw += '\\n' + token.raw;\n            lastToken.text += '\\n' + token.text;\n            this.inlineQueue.pop();\n            this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n          } else {\n            tokens.push(token);\n          }\n\n          lastParagraphClipped = cutSrc.length !== src.length;\n          src = src.substring(token.raw.length);\n          continue;\n        } // text\n\n\n        if (token = this.tokenizer.text(src)) {\n          src = src.substring(token.raw.length);\n          lastToken = tokens[tokens.length - 1];\n\n          if (lastToken && lastToken.type === 'text') {\n            lastToken.raw += '\\n' + token.raw;\n            lastToken.text += '\\n' + token.text;\n            this.inlineQueue.pop();\n            this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        }\n\n        if (src) {\n          var errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n\n          if (this.options.silent) {\n            console.error(errMsg);\n            break;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n\n      this.state.top = true;\n      return tokens;\n    };\n\n    _proto.inline = function inline(src, tokens) {\n      this.inlineQueue.push({\n        src: src,\n        tokens: tokens\n      });\n    }\n    /**\n     * Lexing/Compiling\n     */\n    ;\n\n    _proto.inlineTokens = function inlineTokens(src, tokens) {\n      var _this2 = this;\n\n      if (tokens === void 0) {\n        tokens = [];\n      }\n\n      var token, lastToken, cutSrc; // String with links masked to avoid interference with em and strong\n\n      var maskedSrc = src;\n      var match;\n      var keepPrevChar, prevChar; // Mask out reflinks\n\n      if (this.tokens.links) {\n        var links = Object.keys(this.tokens.links);\n\n        if (links.length > 0) {\n          while ((match = this.tokenizer.rules.inline.reflinkSearch.exec(maskedSrc)) != null) {\n            if (links.includes(match[0].slice(match[0].lastIndexOf('[') + 1, -1))) {\n              maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex);\n            }\n          }\n        }\n      } // Mask out other blocks\n\n\n      while ((match = this.tokenizer.rules.inline.blockSkip.exec(maskedSrc)) != null) {\n        maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);\n      } // Mask out escaped em & strong delimiters\n\n\n      while ((match = this.tokenizer.rules.inline.escapedEmSt.exec(maskedSrc)) != null) {\n        maskedSrc = maskedSrc.slice(0, match.index) + '++' + maskedSrc.slice(this.tokenizer.rules.inline.escapedEmSt.lastIndex);\n      }\n\n      while (src) {\n        if (!keepPrevChar) {\n          prevChar = '';\n        }\n\n        keepPrevChar = false; // extensions\n\n        if (this.options.extensions && this.options.extensions.inline && this.options.extensions.inline.some(function (extTokenizer) {\n          if (token = extTokenizer.call({\n            lexer: _this2\n          }, src, tokens)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            return true;\n          }\n\n          return false;\n        })) {\n          continue;\n        } // escape\n\n\n        if (token = this.tokenizer.escape(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // tag\n\n\n        if (token = this.tokenizer.tag(src)) {\n          src = src.substring(token.raw.length);\n          lastToken = tokens[tokens.length - 1];\n\n          if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n            lastToken.raw += token.raw;\n            lastToken.text += token.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        } // link\n\n\n        if (token = this.tokenizer.link(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // reflink, nolink\n\n\n        if (token = this.tokenizer.reflink(src, this.tokens.links)) {\n          src = src.substring(token.raw.length);\n          lastToken = tokens[tokens.length - 1];\n\n          if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n            lastToken.raw += token.raw;\n            lastToken.text += token.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        } // em & strong\n\n\n        if (token = this.tokenizer.emStrong(src, maskedSrc, prevChar)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // code\n\n\n        if (token = this.tokenizer.codespan(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // br\n\n\n        if (token = this.tokenizer.br(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // del (gfm)\n\n\n        if (token = this.tokenizer.del(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // autolink\n\n\n        if (token = this.tokenizer.autolink(src, mangle)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // url (gfm)\n\n\n        if (!this.state.inLink && (token = this.tokenizer.url(src, mangle))) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // text\n        // prevent inlineText consuming extensions by clipping 'src' to extension start\n\n\n        cutSrc = src;\n\n        if (this.options.extensions && this.options.extensions.startInline) {\n          (function () {\n            var startIndex = Infinity;\n            var tempSrc = src.slice(1);\n            var tempStart = void 0;\n\n            _this2.options.extensions.startInline.forEach(function (getStartIndex) {\n              tempStart = getStartIndex.call({\n                lexer: this\n              }, tempSrc);\n\n              if (typeof tempStart === 'number' && tempStart >= 0) {\n                startIndex = Math.min(startIndex, tempStart);\n              }\n            });\n\n            if (startIndex < Infinity && startIndex >= 0) {\n              cutSrc = src.substring(0, startIndex + 1);\n            }\n          })();\n        }\n\n        if (token = this.tokenizer.inlineText(cutSrc, smartypants)) {\n          src = src.substring(token.raw.length);\n\n          if (token.raw.slice(-1) !== '_') {\n            // Track prevChar before string of ____ started\n            prevChar = token.raw.slice(-1);\n          }\n\n          keepPrevChar = true;\n          lastToken = tokens[tokens.length - 1];\n\n          if (lastToken && lastToken.type === 'text') {\n            lastToken.raw += token.raw;\n            lastToken.text += token.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        }\n\n        if (src) {\n          var errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n\n          if (this.options.silent) {\n            console.error(errMsg);\n            break;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n\n      return tokens;\n    };\n\n    _createClass(Lexer, null, [{\n      key: \"rules\",\n      get: function get() {\n        return {\n          block: block,\n          inline: inline\n        };\n      }\n    }]);\n\n    return Lexer;\n  }();\n  /**\n   * Renderer\n   */\n\n\n  var Renderer = /*#__PURE__*/function () {\n    function Renderer(options) {\n      this.options = options || exports.defaults;\n    }\n\n    var _proto = Renderer.prototype;\n\n    _proto.code = function code(_code, infostring, escaped) {\n      var lang = (infostring || '').match(/\\S*/)[0];\n\n      if (this.options.highlight) {\n        var out = this.options.highlight(_code, lang);\n\n        if (out != null && out !== _code) {\n          escaped = true;\n          _code = out;\n        }\n      }\n\n      _code = _code.replace(/\\n$/, '') + '\\n';\n\n      if (!lang) {\n        return '<pre><code>' + (escaped ? _code : escape(_code, true)) + '</code></pre>\\n';\n      }\n\n      return '<pre><code class=\"' + this.options.langPrefix + escape(lang, true) + '\">' + (escaped ? _code : escape(_code, true)) + '</code></pre>\\n';\n    }\n    /**\n     * @param {string} quote\n     */\n    ;\n\n    _proto.blockquote = function blockquote(quote) {\n      return \"<blockquote>\\n\" + quote + \"</blockquote>\\n\";\n    };\n\n    _proto.html = function html(_html) {\n      return _html;\n    }\n    /**\n     * @param {string} text\n     * @param {string} level\n     * @param {string} raw\n     * @param {any} slugger\n     */\n    ;\n\n    _proto.heading = function heading(text, level, raw, slugger) {\n      if (this.options.headerIds) {\n        var id = this.options.headerPrefix + slugger.slug(raw);\n        return \"<h\" + level + \" id=\\\"\" + id + \"\\\">\" + text + \"</h\" + level + \">\\n\";\n      } // ignore IDs\n\n\n      return \"<h\" + level + \">\" + text + \"</h\" + level + \">\\n\";\n    };\n\n    _proto.hr = function hr() {\n      return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n    };\n\n    _proto.list = function list(body, ordered, start) {\n      var type = ordered ? 'ol' : 'ul',\n          startatt = ordered && start !== 1 ? ' start=\"' + start + '\"' : '';\n      return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n    }\n    /**\n     * @param {string} text\n     */\n    ;\n\n    _proto.listitem = function listitem(text) {\n      return \"<li>\" + text + \"</li>\\n\";\n    };\n\n    _proto.checkbox = function checkbox(checked) {\n      return '<input ' + (checked ? 'checked=\"\" ' : '') + 'disabled=\"\" type=\"checkbox\"' + (this.options.xhtml ? ' /' : '') + '> ';\n    }\n    /**\n     * @param {string} text\n     */\n    ;\n\n    _proto.paragraph = function paragraph(text) {\n      return \"<p>\" + text + \"</p>\\n\";\n    }\n    /**\n     * @param {string} header\n     * @param {string} body\n     */\n    ;\n\n    _proto.table = function table(header, body) {\n      if (body) body = \"<tbody>\" + body + \"</tbody>\";\n      return '<table>\\n' + '<thead>\\n' + header + '</thead>\\n' + body + '</table>\\n';\n    }\n    /**\n     * @param {string} content\n     */\n    ;\n\n    _proto.tablerow = function tablerow(content) {\n      return \"<tr>\\n\" + content + \"</tr>\\n\";\n    };\n\n    _proto.tablecell = function tablecell(content, flags) {\n      var type = flags.header ? 'th' : 'td';\n      var tag = flags.align ? \"<\" + type + \" align=\\\"\" + flags.align + \"\\\">\" : \"<\" + type + \">\";\n      return tag + content + (\"</\" + type + \">\\n\");\n    }\n    /**\n     * span level renderer\n     * @param {string} text\n     */\n    ;\n\n    _proto.strong = function strong(text) {\n      return \"<strong>\" + text + \"</strong>\";\n    }\n    /**\n     * @param {string} text\n     */\n    ;\n\n    _proto.em = function em(text) {\n      return \"<em>\" + text + \"</em>\";\n    }\n    /**\n     * @param {string} text\n     */\n    ;\n\n    _proto.codespan = function codespan(text) {\n      return \"<code>\" + text + \"</code>\";\n    };\n\n    _proto.br = function br() {\n      return this.options.xhtml ? '<br/>' : '<br>';\n    }\n    /**\n     * @param {string} text\n     */\n    ;\n\n    _proto.del = function del(text) {\n      return \"<del>\" + text + \"</del>\";\n    }\n    /**\n     * @param {string} href\n     * @param {string} title\n     * @param {string} text\n     */\n    ;\n\n    _proto.link = function link(href, title, text) {\n      href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n\n      if (href === null) {\n        return text;\n      }\n\n      var out = '<a href=\"' + escape(href) + '\"';\n\n      if (title) {\n        out += ' title=\"' + title + '\"';\n      }\n\n      out += '>' + text + '</a>';\n      return out;\n    }\n    /**\n     * @param {string} href\n     * @param {string} title\n     * @param {string} text\n     */\n    ;\n\n    _proto.image = function image(href, title, text) {\n      href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n\n      if (href === null) {\n        return text;\n      }\n\n      var out = \"<img src=\\\"\" + href + \"\\\" alt=\\\"\" + text + \"\\\"\";\n\n      if (title) {\n        out += \" title=\\\"\" + title + \"\\\"\";\n      }\n\n      out += this.options.xhtml ? '/>' : '>';\n      return out;\n    };\n\n    _proto.text = function text(_text) {\n      return _text;\n    };\n\n    return Renderer;\n  }();\n  /**\n   * TextRenderer\n   * returns only the textual part of the token\n   */\n\n\n  var TextRenderer = /*#__PURE__*/function () {\n    function TextRenderer() {}\n\n    var _proto = TextRenderer.prototype; // no need for block level renderers\n\n    _proto.strong = function strong(text) {\n      return text;\n    };\n\n    _proto.em = function em(text) {\n      return text;\n    };\n\n    _proto.codespan = function codespan(text) {\n      return text;\n    };\n\n    _proto.del = function del(text) {\n      return text;\n    };\n\n    _proto.html = function html(text) {\n      return text;\n    };\n\n    _proto.text = function text(_text) {\n      return _text;\n    };\n\n    _proto.link = function link(href, title, text) {\n      return '' + text;\n    };\n\n    _proto.image = function image(href, title, text) {\n      return '' + text;\n    };\n\n    _proto.br = function br() {\n      return '';\n    };\n\n    return TextRenderer;\n  }();\n  /**\n   * Slugger generates header id\n   */\n\n\n  var Slugger = /*#__PURE__*/function () {\n    function Slugger() {\n      this.seen = {};\n    }\n    /**\n     * @param {string} value\n     */\n\n\n    var _proto = Slugger.prototype;\n\n    _proto.serialize = function serialize(value) {\n      return value.toLowerCase().trim() // remove html tags\n      .replace(/<[!\\/a-z].*?>/ig, '') // remove unwanted chars\n      .replace(/[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,./:;<=>?@[\\]^`{|}~]/g, '').replace(/\\s/g, '-');\n    }\n    /**\n     * Finds the next safe (unique) slug to use\n     * @param {string} originalSlug\n     * @param {boolean} isDryRun\n     */\n    ;\n\n    _proto.getNextSafeSlug = function getNextSafeSlug(originalSlug, isDryRun) {\n      var slug = originalSlug;\n      var occurenceAccumulator = 0;\n\n      if (this.seen.hasOwnProperty(slug)) {\n        occurenceAccumulator = this.seen[originalSlug];\n\n        do {\n          occurenceAccumulator++;\n          slug = originalSlug + '-' + occurenceAccumulator;\n        } while (this.seen.hasOwnProperty(slug));\n      }\n\n      if (!isDryRun) {\n        this.seen[originalSlug] = occurenceAccumulator;\n        this.seen[slug] = 0;\n      }\n\n      return slug;\n    }\n    /**\n     * Convert string to unique id\n     * @param {object} [options]\n     * @param {boolean} [options.dryrun] Generates the next unique slug without\n     * updating the internal accumulator.\n     */\n    ;\n\n    _proto.slug = function slug(value, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      var slug = this.serialize(value);\n      return this.getNextSafeSlug(slug, options.dryrun);\n    };\n\n    return Slugger;\n  }();\n  /**\n   * Parsing & Compiling\n   */\n\n\n  var Parser = /*#__PURE__*/function () {\n    function Parser(options) {\n      this.options = options || exports.defaults;\n      this.options.renderer = this.options.renderer || new Renderer();\n      this.renderer = this.options.renderer;\n      this.renderer.options = this.options;\n      this.textRenderer = new TextRenderer();\n      this.slugger = new Slugger();\n    }\n    /**\n     * Static Parse Method\n     */\n\n\n    Parser.parse = function parse(tokens, options) {\n      var parser = new Parser(options);\n      return parser.parse(tokens);\n    }\n    /**\n     * Static Parse Inline Method\n     */\n    ;\n\n    Parser.parseInline = function parseInline(tokens, options) {\n      var parser = new Parser(options);\n      return parser.parseInline(tokens);\n    }\n    /**\n     * Parse Loop\n     */\n    ;\n\n    var _proto = Parser.prototype;\n\n    _proto.parse = function parse(tokens, top) {\n      if (top === void 0) {\n        top = true;\n      }\n\n      var out = '',\n          i,\n          j,\n          k,\n          l2,\n          l3,\n          row,\n          cell,\n          header,\n          body,\n          token,\n          ordered,\n          start,\n          loose,\n          itemBody,\n          item,\n          checked,\n          task,\n          checkbox,\n          ret;\n      var l = tokens.length;\n\n      for (i = 0; i < l; i++) {\n        token = tokens[i]; // Run any renderer extensions\n\n        if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n          ret = this.options.extensions.renderers[token.type].call({\n            parser: this\n          }, token);\n\n          if (ret !== false || !['space', 'hr', 'heading', 'code', 'table', 'blockquote', 'list', 'html', 'paragraph', 'text'].includes(token.type)) {\n            out += ret || '';\n            continue;\n          }\n        }\n\n        switch (token.type) {\n          case 'space':\n            {\n              continue;\n            }\n\n          case 'hr':\n            {\n              out += this.renderer.hr();\n              continue;\n            }\n\n          case 'heading':\n            {\n              out += this.renderer.heading(this.parseInline(token.tokens), token.depth, unescape(this.parseInline(token.tokens, this.textRenderer)), this.slugger);\n              continue;\n            }\n\n          case 'code':\n            {\n              out += this.renderer.code(token.text, token.lang, token.escaped);\n              continue;\n            }\n\n          case 'table':\n            {\n              header = ''; // header\n\n              cell = '';\n              l2 = token.header.length;\n\n              for (j = 0; j < l2; j++) {\n                cell += this.renderer.tablecell(this.parseInline(token.header[j].tokens), {\n                  header: true,\n                  align: token.align[j]\n                });\n              }\n\n              header += this.renderer.tablerow(cell);\n              body = '';\n              l2 = token.rows.length;\n\n              for (j = 0; j < l2; j++) {\n                row = token.rows[j];\n                cell = '';\n                l3 = row.length;\n\n                for (k = 0; k < l3; k++) {\n                  cell += this.renderer.tablecell(this.parseInline(row[k].tokens), {\n                    header: false,\n                    align: token.align[k]\n                  });\n                }\n\n                body += this.renderer.tablerow(cell);\n              }\n\n              out += this.renderer.table(header, body);\n              continue;\n            }\n\n          case 'blockquote':\n            {\n              body = this.parse(token.tokens);\n              out += this.renderer.blockquote(body);\n              continue;\n            }\n\n          case 'list':\n            {\n              ordered = token.ordered;\n              start = token.start;\n              loose = token.loose;\n              l2 = token.items.length;\n              body = '';\n\n              for (j = 0; j < l2; j++) {\n                item = token.items[j];\n                checked = item.checked;\n                task = item.task;\n                itemBody = '';\n\n                if (item.task) {\n                  checkbox = this.renderer.checkbox(checked);\n\n                  if (loose) {\n                    if (item.tokens.length > 0 && item.tokens[0].type === 'paragraph') {\n                      item.tokens[0].text = checkbox + ' ' + item.tokens[0].text;\n\n                      if (item.tokens[0].tokens && item.tokens[0].tokens.length > 0 && item.tokens[0].tokens[0].type === 'text') {\n                        item.tokens[0].tokens[0].text = checkbox + ' ' + item.tokens[0].tokens[0].text;\n                      }\n                    } else {\n                      item.tokens.unshift({\n                        type: 'text',\n                        text: checkbox\n                      });\n                    }\n                  } else {\n                    itemBody += checkbox;\n                  }\n                }\n\n                itemBody += this.parse(item.tokens, loose);\n                body += this.renderer.listitem(itemBody, task, checked);\n              }\n\n              out += this.renderer.list(body, ordered, start);\n              continue;\n            }\n\n          case 'html':\n            {\n              // TODO parse inline content if parameter markdown=1\n              out += this.renderer.html(token.text);\n              continue;\n            }\n\n          case 'paragraph':\n            {\n              out += this.renderer.paragraph(this.parseInline(token.tokens));\n              continue;\n            }\n\n          case 'text':\n            {\n              body = token.tokens ? this.parseInline(token.tokens) : token.text;\n\n              while (i + 1 < l && tokens[i + 1].type === 'text') {\n                token = tokens[++i];\n                body += '\\n' + (token.tokens ? this.parseInline(token.tokens) : token.text);\n              }\n\n              out += top ? this.renderer.paragraph(body) : body;\n              continue;\n            }\n\n          default:\n            {\n              var errMsg = 'Token with \"' + token.type + '\" type was not found.';\n\n              if (this.options.silent) {\n                console.error(errMsg);\n                return;\n              } else {\n                throw new Error(errMsg);\n              }\n            }\n        }\n      }\n\n      return out;\n    }\n    /**\n     * Parse Inline Tokens\n     */\n    ;\n\n    _proto.parseInline = function parseInline(tokens, renderer) {\n      renderer = renderer || this.renderer;\n      var out = '',\n          i,\n          token,\n          ret;\n      var l = tokens.length;\n\n      for (i = 0; i < l; i++) {\n        token = tokens[i]; // Run any renderer extensions\n\n        if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n          ret = this.options.extensions.renderers[token.type].call({\n            parser: this\n          }, token);\n\n          if (ret !== false || !['escape', 'html', 'link', 'image', 'strong', 'em', 'codespan', 'br', 'del', 'text'].includes(token.type)) {\n            out += ret || '';\n            continue;\n          }\n        }\n\n        switch (token.type) {\n          case 'escape':\n            {\n              out += renderer.text(token.text);\n              break;\n            }\n\n          case 'html':\n            {\n              out += renderer.html(token.text);\n              break;\n            }\n\n          case 'link':\n            {\n              out += renderer.link(token.href, token.title, this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'image':\n            {\n              out += renderer.image(token.href, token.title, token.text);\n              break;\n            }\n\n          case 'strong':\n            {\n              out += renderer.strong(this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'em':\n            {\n              out += renderer.em(this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'codespan':\n            {\n              out += renderer.codespan(token.text);\n              break;\n            }\n\n          case 'br':\n            {\n              out += renderer.br();\n              break;\n            }\n\n          case 'del':\n            {\n              out += renderer.del(this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'text':\n            {\n              out += renderer.text(token.text);\n              break;\n            }\n\n          default:\n            {\n              var errMsg = 'Token with \"' + token.type + '\" type was not found.';\n\n              if (this.options.silent) {\n                console.error(errMsg);\n                return;\n              } else {\n                throw new Error(errMsg);\n              }\n            }\n        }\n      }\n\n      return out;\n    };\n\n    return Parser;\n  }();\n  /**\n   * Marked\n   */\n\n\n  function marked(src, opt, callback) {\n    // throw error in case of non string input\n    if (typeof src === 'undefined' || src === null) {\n      throw new Error('marked(): input parameter is undefined or null');\n    }\n\n    if (typeof src !== 'string') {\n      throw new Error('marked(): input parameter is of type ' + Object.prototype.toString.call(src) + ', string expected');\n    }\n\n    if (typeof opt === 'function') {\n      callback = opt;\n      opt = null;\n    }\n\n    opt = merge({}, marked.defaults, opt || {});\n    checkSanitizeDeprecation(opt);\n\n    if (callback) {\n      var highlight = opt.highlight;\n      var tokens;\n\n      try {\n        tokens = Lexer.lex(src, opt);\n      } catch (e) {\n        return callback(e);\n      }\n\n      var done = function done(err) {\n        var out;\n\n        if (!err) {\n          try {\n            if (opt.walkTokens) {\n              marked.walkTokens(tokens, opt.walkTokens);\n            }\n\n            out = Parser.parse(tokens, opt);\n          } catch (e) {\n            err = e;\n          }\n        }\n\n        opt.highlight = highlight;\n        return err ? callback(err) : callback(null, out);\n      };\n\n      if (!highlight || highlight.length < 3) {\n        return done();\n      }\n\n      delete opt.highlight;\n      if (!tokens.length) return done();\n      var pending = 0;\n      marked.walkTokens(tokens, function (token) {\n        if (token.type === 'code') {\n          pending++;\n          setTimeout(function () {\n            highlight(token.text, token.lang, function (err, code) {\n              if (err) {\n                return done(err);\n              }\n\n              if (code != null && code !== token.text) {\n                token.text = code;\n                token.escaped = true;\n              }\n\n              pending--;\n\n              if (pending === 0) {\n                done();\n              }\n            });\n          }, 0);\n        }\n      });\n\n      if (pending === 0) {\n        done();\n      }\n\n      return;\n    }\n\n    try {\n      var _tokens = Lexer.lex(src, opt);\n\n      if (opt.walkTokens) {\n        marked.walkTokens(_tokens, opt.walkTokens);\n      }\n\n      return Parser.parse(_tokens, opt);\n    } catch (e) {\n      e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n\n      if (opt.silent) {\n        return '<p>An error occurred:</p><pre>' + escape(e.message + '', true) + '</pre>';\n      }\n\n      throw e;\n    }\n  }\n  /**\n   * Options\n   */\n\n\n  marked.options = marked.setOptions = function (opt) {\n    merge(marked.defaults, opt);\n    changeDefaults(marked.defaults);\n    return marked;\n  };\n\n  marked.getDefaults = getDefaults;\n  marked.defaults = exports.defaults;\n  /**\n   * Use Extension\n   */\n\n  marked.use = function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var opts = merge.apply(void 0, [{}].concat(args));\n    var extensions = marked.defaults.extensions || {\n      renderers: {},\n      childTokens: {}\n    };\n    var hasExtensions;\n    args.forEach(function (pack) {\n      // ==-- Parse \"addon\" extensions --== //\n      if (pack.extensions) {\n        hasExtensions = true;\n        pack.extensions.forEach(function (ext) {\n          if (!ext.name) {\n            throw new Error('extension name required');\n          }\n\n          if (ext.renderer) {\n            // Renderer extensions\n            var prevRenderer = extensions.renderers ? extensions.renderers[ext.name] : null;\n\n            if (prevRenderer) {\n              // Replace extension with func to run new extension but fall back if false\n              extensions.renderers[ext.name] = function () {\n                for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n                  args[_key2] = arguments[_key2];\n                }\n\n                var ret = ext.renderer.apply(this, args);\n\n                if (ret === false) {\n                  ret = prevRenderer.apply(this, args);\n                }\n\n                return ret;\n              };\n            } else {\n              extensions.renderers[ext.name] = ext.renderer;\n            }\n          }\n\n          if (ext.tokenizer) {\n            // Tokenizer Extensions\n            if (!ext.level || ext.level !== 'block' && ext.level !== 'inline') {\n              throw new Error(\"extension level must be 'block' or 'inline'\");\n            }\n\n            if (extensions[ext.level]) {\n              extensions[ext.level].unshift(ext.tokenizer);\n            } else {\n              extensions[ext.level] = [ext.tokenizer];\n            }\n\n            if (ext.start) {\n              // Function to check for start of token\n              if (ext.level === 'block') {\n                if (extensions.startBlock) {\n                  extensions.startBlock.push(ext.start);\n                } else {\n                  extensions.startBlock = [ext.start];\n                }\n              } else if (ext.level === 'inline') {\n                if (extensions.startInline) {\n                  extensions.startInline.push(ext.start);\n                } else {\n                  extensions.startInline = [ext.start];\n                }\n              }\n            }\n          }\n\n          if (ext.childTokens) {\n            // Child tokens to be visited by walkTokens\n            extensions.childTokens[ext.name] = ext.childTokens;\n          }\n        });\n      } // ==-- Parse \"overwrite\" extensions --== //\n\n\n      if (pack.renderer) {\n        (function () {\n          var renderer = marked.defaults.renderer || new Renderer();\n\n          var _loop = function _loop(prop) {\n            var prevRenderer = renderer[prop]; // Replace renderer with func to run extension, but fall back if false\n\n            renderer[prop] = function () {\n              for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n                args[_key3] = arguments[_key3];\n              }\n\n              var ret = pack.renderer[prop].apply(renderer, args);\n\n              if (ret === false) {\n                ret = prevRenderer.apply(renderer, args);\n              }\n\n              return ret;\n            };\n          };\n\n          for (var prop in pack.renderer) {\n            _loop(prop);\n          }\n\n          opts.renderer = renderer;\n        })();\n      }\n\n      if (pack.tokenizer) {\n        (function () {\n          var tokenizer = marked.defaults.tokenizer || new Tokenizer();\n\n          var _loop2 = function _loop2(prop) {\n            var prevTokenizer = tokenizer[prop]; // Replace tokenizer with func to run extension, but fall back if false\n\n            tokenizer[prop] = function () {\n              for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n                args[_key4] = arguments[_key4];\n              }\n\n              var ret = pack.tokenizer[prop].apply(tokenizer, args);\n\n              if (ret === false) {\n                ret = prevTokenizer.apply(tokenizer, args);\n              }\n\n              return ret;\n            };\n          };\n\n          for (var prop in pack.tokenizer) {\n            _loop2(prop);\n          }\n\n          opts.tokenizer = tokenizer;\n        })();\n      } // ==-- Parse WalkTokens extensions --== //\n\n\n      if (pack.walkTokens) {\n        var _walkTokens = marked.defaults.walkTokens;\n\n        opts.walkTokens = function (token) {\n          pack.walkTokens.call(this, token);\n\n          if (_walkTokens) {\n            _walkTokens.call(this, token);\n          }\n        };\n      }\n\n      if (hasExtensions) {\n        opts.extensions = extensions;\n      }\n\n      marked.setOptions(opts);\n    });\n  };\n  /**\n   * Run callback for every token\n   */\n\n\n  marked.walkTokens = function (tokens, callback) {\n    var _loop3 = function _loop3() {\n      var token = _step.value;\n      callback.call(marked, token);\n\n      switch (token.type) {\n        case 'table':\n          {\n            for (var _iterator2 = _createForOfIteratorHelperLoose(token.header), _step2; !(_step2 = _iterator2()).done;) {\n              var cell = _step2.value;\n              marked.walkTokens(cell.tokens, callback);\n            }\n\n            for (var _iterator3 = _createForOfIteratorHelperLoose(token.rows), _step3; !(_step3 = _iterator3()).done;) {\n              var row = _step3.value;\n\n              for (var _iterator4 = _createForOfIteratorHelperLoose(row), _step4; !(_step4 = _iterator4()).done;) {\n                var _cell = _step4.value;\n                marked.walkTokens(_cell.tokens, callback);\n              }\n            }\n\n            break;\n          }\n\n        case 'list':\n          {\n            marked.walkTokens(token.items, callback);\n            break;\n          }\n\n        default:\n          {\n            if (marked.defaults.extensions && marked.defaults.extensions.childTokens && marked.defaults.extensions.childTokens[token.type]) {\n              // Walk any extensions\n              marked.defaults.extensions.childTokens[token.type].forEach(function (childTokens) {\n                marked.walkTokens(token[childTokens], callback);\n              });\n            } else if (token.tokens) {\n              marked.walkTokens(token.tokens, callback);\n            }\n          }\n      }\n    };\n\n    for (var _iterator = _createForOfIteratorHelperLoose(tokens), _step; !(_step = _iterator()).done;) {\n      _loop3();\n    }\n  };\n  /**\n   * Parse Inline\n   * @param {string} src\n   */\n\n\n  marked.parseInline = function (src, opt) {\n    // throw error in case of non string input\n    if (typeof src === 'undefined' || src === null) {\n      throw new Error('marked.parseInline(): input parameter is undefined or null');\n    }\n\n    if (typeof src !== 'string') {\n      throw new Error('marked.parseInline(): input parameter is of type ' + Object.prototype.toString.call(src) + ', string expected');\n    }\n\n    opt = merge({}, marked.defaults, opt || {});\n    checkSanitizeDeprecation(opt);\n\n    try {\n      var tokens = Lexer.lexInline(src, opt);\n\n      if (opt.walkTokens) {\n        marked.walkTokens(tokens, opt.walkTokens);\n      }\n\n      return Parser.parseInline(tokens, opt);\n    } catch (e) {\n      e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n\n      if (opt.silent) {\n        return '<p>An error occurred:</p><pre>' + escape(e.message + '', true) + '</pre>';\n      }\n\n      throw e;\n    }\n  };\n  /**\n   * Expose\n   */\n\n\n  marked.Parser = Parser;\n  marked.parser = Parser.parse;\n  marked.Renderer = Renderer;\n  marked.TextRenderer = TextRenderer;\n  marked.Lexer = Lexer;\n  marked.lexer = Lexer.lex;\n  marked.Tokenizer = Tokenizer;\n  marked.Slugger = Slugger;\n  marked.parse = marked;\n  var options = marked.options;\n  var setOptions = marked.setOptions;\n  var use = marked.use;\n  var walkTokens = marked.walkTokens;\n  var parseInline = marked.parseInline;\n  var parse = marked;\n  var parser = Parser.parse;\n  var lexer = Lexer.lex;\n  exports.Lexer = Lexer;\n  exports.Parser = Parser;\n  exports.Renderer = Renderer;\n  exports.Slugger = Slugger;\n  exports.TextRenderer = TextRenderer;\n  exports.Tokenizer = Tokenizer;\n  exports.getDefaults = getDefaults;\n  exports.lexer = lexer;\n  exports.marked = marked;\n  exports.options = options;\n  exports.parse = parse;\n  exports.parseInline = parseInline;\n  exports.parser = parser;\n  exports.setOptions = setOptions;\n  exports.use = use;\n  exports.walkTokens = walkTokens;\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n});","map":{"version":3,"names":["global","factory","exports","module","define","amd","globalThis","self","marked","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","Constructor","protoProps","staticProps","prototype","_unsupportedIterableToArray","o","minLen","_arrayLikeToArray","n","toString","call","slice","constructor","name","Array","from","test","arr","len","arr2","_createForOfIteratorHelperLoose","allowArrayLike","it","Symbol","iterator","next","bind","isArray","done","value","TypeError","getDefaults","baseUrl","breaks","extensions","gfm","headerIds","headerPrefix","highlight","langPrefix","mangle","pedantic","renderer","sanitize","sanitizer","silent","smartLists","smartypants","tokenizer","walkTokens","xhtml","defaults","changeDefaults","newDefaults","escapeTest","escapeReplace","escapeTestNoEncode","escapeReplaceNoEncode","escapeReplacements","getEscapeReplacement","ch","escape","html","encode","replace","unescapeTest","unescape","_","toLowerCase","charAt","String","fromCharCode","parseInt","substring","caret","edit","regex","opt","source","obj","val","getRegex","RegExp","nonWordAndColonTest","originIndependentUrl","cleanUrl","base","href","prot","decodeURIComponent","e","indexOf","resolveUrl","encodeURI","baseUrls","justDomain","protocol","domain","rtrim","relativeBase","noopTest","exec","merge","arguments","hasOwnProperty","splitCells","tableRow","count","row","match","offset","str","escaped","curr","cells","split","trim","shift","pop","splice","push","c","invert","l","suffLen","currChar","findClosingBracket","b","level","checkSanitizeDeprecation","console","warn","repeatString","pattern","result","outputLink","cap","link","raw","lexer","title","text","state","inLink","token","type","tokens","inlineTokens","indentCodeCompensation","matchIndentToCode","indentToCode","map","node","matchIndentInNode","indentInNode","join","Tokenizer","options","_proto","space","src","rules","block","newline","code","codeBlockStyle","fences","lang","heading","trimmed","depth","inline","hr","blockquote","blockTokens","list","istask","ischecked","indent","blankLine","endsWithBlankLine","line","nextLine","rawLine","itemContents","endEarly","bull","isordered","ordered","start","loose","items","itemRegex","trimLeft","search","nextBulletRegex","Math","min","hrRegex","fencesBeginRegex","task","checked","trimRight","top","spacers","filter","t","hasMultipleLineBreaks","every","chars","lineBreaks","_iterator","_step","_char","pre","def","tag","table","item","header","align","rows","j","k","lheading","paragraph","escape$1","inRawBlock","trimmedUrl","rtrimSlash","lastParenIndex","linkLen","_escapes","reflink","links","nolink","emStrong","maskedSrc","prevChar","lDelim","nextChar","punctuation","lLength","rDelim","rLength","delimTotal","midDelimTotal","endReg","rDelimAst","rDelimUnd","lastIndex","_text","index","codespan","hasNonSpaceChars","hasSpaceCharsOnBothEnds","br","del","autolink","url","prevCapZero","_backpedal","inlineText","_paragraph","_label","_title","bullet","listItemStart","_tag","_comment","normal","reflinkSearch","_punctuation","blockSkip","escapedEmSt","_scheme","_email","_attribute","_href","strong","middle","endAst","endUnd","em","_extended_email","out","charCodeAt","random","Lexer","create","inlineQueue","lex","lexInline","_this","leading","tabs","repeat","lastToken","cutSrc","lastParagraphClipped","some","extTokenizer","startBlock","startIndex","Infinity","tempSrc","tempStart","forEach","getStartIndex","errMsg","error","Error","_this2","keepPrevChar","keys","includes","lastIndexOf","startInline","get","Renderer","_code","infostring","quote","_html","slugger","id","slug","body","startatt","listitem","checkbox","tablerow","content","tablecell","flags","image","TextRenderer","Slugger","seen","serialize","getNextSafeSlug","originalSlug","isDryRun","occurenceAccumulator","dryrun","Parser","textRenderer","parse","parser","parseInline","l2","l3","cell","itemBody","ret","renderers","unshift","callback","err","pending","setTimeout","_tokens","message","setOptions","use","_len","args","_key","opts","apply","concat","childTokens","hasExtensions","pack","ext","prevRenderer","_len2","_key2","_loop","prop","_len3","_key3","_loop2","prevTokenizer","_len4","_key4","_walkTokens","_loop3","_iterator2","_step2","_iterator3","_step3","_iterator4","_step4","_cell"],"sources":["/Users/josieldelgadillo/GitHub_M1/GitHub/hyper-react-v3.3.0/hyper-react-js/node_modules/marked/lib/marked.umd.js"],"sourcesContent":["/**\n * marked - a markdown parser\n * Copyright (c) 2011-2022, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */\n\n/**\n * DO NOT EDIT THIS FILE\n * The code in this file is generated from files in ./src/\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.marked = {}));\n})(this, (function (exports) { 'use strict';\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    Object.defineProperty(Constructor, \"prototype\", {\n      writable: false\n    });\n    return Constructor;\n  }\n\n  function _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n  }\n\n  function _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n  }\n\n  function _createForOfIteratorHelperLoose(o, allowArrayLike) {\n    var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n    if (it) return (it = it.call(o)).next.bind(it);\n\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      return function () {\n        if (i >= o.length) return {\n          done: true\n        };\n        return {\n          done: false,\n          value: o[i++]\n        };\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  function getDefaults() {\n    return {\n      baseUrl: null,\n      breaks: false,\n      extensions: null,\n      gfm: true,\n      headerIds: true,\n      headerPrefix: '',\n      highlight: null,\n      langPrefix: 'language-',\n      mangle: true,\n      pedantic: false,\n      renderer: null,\n      sanitize: false,\n      sanitizer: null,\n      silent: false,\n      smartLists: false,\n      smartypants: false,\n      tokenizer: null,\n      walkTokens: null,\n      xhtml: false\n    };\n  }\n  exports.defaults = getDefaults();\n  function changeDefaults(newDefaults) {\n    exports.defaults = newDefaults;\n  }\n\n  /**\n   * Helpers\n   */\n  var escapeTest = /[&<>\"']/;\n  var escapeReplace = /[&<>\"']/g;\n  var escapeTestNoEncode = /[<>\"']|&(?!#?\\w+;)/;\n  var escapeReplaceNoEncode = /[<>\"']|&(?!#?\\w+;)/g;\n  var escapeReplacements = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n\n  var getEscapeReplacement = function getEscapeReplacement(ch) {\n    return escapeReplacements[ch];\n  };\n\n  function escape(html, encode) {\n    if (encode) {\n      if (escapeTest.test(html)) {\n        return html.replace(escapeReplace, getEscapeReplacement);\n      }\n    } else {\n      if (escapeTestNoEncode.test(html)) {\n        return html.replace(escapeReplaceNoEncode, getEscapeReplacement);\n      }\n    }\n\n    return html;\n  }\n  var unescapeTest = /&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig;\n  /**\n   * @param {string} html\n   */\n\n  function unescape(html) {\n    // explicitly match decimal, hex, and named HTML entities\n    return html.replace(unescapeTest, function (_, n) {\n      n = n.toLowerCase();\n      if (n === 'colon') return ':';\n\n      if (n.charAt(0) === '#') {\n        return n.charAt(1) === 'x' ? String.fromCharCode(parseInt(n.substring(2), 16)) : String.fromCharCode(+n.substring(1));\n      }\n\n      return '';\n    });\n  }\n  var caret = /(^|[^\\[])\\^/g;\n  /**\n   * @param {string | RegExp} regex\n   * @param {string} opt\n   */\n\n  function edit(regex, opt) {\n    regex = typeof regex === 'string' ? regex : regex.source;\n    opt = opt || '';\n    var obj = {\n      replace: function replace(name, val) {\n        val = val.source || val;\n        val = val.replace(caret, '$1');\n        regex = regex.replace(name, val);\n        return obj;\n      },\n      getRegex: function getRegex() {\n        return new RegExp(regex, opt);\n      }\n    };\n    return obj;\n  }\n  var nonWordAndColonTest = /[^\\w:]/g;\n  var originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\n  /**\n   * @param {boolean} sanitize\n   * @param {string} base\n   * @param {string} href\n   */\n\n  function cleanUrl(sanitize, base, href) {\n    if (sanitize) {\n      var prot;\n\n      try {\n        prot = decodeURIComponent(unescape(href)).replace(nonWordAndColonTest, '').toLowerCase();\n      } catch (e) {\n        return null;\n      }\n\n      if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n        return null;\n      }\n    }\n\n    if (base && !originIndependentUrl.test(href)) {\n      href = resolveUrl(base, href);\n    }\n\n    try {\n      href = encodeURI(href).replace(/%25/g, '%');\n    } catch (e) {\n      return null;\n    }\n\n    return href;\n  }\n  var baseUrls = {};\n  var justDomain = /^[^:]+:\\/*[^/]*$/;\n  var protocol = /^([^:]+:)[\\s\\S]*$/;\n  var domain = /^([^:]+:\\/*[^/]*)[\\s\\S]*$/;\n  /**\n   * @param {string} base\n   * @param {string} href\n   */\n\n  function resolveUrl(base, href) {\n    if (!baseUrls[' ' + base]) {\n      // we can ignore everything in base after the last slash of its path component,\n      // but we might need to add _that_\n      // https://tools.ietf.org/html/rfc3986#section-3\n      if (justDomain.test(base)) {\n        baseUrls[' ' + base] = base + '/';\n      } else {\n        baseUrls[' ' + base] = rtrim(base, '/', true);\n      }\n    }\n\n    base = baseUrls[' ' + base];\n    var relativeBase = base.indexOf(':') === -1;\n\n    if (href.substring(0, 2) === '//') {\n      if (relativeBase) {\n        return href;\n      }\n\n      return base.replace(protocol, '$1') + href;\n    } else if (href.charAt(0) === '/') {\n      if (relativeBase) {\n        return href;\n      }\n\n      return base.replace(domain, '$1') + href;\n    } else {\n      return base + href;\n    }\n  }\n  var noopTest = {\n    exec: function noopTest() {}\n  };\n  function merge(obj) {\n    var i = 1,\n        target,\n        key;\n\n    for (; i < arguments.length; i++) {\n      target = arguments[i];\n\n      for (key in target) {\n        if (Object.prototype.hasOwnProperty.call(target, key)) {\n          obj[key] = target[key];\n        }\n      }\n    }\n\n    return obj;\n  }\n  function splitCells(tableRow, count) {\n    // ensure that every cell-delimiting pipe has a space\n    // before it to distinguish it from an escaped pipe\n    var row = tableRow.replace(/\\|/g, function (match, offset, str) {\n      var escaped = false,\n          curr = offset;\n\n      while (--curr >= 0 && str[curr] === '\\\\') {\n        escaped = !escaped;\n      }\n\n      if (escaped) {\n        // odd number of slashes means | is escaped\n        // so we leave it alone\n        return '|';\n      } else {\n        // add space before unescaped |\n        return ' |';\n      }\n    }),\n        cells = row.split(/ \\|/);\n    var i = 0; // First/last cell in a row cannot be empty if it has no leading/trailing pipe\n\n    if (!cells[0].trim()) {\n      cells.shift();\n    }\n\n    if (cells.length > 0 && !cells[cells.length - 1].trim()) {\n      cells.pop();\n    }\n\n    if (cells.length > count) {\n      cells.splice(count);\n    } else {\n      while (cells.length < count) {\n        cells.push('');\n      }\n    }\n\n    for (; i < cells.length; i++) {\n      // leading or trailing whitespace is ignored per the gfm spec\n      cells[i] = cells[i].trim().replace(/\\\\\\|/g, '|');\n    }\n\n    return cells;\n  }\n  /**\n   * Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n   * /c*$/ is vulnerable to REDOS.\n   *\n   * @param {string} str\n   * @param {string} c\n   * @param {boolean} invert Remove suffix of non-c chars instead. Default falsey.\n   */\n\n  function rtrim(str, c, invert) {\n    var l = str.length;\n\n    if (l === 0) {\n      return '';\n    } // Length of suffix matching the invert condition.\n\n\n    var suffLen = 0; // Step left until we fail to match the invert condition.\n\n    while (suffLen < l) {\n      var currChar = str.charAt(l - suffLen - 1);\n\n      if (currChar === c && !invert) {\n        suffLen++;\n      } else if (currChar !== c && invert) {\n        suffLen++;\n      } else {\n        break;\n      }\n    }\n\n    return str.slice(0, l - suffLen);\n  }\n  function findClosingBracket(str, b) {\n    if (str.indexOf(b[1]) === -1) {\n      return -1;\n    }\n\n    var l = str.length;\n    var level = 0,\n        i = 0;\n\n    for (; i < l; i++) {\n      if (str[i] === '\\\\') {\n        i++;\n      } else if (str[i] === b[0]) {\n        level++;\n      } else if (str[i] === b[1]) {\n        level--;\n\n        if (level < 0) {\n          return i;\n        }\n      }\n    }\n\n    return -1;\n  }\n  function checkSanitizeDeprecation(opt) {\n    if (opt && opt.sanitize && !opt.silent) {\n      console.warn('marked(): sanitize and sanitizer parameters are deprecated since version 0.7.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/#/USING_ADVANCED.md#options');\n    }\n  } // copied from https://stackoverflow.com/a/5450113/806777\n\n  /**\n   * @param {string} pattern\n   * @param {number} count\n   */\n\n  function repeatString(pattern, count) {\n    if (count < 1) {\n      return '';\n    }\n\n    var result = '';\n\n    while (count > 1) {\n      if (count & 1) {\n        result += pattern;\n      }\n\n      count >>= 1;\n      pattern += pattern;\n    }\n\n    return result + pattern;\n  }\n\n  function outputLink(cap, link, raw, lexer) {\n    var href = link.href;\n    var title = link.title ? escape(link.title) : null;\n    var text = cap[1].replace(/\\\\([\\[\\]])/g, '$1');\n\n    if (cap[0].charAt(0) !== '!') {\n      lexer.state.inLink = true;\n      var token = {\n        type: 'link',\n        raw: raw,\n        href: href,\n        title: title,\n        text: text,\n        tokens: lexer.inlineTokens(text, [])\n      };\n      lexer.state.inLink = false;\n      return token;\n    }\n\n    return {\n      type: 'image',\n      raw: raw,\n      href: href,\n      title: title,\n      text: escape(text)\n    };\n  }\n\n  function indentCodeCompensation(raw, text) {\n    var matchIndentToCode = raw.match(/^(\\s+)(?:```)/);\n\n    if (matchIndentToCode === null) {\n      return text;\n    }\n\n    var indentToCode = matchIndentToCode[1];\n    return text.split('\\n').map(function (node) {\n      var matchIndentInNode = node.match(/^\\s+/);\n\n      if (matchIndentInNode === null) {\n        return node;\n      }\n\n      var indentInNode = matchIndentInNode[0];\n\n      if (indentInNode.length >= indentToCode.length) {\n        return node.slice(indentToCode.length);\n      }\n\n      return node;\n    }).join('\\n');\n  }\n  /**\n   * Tokenizer\n   */\n\n\n  var Tokenizer = /*#__PURE__*/function () {\n    function Tokenizer(options) {\n      this.options = options || exports.defaults;\n    }\n\n    var _proto = Tokenizer.prototype;\n\n    _proto.space = function space(src) {\n      var cap = this.rules.block.newline.exec(src);\n\n      if (cap && cap[0].length > 0) {\n        return {\n          type: 'space',\n          raw: cap[0]\n        };\n      }\n    };\n\n    _proto.code = function code(src) {\n      var cap = this.rules.block.code.exec(src);\n\n      if (cap) {\n        var text = cap[0].replace(/^ {1,4}/gm, '');\n        return {\n          type: 'code',\n          raw: cap[0],\n          codeBlockStyle: 'indented',\n          text: !this.options.pedantic ? rtrim(text, '\\n') : text\n        };\n      }\n    };\n\n    _proto.fences = function fences(src) {\n      var cap = this.rules.block.fences.exec(src);\n\n      if (cap) {\n        var raw = cap[0];\n        var text = indentCodeCompensation(raw, cap[3] || '');\n        return {\n          type: 'code',\n          raw: raw,\n          lang: cap[2] ? cap[2].trim() : cap[2],\n          text: text\n        };\n      }\n    };\n\n    _proto.heading = function heading(src) {\n      var cap = this.rules.block.heading.exec(src);\n\n      if (cap) {\n        var text = cap[2].trim(); // remove trailing #s\n\n        if (/#$/.test(text)) {\n          var trimmed = rtrim(text, '#');\n\n          if (this.options.pedantic) {\n            text = trimmed.trim();\n          } else if (!trimmed || / $/.test(trimmed)) {\n            // CommonMark requires space before trailing #s\n            text = trimmed.trim();\n          }\n        }\n\n        var token = {\n          type: 'heading',\n          raw: cap[0],\n          depth: cap[1].length,\n          text: text,\n          tokens: []\n        };\n        this.lexer.inline(token.text, token.tokens);\n        return token;\n      }\n    };\n\n    _proto.hr = function hr(src) {\n      var cap = this.rules.block.hr.exec(src);\n\n      if (cap) {\n        return {\n          type: 'hr',\n          raw: cap[0]\n        };\n      }\n    };\n\n    _proto.blockquote = function blockquote(src) {\n      var cap = this.rules.block.blockquote.exec(src);\n\n      if (cap) {\n        var text = cap[0].replace(/^ *>[ \\t]?/gm, '');\n        return {\n          type: 'blockquote',\n          raw: cap[0],\n          tokens: this.lexer.blockTokens(text, []),\n          text: text\n        };\n      }\n    };\n\n    _proto.list = function list(src) {\n      var cap = this.rules.block.list.exec(src);\n\n      if (cap) {\n        var raw, istask, ischecked, indent, i, blankLine, endsWithBlankLine, line, nextLine, rawLine, itemContents, endEarly;\n        var bull = cap[1].trim();\n        var isordered = bull.length > 1;\n        var list = {\n          type: 'list',\n          raw: '',\n          ordered: isordered,\n          start: isordered ? +bull.slice(0, -1) : '',\n          loose: false,\n          items: []\n        };\n        bull = isordered ? \"\\\\d{1,9}\\\\\" + bull.slice(-1) : \"\\\\\" + bull;\n\n        if (this.options.pedantic) {\n          bull = isordered ? bull : '[*+-]';\n        } // Get next list item\n\n\n        var itemRegex = new RegExp(\"^( {0,3}\" + bull + \")((?:[\\t ][^\\\\n]*)?(?:\\\\n|$))\"); // Check if current bullet point can start a new List Item\n\n        while (src) {\n          endEarly = false;\n\n          if (!(cap = itemRegex.exec(src))) {\n            break;\n          }\n\n          if (this.rules.block.hr.test(src)) {\n            // End list if bullet was actually HR (possibly move into itemRegex?)\n            break;\n          }\n\n          raw = cap[0];\n          src = src.substring(raw.length);\n          line = cap[2].split('\\n', 1)[0];\n          nextLine = src.split('\\n', 1)[0];\n\n          if (this.options.pedantic) {\n            indent = 2;\n            itemContents = line.trimLeft();\n          } else {\n            indent = cap[2].search(/[^ ]/); // Find first non-space char\n\n            indent = indent > 4 ? 1 : indent; // Treat indented code blocks (> 4 spaces) as having only 1 indent\n\n            itemContents = line.slice(indent);\n            indent += cap[1].length;\n          }\n\n          blankLine = false;\n\n          if (!line && /^ *$/.test(nextLine)) {\n            // Items begin with at most one blank line\n            raw += nextLine + '\\n';\n            src = src.substring(nextLine.length + 1);\n            endEarly = true;\n          }\n\n          if (!endEarly) {\n            var nextBulletRegex = new RegExp(\"^ {0,\" + Math.min(3, indent - 1) + \"}(?:[*+-]|\\\\d{1,9}[.)])((?: [^\\\\n]*)?(?:\\\\n|$))\");\n            var hrRegex = new RegExp(\"^ {0,\" + Math.min(3, indent - 1) + \"}((?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$)\");\n            var fencesBeginRegex = new RegExp(\"^( {0,\" + Math.min(3, indent - 1) + \"})(```|~~~)\"); // Check if following lines should be included in List Item\n\n            while (src) {\n              rawLine = src.split('\\n', 1)[0];\n              line = rawLine; // Re-align to follow commonmark nesting rules\n\n              if (this.options.pedantic) {\n                line = line.replace(/^ {1,4}(?=( {4})*[^ ])/g, '  ');\n              } // End list item if found code fences\n\n\n              if (fencesBeginRegex.test(line)) {\n                break;\n              } // End list item if found start of new heading\n\n\n              if (this.rules.block.heading.test(line)) {\n                break;\n              } // End list item if found start of new bullet\n\n\n              if (nextBulletRegex.test(line)) {\n                break;\n              } // Horizontal rule found\n\n\n              if (hrRegex.test(src)) {\n                break;\n              }\n\n              if (line.search(/[^ ]/) >= indent || !line.trim()) {\n                // Dedent if possible\n                itemContents += '\\n' + line.slice(indent);\n              } else if (!blankLine) {\n                // Until blank line, item doesn't need indentation\n                itemContents += '\\n' + line;\n              } else {\n                // Otherwise, improper indentation ends this item\n                break;\n              }\n\n              if (!blankLine && !line.trim()) {\n                // Check if current line is blank\n                blankLine = true;\n              }\n\n              raw += rawLine + '\\n';\n              src = src.substring(rawLine.length + 1);\n            }\n          }\n\n          if (!list.loose) {\n            // If the previous item ended with a blank line, the list is loose\n            if (endsWithBlankLine) {\n              list.loose = true;\n            } else if (/\\n *\\n *$/.test(raw)) {\n              endsWithBlankLine = true;\n            }\n          } // Check for task list items\n\n\n          if (this.options.gfm) {\n            istask = /^\\[[ xX]\\] /.exec(itemContents);\n\n            if (istask) {\n              ischecked = istask[0] !== '[ ] ';\n              itemContents = itemContents.replace(/^\\[[ xX]\\] +/, '');\n            }\n          }\n\n          list.items.push({\n            type: 'list_item',\n            raw: raw,\n            task: !!istask,\n            checked: ischecked,\n            loose: false,\n            text: itemContents\n          });\n          list.raw += raw;\n        } // Do not consume newlines at end of final item. Alternatively, make itemRegex *start* with any newlines to simplify/speed up endsWithBlankLine logic\n\n\n        list.items[list.items.length - 1].raw = raw.trimRight();\n        list.items[list.items.length - 1].text = itemContents.trimRight();\n        list.raw = list.raw.trimRight();\n        var l = list.items.length; // Item child tokens handled here at end because we needed to have the final item to trim it first\n\n        for (i = 0; i < l; i++) {\n          this.lexer.state.top = false;\n          list.items[i].tokens = this.lexer.blockTokens(list.items[i].text, []);\n          var spacers = list.items[i].tokens.filter(function (t) {\n            return t.type === 'space';\n          });\n          var hasMultipleLineBreaks = spacers.every(function (t) {\n            var chars = t.raw.split('');\n            var lineBreaks = 0;\n\n            for (var _iterator = _createForOfIteratorHelperLoose(chars), _step; !(_step = _iterator()).done;) {\n              var _char = _step.value;\n\n              if (_char === '\\n') {\n                lineBreaks += 1;\n              }\n\n              if (lineBreaks > 1) {\n                return true;\n              }\n            }\n\n            return false;\n          });\n\n          if (!list.loose && spacers.length && hasMultipleLineBreaks) {\n            // Having a single line break doesn't mean a list is loose. A single line break is terminating the last list item\n            list.loose = true;\n            list.items[i].loose = true;\n          }\n        }\n\n        return list;\n      }\n    };\n\n    _proto.html = function html(src) {\n      var cap = this.rules.block.html.exec(src);\n\n      if (cap) {\n        var token = {\n          type: 'html',\n          raw: cap[0],\n          pre: !this.options.sanitizer && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n          text: cap[0]\n        };\n\n        if (this.options.sanitize) {\n          token.type = 'paragraph';\n          token.text = this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0]);\n          token.tokens = [];\n          this.lexer.inline(token.text, token.tokens);\n        }\n\n        return token;\n      }\n    };\n\n    _proto.def = function def(src) {\n      var cap = this.rules.block.def.exec(src);\n\n      if (cap) {\n        if (cap[3]) cap[3] = cap[3].substring(1, cap[3].length - 1);\n        var tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n        return {\n          type: 'def',\n          tag: tag,\n          raw: cap[0],\n          href: cap[2],\n          title: cap[3]\n        };\n      }\n    };\n\n    _proto.table = function table(src) {\n      var cap = this.rules.block.table.exec(src);\n\n      if (cap) {\n        var item = {\n          type: 'table',\n          header: splitCells(cap[1]).map(function (c) {\n            return {\n              text: c\n            };\n          }),\n          align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n          rows: cap[3] && cap[3].trim() ? cap[3].replace(/\\n[ \\t]*$/, '').split('\\n') : []\n        };\n\n        if (item.header.length === item.align.length) {\n          item.raw = cap[0];\n          var l = item.align.length;\n          var i, j, k, row;\n\n          for (i = 0; i < l; i++) {\n            if (/^ *-+: *$/.test(item.align[i])) {\n              item.align[i] = 'right';\n            } else if (/^ *:-+: *$/.test(item.align[i])) {\n              item.align[i] = 'center';\n            } else if (/^ *:-+ *$/.test(item.align[i])) {\n              item.align[i] = 'left';\n            } else {\n              item.align[i] = null;\n            }\n          }\n\n          l = item.rows.length;\n\n          for (i = 0; i < l; i++) {\n            item.rows[i] = splitCells(item.rows[i], item.header.length).map(function (c) {\n              return {\n                text: c\n              };\n            });\n          } // parse child tokens inside headers and cells\n          // header child tokens\n\n\n          l = item.header.length;\n\n          for (j = 0; j < l; j++) {\n            item.header[j].tokens = [];\n            this.lexer.inline(item.header[j].text, item.header[j].tokens);\n          } // cell child tokens\n\n\n          l = item.rows.length;\n\n          for (j = 0; j < l; j++) {\n            row = item.rows[j];\n\n            for (k = 0; k < row.length; k++) {\n              row[k].tokens = [];\n              this.lexer.inline(row[k].text, row[k].tokens);\n            }\n          }\n\n          return item;\n        }\n      }\n    };\n\n    _proto.lheading = function lheading(src) {\n      var cap = this.rules.block.lheading.exec(src);\n\n      if (cap) {\n        var token = {\n          type: 'heading',\n          raw: cap[0],\n          depth: cap[2].charAt(0) === '=' ? 1 : 2,\n          text: cap[1],\n          tokens: []\n        };\n        this.lexer.inline(token.text, token.tokens);\n        return token;\n      }\n    };\n\n    _proto.paragraph = function paragraph(src) {\n      var cap = this.rules.block.paragraph.exec(src);\n\n      if (cap) {\n        var token = {\n          type: 'paragraph',\n          raw: cap[0],\n          text: cap[1].charAt(cap[1].length - 1) === '\\n' ? cap[1].slice(0, -1) : cap[1],\n          tokens: []\n        };\n        this.lexer.inline(token.text, token.tokens);\n        return token;\n      }\n    };\n\n    _proto.text = function text(src) {\n      var cap = this.rules.block.text.exec(src);\n\n      if (cap) {\n        var token = {\n          type: 'text',\n          raw: cap[0],\n          text: cap[0],\n          tokens: []\n        };\n        this.lexer.inline(token.text, token.tokens);\n        return token;\n      }\n    };\n\n    _proto.escape = function escape$1(src) {\n      var cap = this.rules.inline.escape.exec(src);\n\n      if (cap) {\n        return {\n          type: 'escape',\n          raw: cap[0],\n          text: escape(cap[1])\n        };\n      }\n    };\n\n    _proto.tag = function tag(src) {\n      var cap = this.rules.inline.tag.exec(src);\n\n      if (cap) {\n        if (!this.lexer.state.inLink && /^<a /i.test(cap[0])) {\n          this.lexer.state.inLink = true;\n        } else if (this.lexer.state.inLink && /^<\\/a>/i.test(cap[0])) {\n          this.lexer.state.inLink = false;\n        }\n\n        if (!this.lexer.state.inRawBlock && /^<(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n          this.lexer.state.inRawBlock = true;\n        } else if (this.lexer.state.inRawBlock && /^<\\/(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n          this.lexer.state.inRawBlock = false;\n        }\n\n        return {\n          type: this.options.sanitize ? 'text' : 'html',\n          raw: cap[0],\n          inLink: this.lexer.state.inLink,\n          inRawBlock: this.lexer.state.inRawBlock,\n          text: this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0]) : cap[0]\n        };\n      }\n    };\n\n    _proto.link = function link(src) {\n      var cap = this.rules.inline.link.exec(src);\n\n      if (cap) {\n        var trimmedUrl = cap[2].trim();\n\n        if (!this.options.pedantic && /^</.test(trimmedUrl)) {\n          // commonmark requires matching angle brackets\n          if (!/>$/.test(trimmedUrl)) {\n            return;\n          } // ending angle bracket cannot be escaped\n\n\n          var rtrimSlash = rtrim(trimmedUrl.slice(0, -1), '\\\\');\n\n          if ((trimmedUrl.length - rtrimSlash.length) % 2 === 0) {\n            return;\n          }\n        } else {\n          // find closing parenthesis\n          var lastParenIndex = findClosingBracket(cap[2], '()');\n\n          if (lastParenIndex > -1) {\n            var start = cap[0].indexOf('!') === 0 ? 5 : 4;\n            var linkLen = start + cap[1].length + lastParenIndex;\n            cap[2] = cap[2].substring(0, lastParenIndex);\n            cap[0] = cap[0].substring(0, linkLen).trim();\n            cap[3] = '';\n          }\n        }\n\n        var href = cap[2];\n        var title = '';\n\n        if (this.options.pedantic) {\n          // split pedantic href and title\n          var link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n\n          if (link) {\n            href = link[1];\n            title = link[3];\n          }\n        } else {\n          title = cap[3] ? cap[3].slice(1, -1) : '';\n        }\n\n        href = href.trim();\n\n        if (/^</.test(href)) {\n          if (this.options.pedantic && !/>$/.test(trimmedUrl)) {\n            // pedantic allows starting angle bracket without ending angle bracket\n            href = href.slice(1);\n          } else {\n            href = href.slice(1, -1);\n          }\n        }\n\n        return outputLink(cap, {\n          href: href ? href.replace(this.rules.inline._escapes, '$1') : href,\n          title: title ? title.replace(this.rules.inline._escapes, '$1') : title\n        }, cap[0], this.lexer);\n      }\n    };\n\n    _proto.reflink = function reflink(src, links) {\n      var cap;\n\n      if ((cap = this.rules.inline.reflink.exec(src)) || (cap = this.rules.inline.nolink.exec(src))) {\n        var link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n        link = links[link.toLowerCase()];\n\n        if (!link || !link.href) {\n          var text = cap[0].charAt(0);\n          return {\n            type: 'text',\n            raw: text,\n            text: text\n          };\n        }\n\n        return outputLink(cap, link, cap[0], this.lexer);\n      }\n    };\n\n    _proto.emStrong = function emStrong(src, maskedSrc, prevChar) {\n      if (prevChar === void 0) {\n        prevChar = '';\n      }\n\n      var match = this.rules.inline.emStrong.lDelim.exec(src);\n      if (!match) return; // _ can't be between two alphanumerics. \\p{L}\\p{N} includes non-english alphabet/numbers as well\n\n      if (match[3] && prevChar.match(/(?:[0-9A-Za-z\\xAA\\xB2\\xB3\\xB5\\xB9\\xBA\\xBC-\\xBE\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05D0-\\u05EA\\u05EF-\\u05F2\\u0620-\\u064A\\u0660-\\u0669\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07C0-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086A\\u0870-\\u0887\\u0889-\\u088E\\u08A0-\\u08C9\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0966-\\u096F\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09E6-\\u09F1\\u09F4-\\u09F9\\u09FC\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A6F\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AE6-\\u0AEF\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B66-\\u0B6F\\u0B71-\\u0B77\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0BE6-\\u0BF2\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C5D\\u0C60\\u0C61\\u0C66-\\u0C6F\\u0C78-\\u0C7E\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDD\\u0CDE\\u0CE0\\u0CE1\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D04-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D58-\\u0D61\\u0D66-\\u0D78\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DE6-\\u0DEF\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E86-\\u0E8A\\u0E8C-\\u0EA3\\u0EA5\\u0EA7-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F20-\\u0F33\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F-\\u1049\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u1090-\\u1099\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1369-\\u137C\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u1711\\u171F-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u17E0-\\u17E9\\u17F0-\\u17F9\\u1810-\\u1819\\u1820-\\u1878\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19DA\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1A80-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4C\\u1B50-\\u1B59\\u1B83-\\u1BA0\\u1BAE-\\u1BE5\\u1C00-\\u1C23\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1C80-\\u1C88\\u1C90-\\u1CBA\\u1CBD-\\u1CBF\\u1CE9-\\u1CEC\\u1CEE-\\u1CF3\\u1CF5\\u1CF6\\u1CFA\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2070\\u2071\\u2074-\\u2079\\u207F-\\u2089\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2150-\\u2189\\u2460-\\u249B\\u24EA-\\u24FF\\u2776-\\u2793\\u2C00-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2CFD\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u3192-\\u3195\\u31A0-\\u31BF\\u31F0-\\u31FF\\u3220-\\u3229\\u3248-\\u324F\\u3251-\\u325F\\u3280-\\u3289\\u32B1-\\u32BF\\u3400-\\u4DBF\\u4E00-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7CA\\uA7D0\\uA7D1\\uA7D3\\uA7D5-\\uA7D9\\uA7F2-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA830-\\uA835\\uA840-\\uA873\\uA882-\\uA8B3\\uA8D0-\\uA8D9\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA8FE\\uA900-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF-\\uA9D9\\uA9E0-\\uA9E4\\uA9E6-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB69\\uAB70-\\uABE2\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD07-\\uDD33\\uDD40-\\uDD78\\uDD8A\\uDD8B\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDEE1-\\uDEFB\\uDF00-\\uDF23\\uDF2D-\\uDF4A\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCA0-\\uDCA9\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDD70-\\uDD7A\\uDD7C-\\uDD8A\\uDD8C-\\uDD92\\uDD94\\uDD95\\uDD97-\\uDDA1\\uDDA3-\\uDDB1\\uDDB3-\\uDDB9\\uDDBB\\uDDBC\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67\\uDF80-\\uDF85\\uDF87-\\uDFB0\\uDFB2-\\uDFBA]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC58-\\uDC76\\uDC79-\\uDC9E\\uDCA7-\\uDCAF\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDCFB-\\uDD1B\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBC-\\uDDCF\\uDDD2-\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE35\\uDE40-\\uDE48\\uDE60-\\uDE7E\\uDE80-\\uDE9F\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDEEB-\\uDEEF\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF58-\\uDF72\\uDF78-\\uDF91\\uDFA9-\\uDFAF]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2\\uDCFA-\\uDD23\\uDD30-\\uDD39\\uDE60-\\uDE7E\\uDE80-\\uDEA9\\uDEB0\\uDEB1\\uDF00-\\uDF27\\uDF30-\\uDF45\\uDF51-\\uDF54\\uDF70-\\uDF81\\uDFB0-\\uDFCB\\uDFE0-\\uDFF6]|\\uD804[\\uDC03-\\uDC37\\uDC52-\\uDC6F\\uDC71\\uDC72\\uDC75\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDCF0-\\uDCF9\\uDD03-\\uDD26\\uDD36-\\uDD3F\\uDD44\\uDD47\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDD0-\\uDDDA\\uDDDC\\uDDE1-\\uDDF4\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDEF0-\\uDEF9\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC00-\\uDC34\\uDC47-\\uDC4A\\uDC50-\\uDC59\\uDC5F-\\uDC61\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDCD0-\\uDCD9\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE50-\\uDE59\\uDE80-\\uDEAA\\uDEB8\\uDEC0-\\uDEC9\\uDF00-\\uDF1A\\uDF30-\\uDF3B\\uDF40-\\uDF46]|\\uD806[\\uDC00-\\uDC2B\\uDCA0-\\uDCF2\\uDCFF-\\uDD06\\uDD09\\uDD0C-\\uDD13\\uDD15\\uDD16\\uDD18-\\uDD2F\\uDD3F\\uDD41\\uDD50-\\uDD59\\uDDA0-\\uDDA7\\uDDAA-\\uDDD0\\uDDE1\\uDDE3\\uDE00\\uDE0B-\\uDE32\\uDE3A\\uDE50\\uDE5C-\\uDE89\\uDE9D\\uDEB0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC2E\\uDC40\\uDC50-\\uDC6C\\uDC72-\\uDC8F\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD30\\uDD46\\uDD50-\\uDD59\\uDD60-\\uDD65\\uDD67\\uDD68\\uDD6A-\\uDD89\\uDD98\\uDDA0-\\uDDA9\\uDEE0-\\uDEF2\\uDFB0\\uDFC0-\\uDFD4]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|\\uD80B[\\uDF90-\\uDFF0]|[\\uD80C\\uD81C-\\uD820\\uD822\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879\\uD880-\\uD883][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDE60-\\uDE69\\uDE70-\\uDEBE\\uDEC0-\\uDEC9\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF50-\\uDF59\\uDF5B-\\uDF61\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDE40-\\uDE96\\uDF00-\\uDF4A\\uDF50\\uDF93-\\uDF9F\\uDFE0\\uDFE1\\uDFE3]|\\uD821[\\uDC00-\\uDFF7]|\\uD823[\\uDC00-\\uDCD5\\uDD00-\\uDD08]|\\uD82B[\\uDFF0-\\uDFF3\\uDFF5-\\uDFFB\\uDFFD\\uDFFE]|\\uD82C[\\uDC00-\\uDD22\\uDD50-\\uDD52\\uDD64-\\uDD67\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD834[\\uDEE0-\\uDEF3\\uDF60-\\uDF78]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB\\uDFCE-\\uDFFF]|\\uD837[\\uDF00-\\uDF1E]|\\uD838[\\uDD00-\\uDD2C\\uDD37-\\uDD3D\\uDD40-\\uDD49\\uDD4E\\uDE90-\\uDEAD\\uDEC0-\\uDEEB\\uDEF0-\\uDEF9]|\\uD839[\\uDFE0-\\uDFE6\\uDFE8-\\uDFEB\\uDFED\\uDFEE\\uDFF0-\\uDFFE]|\\uD83A[\\uDC00-\\uDCC4\\uDCC7-\\uDCCF\\uDD00-\\uDD43\\uDD4B\\uDD50-\\uDD59]|\\uD83B[\\uDC71-\\uDCAB\\uDCAD-\\uDCAF\\uDCB1-\\uDCB4\\uDD01-\\uDD2D\\uDD2F-\\uDD3D\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD83C[\\uDD00-\\uDD0C]|\\uD83E[\\uDFF0-\\uDFF9]|\\uD869[\\uDC00-\\uDEDF\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF38\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D]|\\uD884[\\uDC00-\\uDF4A])/)) return;\n      var nextChar = match[1] || match[2] || '';\n\n      if (!nextChar || nextChar && (prevChar === '' || this.rules.inline.punctuation.exec(prevChar))) {\n        var lLength = match[0].length - 1;\n        var rDelim,\n            rLength,\n            delimTotal = lLength,\n            midDelimTotal = 0;\n        var endReg = match[0][0] === '*' ? this.rules.inline.emStrong.rDelimAst : this.rules.inline.emStrong.rDelimUnd;\n        endReg.lastIndex = 0; // Clip maskedSrc to same section of string as src (move to lexer?)\n\n        maskedSrc = maskedSrc.slice(-1 * src.length + lLength);\n\n        while ((match = endReg.exec(maskedSrc)) != null) {\n          rDelim = match[1] || match[2] || match[3] || match[4] || match[5] || match[6];\n          if (!rDelim) continue; // skip single * in __abc*abc__\n\n          rLength = rDelim.length;\n\n          if (match[3] || match[4]) {\n            // found another Left Delim\n            delimTotal += rLength;\n            continue;\n          } else if (match[5] || match[6]) {\n            // either Left or Right Delim\n            if (lLength % 3 && !((lLength + rLength) % 3)) {\n              midDelimTotal += rLength;\n              continue; // CommonMark Emphasis Rules 9-10\n            }\n          }\n\n          delimTotal -= rLength;\n          if (delimTotal > 0) continue; // Haven't found enough closing delimiters\n          // Remove extra characters. *a*** -> *a*\n\n          rLength = Math.min(rLength, rLength + delimTotal + midDelimTotal); // Create `em` if smallest delimiter has odd char count. *a***\n\n          if (Math.min(lLength, rLength) % 2) {\n            var _text = src.slice(1, lLength + match.index + rLength);\n\n            return {\n              type: 'em',\n              raw: src.slice(0, lLength + match.index + rLength + 1),\n              text: _text,\n              tokens: this.lexer.inlineTokens(_text, [])\n            };\n          } // Create 'strong' if smallest delimiter has even char count. **a***\n\n\n          var text = src.slice(2, lLength + match.index + rLength - 1);\n          return {\n            type: 'strong',\n            raw: src.slice(0, lLength + match.index + rLength + 1),\n            text: text,\n            tokens: this.lexer.inlineTokens(text, [])\n          };\n        }\n      }\n    };\n\n    _proto.codespan = function codespan(src) {\n      var cap = this.rules.inline.code.exec(src);\n\n      if (cap) {\n        var text = cap[2].replace(/\\n/g, ' ');\n        var hasNonSpaceChars = /[^ ]/.test(text);\n        var hasSpaceCharsOnBothEnds = /^ /.test(text) && / $/.test(text);\n\n        if (hasNonSpaceChars && hasSpaceCharsOnBothEnds) {\n          text = text.substring(1, text.length - 1);\n        }\n\n        text = escape(text, true);\n        return {\n          type: 'codespan',\n          raw: cap[0],\n          text: text\n        };\n      }\n    };\n\n    _proto.br = function br(src) {\n      var cap = this.rules.inline.br.exec(src);\n\n      if (cap) {\n        return {\n          type: 'br',\n          raw: cap[0]\n        };\n      }\n    };\n\n    _proto.del = function del(src) {\n      var cap = this.rules.inline.del.exec(src);\n\n      if (cap) {\n        return {\n          type: 'del',\n          raw: cap[0],\n          text: cap[2],\n          tokens: this.lexer.inlineTokens(cap[2], [])\n        };\n      }\n    };\n\n    _proto.autolink = function autolink(src, mangle) {\n      var cap = this.rules.inline.autolink.exec(src);\n\n      if (cap) {\n        var text, href;\n\n        if (cap[2] === '@') {\n          text = escape(this.options.mangle ? mangle(cap[1]) : cap[1]);\n          href = 'mailto:' + text;\n        } else {\n          text = escape(cap[1]);\n          href = text;\n        }\n\n        return {\n          type: 'link',\n          raw: cap[0],\n          text: text,\n          href: href,\n          tokens: [{\n            type: 'text',\n            raw: text,\n            text: text\n          }]\n        };\n      }\n    };\n\n    _proto.url = function url(src, mangle) {\n      var cap;\n\n      if (cap = this.rules.inline.url.exec(src)) {\n        var text, href;\n\n        if (cap[2] === '@') {\n          text = escape(this.options.mangle ? mangle(cap[0]) : cap[0]);\n          href = 'mailto:' + text;\n        } else {\n          // do extended autolink path validation\n          var prevCapZero;\n\n          do {\n            prevCapZero = cap[0];\n            cap[0] = this.rules.inline._backpedal.exec(cap[0])[0];\n          } while (prevCapZero !== cap[0]);\n\n          text = escape(cap[0]);\n\n          if (cap[1] === 'www.') {\n            href = 'http://' + text;\n          } else {\n            href = text;\n          }\n        }\n\n        return {\n          type: 'link',\n          raw: cap[0],\n          text: text,\n          href: href,\n          tokens: [{\n            type: 'text',\n            raw: text,\n            text: text\n          }]\n        };\n      }\n    };\n\n    _proto.inlineText = function inlineText(src, smartypants) {\n      var cap = this.rules.inline.text.exec(src);\n\n      if (cap) {\n        var text;\n\n        if (this.lexer.state.inRawBlock) {\n          text = this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0]) : cap[0];\n        } else {\n          text = escape(this.options.smartypants ? smartypants(cap[0]) : cap[0]);\n        }\n\n        return {\n          type: 'text',\n          raw: cap[0],\n          text: text\n        };\n      }\n    };\n\n    return Tokenizer;\n  }();\n\n  /**\n   * Block-Level Grammar\n   */\n\n  var block = {\n    newline: /^(?: *(?:\\n|$))+/,\n    code: /^( {4}[^\\n]+(?:\\n(?: *(?:\\n|$))*)?)+/,\n    fences: /^ {0,3}(`{3,}(?=[^`\\n]*\\n)|~{3,})([^\\n]*)\\n(?:|([\\s\\S]*?)\\n)(?: {0,3}\\1[~`]* *(?=\\n|$)|$)/,\n    hr: /^ {0,3}((?:-[\\t ]*){3,}|(?:_[ \\t]*){3,}|(?:\\*[ \\t]*){3,})(?:\\n+|$)/,\n    heading: /^ {0,3}(#{1,6})(?=\\s|$)(.*)(?:\\n+|$)/,\n    blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\n    list: /^( {0,3}bull)([ \\t][^\\n]+?)?(?:\\n|$)/,\n    html: '^ {0,3}(?:' // optional indentation\n    + '<(script|pre|style|textarea)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n    + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n    + '|<\\\\?[\\\\s\\\\S]*?(?:\\\\?>\\\\n*|$)' // (3)\n    + '|<![A-Z][\\\\s\\\\S]*?(?:>\\\\n*|$)' // (4)\n    + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?(?:\\\\]\\\\]>\\\\n*|$)' // (5)\n    + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (6)\n    + '|<(?!script|pre|style|textarea)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) open tag\n    + '|</(?!script|pre|style|textarea)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) closing tag\n    + ')',\n    def: /^ {0,3}\\[(label)\\]: *(?:\\n *)?<?([^\\s>]+)>?(?:(?: +(?:\\n *)?| *\\n *)(title))? *(?:\\n+|$)/,\n    table: noopTest,\n    lheading: /^([^\\n]+)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n    // regex template, placeholders will be replaced according to different paragraph\n    // interruption rules of commonmark and the original markdown spec:\n    _paragraph: /^([^\\n]+(?:\\n(?!hr|heading|lheading|blockquote|fences|list|html|table| +\\n)[^\\n]+)*)/,\n    text: /^[^\\n]+/\n  };\n  block._label = /(?!\\s*\\])(?:\\\\.|[^\\[\\]\\\\])+/;\n  block._title = /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/;\n  block.def = edit(block.def).replace('label', block._label).replace('title', block._title).getRegex();\n  block.bullet = /(?:[*+-]|\\d{1,9}[.)])/;\n  block.listItemStart = edit(/^( *)(bull) */).replace('bull', block.bullet).getRegex();\n  block.list = edit(block.list).replace(/bull/g, block.bullet).replace('hr', '\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))').replace('def', '\\\\n+(?=' + block.def.source + ')').getRegex();\n  block._tag = 'address|article|aside|base|basefont|blockquote|body|caption' + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption' + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe' + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option' + '|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr' + '|track|ul';\n  block._comment = /<!--(?!-?>)[\\s\\S]*?(?:-->|$)/;\n  block.html = edit(block.html, 'i').replace('comment', block._comment).replace('tag', block._tag).replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/).getRegex();\n  block.paragraph = edit(block._paragraph).replace('hr', block.hr).replace('heading', ' {0,3}#{1,6} ').replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('|table', '').replace('blockquote', ' {0,3}>').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)').replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n  block.blockquote = edit(block.blockquote).replace('paragraph', block.paragraph).getRegex();\n  /**\n   * Normal Block Grammar\n   */\n\n  block.normal = merge({}, block);\n  /**\n   * GFM Block Grammar\n   */\n\n  block.gfm = merge({}, block.normal, {\n    table: '^ *([^\\\\n ].*\\\\|.*)\\\\n' // Header\n    + ' {0,3}(?:\\\\| *)?(:?-+:? *(?:\\\\| *:?-+:? *)*)(?:\\\\| *)?' // Align\n    + '(?:\\\\n((?:(?! *\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)' // Cells\n\n  });\n  block.gfm.table = edit(block.gfm.table).replace('hr', block.hr).replace('heading', ' {0,3}#{1,6} ').replace('blockquote', ' {0,3}>').replace('code', ' {4}[^\\\\n]').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)').replace('tag', block._tag) // tables can be interrupted by type (6) html blocks\n  .getRegex();\n  block.gfm.paragraph = edit(block._paragraph).replace('hr', block.hr).replace('heading', ' {0,3}#{1,6} ').replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('table', block.gfm.table) // interrupt paragraphs with table\n  .replace('blockquote', ' {0,3}>').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)').replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n  /**\n   * Pedantic grammar (original John Gruber's loose markdown specification)\n   */\n\n  block.pedantic = merge({}, block.normal, {\n    html: edit('^ *(?:comment *(?:\\\\n|\\\\s*$)' + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n    + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))').replace('comment', block._comment).replace(/tag/g, '(?!(?:' + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub' + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)' + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b').getRegex(),\n    def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/,\n    heading: /^(#{1,6})(.*)(?:\\n+|$)/,\n    fences: noopTest,\n    // fences not supported\n    paragraph: edit(block.normal._paragraph).replace('hr', block.hr).replace('heading', ' *#{1,6} *[^\\n]').replace('lheading', block.lheading).replace('blockquote', ' {0,3}>').replace('|fences', '').replace('|list', '').replace('|html', '').getRegex()\n  });\n  /**\n   * Inline-Level Grammar\n   */\n\n  var inline = {\n    escape: /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/,\n    autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\n    url: noopTest,\n    tag: '^comment' + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n    + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n    + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n    + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n    + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>',\n    // CDATA section\n    link: /^!?\\[(label)\\]\\(\\s*(href)(?:\\s+(title))?\\s*\\)/,\n    reflink: /^!?\\[(label)\\]\\[(ref)\\]/,\n    nolink: /^!?\\[(ref)\\](?:\\[\\])?/,\n    reflinkSearch: 'reflink|nolink(?!\\\\()',\n    emStrong: {\n      lDelim: /^(?:\\*+(?:([punct_])|[^\\s*]))|^_+(?:([punct*])|([^\\s_]))/,\n      //        (1) and (2) can only be a Right Delimiter. (3) and (4) can only be Left.  (5) and (6) can be either Left or Right.\n      //          () Skip orphan inside strong  () Consume to delim (1) #***                (2) a***#, a***                   (3) #***a, ***a                 (4) ***#              (5) #***#                 (6) a***a\n      rDelimAst: /^[^_*]*?\\_\\_[^_*]*?\\*[^_*]*?(?=\\_\\_)|[^*]+(?=[^*])|[punct_](\\*+)(?=[\\s]|$)|[^punct*_\\s](\\*+)(?=[punct_\\s]|$)|[punct_\\s](\\*+)(?=[^punct*_\\s])|[\\s](\\*+)(?=[punct_])|[punct_](\\*+)(?=[punct_])|[^punct*_\\s](\\*+)(?=[^punct*_\\s])/,\n      rDelimUnd: /^[^_*]*?\\*\\*[^_*]*?\\_[^_*]*?(?=\\*\\*)|[^_]+(?=[^_])|[punct*](\\_+)(?=[\\s]|$)|[^punct*_\\s](\\_+)(?=[punct*\\s]|$)|[punct*\\s](\\_+)(?=[^punct*_\\s])|[\\s](\\_+)(?=[punct*])|[punct*](\\_+)(?=[punct*])/ // ^- Not allowed for _\n\n    },\n    code: /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/,\n    br: /^( {2,}|\\\\)\\n(?!\\s*$)/,\n    del: noopTest,\n    text: /^(`+|[^`])(?:(?= {2,}\\n)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*_]|\\b_|$)|[^ ](?= {2,}\\n)))/,\n    punctuation: /^([\\spunctuation])/\n  }; // list of punctuation marks from CommonMark spec\n  // without * and _ to handle the different emphasis markers * and _\n\n  inline._punctuation = '!\"#$%&\\'()+\\\\-.,/:;<=>?@\\\\[\\\\]`^{|}~';\n  inline.punctuation = edit(inline.punctuation).replace(/punctuation/g, inline._punctuation).getRegex(); // sequences em should skip over [title](link), `code`, <html>\n\n  inline.blockSkip = /\\[[^\\]]*?\\]\\([^\\)]*?\\)|`[^`]*?`|<[^>]*?>/g;\n  inline.escapedEmSt = /\\\\\\*|\\\\_/g;\n  inline._comment = edit(block._comment).replace('(?:-->|$)', '-->').getRegex();\n  inline.emStrong.lDelim = edit(inline.emStrong.lDelim).replace(/punct/g, inline._punctuation).getRegex();\n  inline.emStrong.rDelimAst = edit(inline.emStrong.rDelimAst, 'g').replace(/punct/g, inline._punctuation).getRegex();\n  inline.emStrong.rDelimUnd = edit(inline.emStrong.rDelimUnd, 'g').replace(/punct/g, inline._punctuation).getRegex();\n  inline._escapes = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/g;\n  inline._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\n  inline._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\n  inline.autolink = edit(inline.autolink).replace('scheme', inline._scheme).replace('email', inline._email).getRegex();\n  inline._attribute = /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/;\n  inline.tag = edit(inline.tag).replace('comment', inline._comment).replace('attribute', inline._attribute).getRegex();\n  inline._label = /(?:\\[(?:\\\\.|[^\\[\\]\\\\])*\\]|\\\\.|`[^`]*`|[^\\[\\]\\\\`])*?/;\n  inline._href = /<(?:\\\\.|[^\\n<>\\\\])+>|[^\\s\\x00-\\x1f]*/;\n  inline._title = /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/;\n  inline.link = edit(inline.link).replace('label', inline._label).replace('href', inline._href).replace('title', inline._title).getRegex();\n  inline.reflink = edit(inline.reflink).replace('label', inline._label).replace('ref', block._label).getRegex();\n  inline.nolink = edit(inline.nolink).replace('ref', block._label).getRegex();\n  inline.reflinkSearch = edit(inline.reflinkSearch, 'g').replace('reflink', inline.reflink).replace('nolink', inline.nolink).getRegex();\n  /**\n   * Normal Inline Grammar\n   */\n\n  inline.normal = merge({}, inline);\n  /**\n   * Pedantic Inline Grammar\n   */\n\n  inline.pedantic = merge({}, inline.normal, {\n    strong: {\n      start: /^__|\\*\\*/,\n      middle: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n      endAst: /\\*\\*(?!\\*)/g,\n      endUnd: /__(?!_)/g\n    },\n    em: {\n      start: /^_|\\*/,\n      middle: /^()\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)|^_(?=\\S)([\\s\\S]*?\\S)_(?!_)/,\n      endAst: /\\*(?!\\*)/g,\n      endUnd: /_(?!_)/g\n    },\n    link: edit(/^!?\\[(label)\\]\\((.*?)\\)/).replace('label', inline._label).getRegex(),\n    reflink: edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/).replace('label', inline._label).getRegex()\n  });\n  /**\n   * GFM Inline Grammar\n   */\n\n  inline.gfm = merge({}, inline.normal, {\n    escape: edit(inline.escape).replace('])', '~|])').getRegex(),\n    _extended_email: /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,\n    url: /^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/,\n    _backpedal: /(?:[^?!.,:;*_~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,\n    del: /^(~~?)(?=[^\\s~])([\\s\\S]*?[^\\s~])\\1(?=[^~]|$)/,\n    text: /^([`~]+|[^`~])(?:(?= {2,}\\n)|(?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*~_]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)))/\n  });\n  inline.gfm.url = edit(inline.gfm.url, 'i').replace('email', inline.gfm._extended_email).getRegex();\n  /**\n   * GFM + Line Breaks Inline Grammar\n   */\n\n  inline.breaks = merge({}, inline.gfm, {\n    br: edit(inline.br).replace('{2,}', '*').getRegex(),\n    text: edit(inline.gfm.text).replace('\\\\b_', '\\\\b_| {2,}\\\\n').replace(/\\{2,\\}/g, '*').getRegex()\n  });\n\n  /**\n   * smartypants text replacement\n   * @param {string} text\n   */\n\n  function smartypants(text) {\n    return text // em-dashes\n    .replace(/---/g, \"\\u2014\") // en-dashes\n    .replace(/--/g, \"\\u2013\") // opening singles\n    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, \"$1\\u2018\") // closing singles & apostrophes\n    .replace(/'/g, \"\\u2019\") // opening doubles\n    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, \"$1\\u201C\") // closing doubles\n    .replace(/\"/g, \"\\u201D\") // ellipses\n    .replace(/\\.{3}/g, \"\\u2026\");\n  }\n  /**\n   * mangle email addresses\n   * @param {string} text\n   */\n\n\n  function mangle(text) {\n    var out = '',\n        i,\n        ch;\n    var l = text.length;\n\n    for (i = 0; i < l; i++) {\n      ch = text.charCodeAt(i);\n\n      if (Math.random() > 0.5) {\n        ch = 'x' + ch.toString(16);\n      }\n\n      out += '&#' + ch + ';';\n    }\n\n    return out;\n  }\n  /**\n   * Block Lexer\n   */\n\n\n  var Lexer = /*#__PURE__*/function () {\n    function Lexer(options) {\n      this.tokens = [];\n      this.tokens.links = Object.create(null);\n      this.options = options || exports.defaults;\n      this.options.tokenizer = this.options.tokenizer || new Tokenizer();\n      this.tokenizer = this.options.tokenizer;\n      this.tokenizer.options = this.options;\n      this.tokenizer.lexer = this;\n      this.inlineQueue = [];\n      this.state = {\n        inLink: false,\n        inRawBlock: false,\n        top: true\n      };\n      var rules = {\n        block: block.normal,\n        inline: inline.normal\n      };\n\n      if (this.options.pedantic) {\n        rules.block = block.pedantic;\n        rules.inline = inline.pedantic;\n      } else if (this.options.gfm) {\n        rules.block = block.gfm;\n\n        if (this.options.breaks) {\n          rules.inline = inline.breaks;\n        } else {\n          rules.inline = inline.gfm;\n        }\n      }\n\n      this.tokenizer.rules = rules;\n    }\n    /**\n     * Expose Rules\n     */\n\n\n    /**\n     * Static Lex Method\n     */\n    Lexer.lex = function lex(src, options) {\n      var lexer = new Lexer(options);\n      return lexer.lex(src);\n    }\n    /**\n     * Static Lex Inline Method\n     */\n    ;\n\n    Lexer.lexInline = function lexInline(src, options) {\n      var lexer = new Lexer(options);\n      return lexer.inlineTokens(src);\n    }\n    /**\n     * Preprocessing\n     */\n    ;\n\n    var _proto = Lexer.prototype;\n\n    _proto.lex = function lex(src) {\n      src = src.replace(/\\r\\n|\\r/g, '\\n');\n      this.blockTokens(src, this.tokens);\n      var next;\n\n      while (next = this.inlineQueue.shift()) {\n        this.inlineTokens(next.src, next.tokens);\n      }\n\n      return this.tokens;\n    }\n    /**\n     * Lexing\n     */\n    ;\n\n    _proto.blockTokens = function blockTokens(src, tokens) {\n      var _this = this;\n\n      if (tokens === void 0) {\n        tokens = [];\n      }\n\n      if (this.options.pedantic) {\n        src = src.replace(/\\t/g, '    ').replace(/^ +$/gm, '');\n      } else {\n        src = src.replace(/^( *)(\\t+)/gm, function (_, leading, tabs) {\n          return leading + '    '.repeat(tabs.length);\n        });\n      }\n\n      var token, lastToken, cutSrc, lastParagraphClipped;\n\n      while (src) {\n        if (this.options.extensions && this.options.extensions.block && this.options.extensions.block.some(function (extTokenizer) {\n          if (token = extTokenizer.call({\n            lexer: _this\n          }, src, tokens)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            return true;\n          }\n\n          return false;\n        })) {\n          continue;\n        } // newline\n\n\n        if (token = this.tokenizer.space(src)) {\n          src = src.substring(token.raw.length);\n\n          if (token.raw.length === 1 && tokens.length > 0) {\n            // if there's a single \\n as a spacer, it's terminating the last line,\n            // so move it there so that we don't get unecessary paragraph tags\n            tokens[tokens.length - 1].raw += '\\n';\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        } // code\n\n\n        if (token = this.tokenizer.code(src)) {\n          src = src.substring(token.raw.length);\n          lastToken = tokens[tokens.length - 1]; // An indented code block cannot interrupt a paragraph.\n\n          if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n            lastToken.raw += '\\n' + token.raw;\n            lastToken.text += '\\n' + token.text;\n            this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        } // fences\n\n\n        if (token = this.tokenizer.fences(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // heading\n\n\n        if (token = this.tokenizer.heading(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // hr\n\n\n        if (token = this.tokenizer.hr(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // blockquote\n\n\n        if (token = this.tokenizer.blockquote(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // list\n\n\n        if (token = this.tokenizer.list(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // html\n\n\n        if (token = this.tokenizer.html(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // def\n\n\n        if (token = this.tokenizer.def(src)) {\n          src = src.substring(token.raw.length);\n          lastToken = tokens[tokens.length - 1];\n\n          if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n            lastToken.raw += '\\n' + token.raw;\n            lastToken.text += '\\n' + token.raw;\n            this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n          } else if (!this.tokens.links[token.tag]) {\n            this.tokens.links[token.tag] = {\n              href: token.href,\n              title: token.title\n            };\n          }\n\n          continue;\n        } // table (gfm)\n\n\n        if (token = this.tokenizer.table(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // lheading\n\n\n        if (token = this.tokenizer.lheading(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // top-level paragraph\n        // prevent paragraph consuming extensions by clipping 'src' to extension start\n\n\n        cutSrc = src;\n\n        if (this.options.extensions && this.options.extensions.startBlock) {\n          (function () {\n            var startIndex = Infinity;\n            var tempSrc = src.slice(1);\n            var tempStart = void 0;\n\n            _this.options.extensions.startBlock.forEach(function (getStartIndex) {\n              tempStart = getStartIndex.call({\n                lexer: this\n              }, tempSrc);\n\n              if (typeof tempStart === 'number' && tempStart >= 0) {\n                startIndex = Math.min(startIndex, tempStart);\n              }\n            });\n\n            if (startIndex < Infinity && startIndex >= 0) {\n              cutSrc = src.substring(0, startIndex + 1);\n            }\n          })();\n        }\n\n        if (this.state.top && (token = this.tokenizer.paragraph(cutSrc))) {\n          lastToken = tokens[tokens.length - 1];\n\n          if (lastParagraphClipped && lastToken.type === 'paragraph') {\n            lastToken.raw += '\\n' + token.raw;\n            lastToken.text += '\\n' + token.text;\n            this.inlineQueue.pop();\n            this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n          } else {\n            tokens.push(token);\n          }\n\n          lastParagraphClipped = cutSrc.length !== src.length;\n          src = src.substring(token.raw.length);\n          continue;\n        } // text\n\n\n        if (token = this.tokenizer.text(src)) {\n          src = src.substring(token.raw.length);\n          lastToken = tokens[tokens.length - 1];\n\n          if (lastToken && lastToken.type === 'text') {\n            lastToken.raw += '\\n' + token.raw;\n            lastToken.text += '\\n' + token.text;\n            this.inlineQueue.pop();\n            this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        }\n\n        if (src) {\n          var errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n\n          if (this.options.silent) {\n            console.error(errMsg);\n            break;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n\n      this.state.top = true;\n      return tokens;\n    };\n\n    _proto.inline = function inline(src, tokens) {\n      this.inlineQueue.push({\n        src: src,\n        tokens: tokens\n      });\n    }\n    /**\n     * Lexing/Compiling\n     */\n    ;\n\n    _proto.inlineTokens = function inlineTokens(src, tokens) {\n      var _this2 = this;\n\n      if (tokens === void 0) {\n        tokens = [];\n      }\n\n      var token, lastToken, cutSrc; // String with links masked to avoid interference with em and strong\n\n      var maskedSrc = src;\n      var match;\n      var keepPrevChar, prevChar; // Mask out reflinks\n\n      if (this.tokens.links) {\n        var links = Object.keys(this.tokens.links);\n\n        if (links.length > 0) {\n          while ((match = this.tokenizer.rules.inline.reflinkSearch.exec(maskedSrc)) != null) {\n            if (links.includes(match[0].slice(match[0].lastIndexOf('[') + 1, -1))) {\n              maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex);\n            }\n          }\n        }\n      } // Mask out other blocks\n\n\n      while ((match = this.tokenizer.rules.inline.blockSkip.exec(maskedSrc)) != null) {\n        maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);\n      } // Mask out escaped em & strong delimiters\n\n\n      while ((match = this.tokenizer.rules.inline.escapedEmSt.exec(maskedSrc)) != null) {\n        maskedSrc = maskedSrc.slice(0, match.index) + '++' + maskedSrc.slice(this.tokenizer.rules.inline.escapedEmSt.lastIndex);\n      }\n\n      while (src) {\n        if (!keepPrevChar) {\n          prevChar = '';\n        }\n\n        keepPrevChar = false; // extensions\n\n        if (this.options.extensions && this.options.extensions.inline && this.options.extensions.inline.some(function (extTokenizer) {\n          if (token = extTokenizer.call({\n            lexer: _this2\n          }, src, tokens)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            return true;\n          }\n\n          return false;\n        })) {\n          continue;\n        } // escape\n\n\n        if (token = this.tokenizer.escape(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // tag\n\n\n        if (token = this.tokenizer.tag(src)) {\n          src = src.substring(token.raw.length);\n          lastToken = tokens[tokens.length - 1];\n\n          if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n            lastToken.raw += token.raw;\n            lastToken.text += token.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        } // link\n\n\n        if (token = this.tokenizer.link(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // reflink, nolink\n\n\n        if (token = this.tokenizer.reflink(src, this.tokens.links)) {\n          src = src.substring(token.raw.length);\n          lastToken = tokens[tokens.length - 1];\n\n          if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n            lastToken.raw += token.raw;\n            lastToken.text += token.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        } // em & strong\n\n\n        if (token = this.tokenizer.emStrong(src, maskedSrc, prevChar)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // code\n\n\n        if (token = this.tokenizer.codespan(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // br\n\n\n        if (token = this.tokenizer.br(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // del (gfm)\n\n\n        if (token = this.tokenizer.del(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // autolink\n\n\n        if (token = this.tokenizer.autolink(src, mangle)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // url (gfm)\n\n\n        if (!this.state.inLink && (token = this.tokenizer.url(src, mangle))) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // text\n        // prevent inlineText consuming extensions by clipping 'src' to extension start\n\n\n        cutSrc = src;\n\n        if (this.options.extensions && this.options.extensions.startInline) {\n          (function () {\n            var startIndex = Infinity;\n            var tempSrc = src.slice(1);\n            var tempStart = void 0;\n\n            _this2.options.extensions.startInline.forEach(function (getStartIndex) {\n              tempStart = getStartIndex.call({\n                lexer: this\n              }, tempSrc);\n\n              if (typeof tempStart === 'number' && tempStart >= 0) {\n                startIndex = Math.min(startIndex, tempStart);\n              }\n            });\n\n            if (startIndex < Infinity && startIndex >= 0) {\n              cutSrc = src.substring(0, startIndex + 1);\n            }\n          })();\n        }\n\n        if (token = this.tokenizer.inlineText(cutSrc, smartypants)) {\n          src = src.substring(token.raw.length);\n\n          if (token.raw.slice(-1) !== '_') {\n            // Track prevChar before string of ____ started\n            prevChar = token.raw.slice(-1);\n          }\n\n          keepPrevChar = true;\n          lastToken = tokens[tokens.length - 1];\n\n          if (lastToken && lastToken.type === 'text') {\n            lastToken.raw += token.raw;\n            lastToken.text += token.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        }\n\n        if (src) {\n          var errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n\n          if (this.options.silent) {\n            console.error(errMsg);\n            break;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n\n      return tokens;\n    };\n\n    _createClass(Lexer, null, [{\n      key: \"rules\",\n      get: function get() {\n        return {\n          block: block,\n          inline: inline\n        };\n      }\n    }]);\n\n    return Lexer;\n  }();\n\n  /**\n   * Renderer\n   */\n\n  var Renderer = /*#__PURE__*/function () {\n    function Renderer(options) {\n      this.options = options || exports.defaults;\n    }\n\n    var _proto = Renderer.prototype;\n\n    _proto.code = function code(_code, infostring, escaped) {\n      var lang = (infostring || '').match(/\\S*/)[0];\n\n      if (this.options.highlight) {\n        var out = this.options.highlight(_code, lang);\n\n        if (out != null && out !== _code) {\n          escaped = true;\n          _code = out;\n        }\n      }\n\n      _code = _code.replace(/\\n$/, '') + '\\n';\n\n      if (!lang) {\n        return '<pre><code>' + (escaped ? _code : escape(_code, true)) + '</code></pre>\\n';\n      }\n\n      return '<pre><code class=\"' + this.options.langPrefix + escape(lang, true) + '\">' + (escaped ? _code : escape(_code, true)) + '</code></pre>\\n';\n    }\n    /**\n     * @param {string} quote\n     */\n    ;\n\n    _proto.blockquote = function blockquote(quote) {\n      return \"<blockquote>\\n\" + quote + \"</blockquote>\\n\";\n    };\n\n    _proto.html = function html(_html) {\n      return _html;\n    }\n    /**\n     * @param {string} text\n     * @param {string} level\n     * @param {string} raw\n     * @param {any} slugger\n     */\n    ;\n\n    _proto.heading = function heading(text, level, raw, slugger) {\n      if (this.options.headerIds) {\n        var id = this.options.headerPrefix + slugger.slug(raw);\n        return \"<h\" + level + \" id=\\\"\" + id + \"\\\">\" + text + \"</h\" + level + \">\\n\";\n      } // ignore IDs\n\n\n      return \"<h\" + level + \">\" + text + \"</h\" + level + \">\\n\";\n    };\n\n    _proto.hr = function hr() {\n      return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n    };\n\n    _proto.list = function list(body, ordered, start) {\n      var type = ordered ? 'ol' : 'ul',\n          startatt = ordered && start !== 1 ? ' start=\"' + start + '\"' : '';\n      return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n    }\n    /**\n     * @param {string} text\n     */\n    ;\n\n    _proto.listitem = function listitem(text) {\n      return \"<li>\" + text + \"</li>\\n\";\n    };\n\n    _proto.checkbox = function checkbox(checked) {\n      return '<input ' + (checked ? 'checked=\"\" ' : '') + 'disabled=\"\" type=\"checkbox\"' + (this.options.xhtml ? ' /' : '') + '> ';\n    }\n    /**\n     * @param {string} text\n     */\n    ;\n\n    _proto.paragraph = function paragraph(text) {\n      return \"<p>\" + text + \"</p>\\n\";\n    }\n    /**\n     * @param {string} header\n     * @param {string} body\n     */\n    ;\n\n    _proto.table = function table(header, body) {\n      if (body) body = \"<tbody>\" + body + \"</tbody>\";\n      return '<table>\\n' + '<thead>\\n' + header + '</thead>\\n' + body + '</table>\\n';\n    }\n    /**\n     * @param {string} content\n     */\n    ;\n\n    _proto.tablerow = function tablerow(content) {\n      return \"<tr>\\n\" + content + \"</tr>\\n\";\n    };\n\n    _proto.tablecell = function tablecell(content, flags) {\n      var type = flags.header ? 'th' : 'td';\n      var tag = flags.align ? \"<\" + type + \" align=\\\"\" + flags.align + \"\\\">\" : \"<\" + type + \">\";\n      return tag + content + (\"</\" + type + \">\\n\");\n    }\n    /**\n     * span level renderer\n     * @param {string} text\n     */\n    ;\n\n    _proto.strong = function strong(text) {\n      return \"<strong>\" + text + \"</strong>\";\n    }\n    /**\n     * @param {string} text\n     */\n    ;\n\n    _proto.em = function em(text) {\n      return \"<em>\" + text + \"</em>\";\n    }\n    /**\n     * @param {string} text\n     */\n    ;\n\n    _proto.codespan = function codespan(text) {\n      return \"<code>\" + text + \"</code>\";\n    };\n\n    _proto.br = function br() {\n      return this.options.xhtml ? '<br/>' : '<br>';\n    }\n    /**\n     * @param {string} text\n     */\n    ;\n\n    _proto.del = function del(text) {\n      return \"<del>\" + text + \"</del>\";\n    }\n    /**\n     * @param {string} href\n     * @param {string} title\n     * @param {string} text\n     */\n    ;\n\n    _proto.link = function link(href, title, text) {\n      href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n\n      if (href === null) {\n        return text;\n      }\n\n      var out = '<a href=\"' + escape(href) + '\"';\n\n      if (title) {\n        out += ' title=\"' + title + '\"';\n      }\n\n      out += '>' + text + '</a>';\n      return out;\n    }\n    /**\n     * @param {string} href\n     * @param {string} title\n     * @param {string} text\n     */\n    ;\n\n    _proto.image = function image(href, title, text) {\n      href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n\n      if (href === null) {\n        return text;\n      }\n\n      var out = \"<img src=\\\"\" + href + \"\\\" alt=\\\"\" + text + \"\\\"\";\n\n      if (title) {\n        out += \" title=\\\"\" + title + \"\\\"\";\n      }\n\n      out += this.options.xhtml ? '/>' : '>';\n      return out;\n    };\n\n    _proto.text = function text(_text) {\n      return _text;\n    };\n\n    return Renderer;\n  }();\n\n  /**\n   * TextRenderer\n   * returns only the textual part of the token\n   */\n  var TextRenderer = /*#__PURE__*/function () {\n    function TextRenderer() {}\n\n    var _proto = TextRenderer.prototype;\n\n    // no need for block level renderers\n    _proto.strong = function strong(text) {\n      return text;\n    };\n\n    _proto.em = function em(text) {\n      return text;\n    };\n\n    _proto.codespan = function codespan(text) {\n      return text;\n    };\n\n    _proto.del = function del(text) {\n      return text;\n    };\n\n    _proto.html = function html(text) {\n      return text;\n    };\n\n    _proto.text = function text(_text) {\n      return _text;\n    };\n\n    _proto.link = function link(href, title, text) {\n      return '' + text;\n    };\n\n    _proto.image = function image(href, title, text) {\n      return '' + text;\n    };\n\n    _proto.br = function br() {\n      return '';\n    };\n\n    return TextRenderer;\n  }();\n\n  /**\n   * Slugger generates header id\n   */\n  var Slugger = /*#__PURE__*/function () {\n    function Slugger() {\n      this.seen = {};\n    }\n    /**\n     * @param {string} value\n     */\n\n\n    var _proto = Slugger.prototype;\n\n    _proto.serialize = function serialize(value) {\n      return value.toLowerCase().trim() // remove html tags\n      .replace(/<[!\\/a-z].*?>/ig, '') // remove unwanted chars\n      .replace(/[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,./:;<=>?@[\\]^`{|}~]/g, '').replace(/\\s/g, '-');\n    }\n    /**\n     * Finds the next safe (unique) slug to use\n     * @param {string} originalSlug\n     * @param {boolean} isDryRun\n     */\n    ;\n\n    _proto.getNextSafeSlug = function getNextSafeSlug(originalSlug, isDryRun) {\n      var slug = originalSlug;\n      var occurenceAccumulator = 0;\n\n      if (this.seen.hasOwnProperty(slug)) {\n        occurenceAccumulator = this.seen[originalSlug];\n\n        do {\n          occurenceAccumulator++;\n          slug = originalSlug + '-' + occurenceAccumulator;\n        } while (this.seen.hasOwnProperty(slug));\n      }\n\n      if (!isDryRun) {\n        this.seen[originalSlug] = occurenceAccumulator;\n        this.seen[slug] = 0;\n      }\n\n      return slug;\n    }\n    /**\n     * Convert string to unique id\n     * @param {object} [options]\n     * @param {boolean} [options.dryrun] Generates the next unique slug without\n     * updating the internal accumulator.\n     */\n    ;\n\n    _proto.slug = function slug(value, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      var slug = this.serialize(value);\n      return this.getNextSafeSlug(slug, options.dryrun);\n    };\n\n    return Slugger;\n  }();\n\n  /**\n   * Parsing & Compiling\n   */\n\n  var Parser = /*#__PURE__*/function () {\n    function Parser(options) {\n      this.options = options || exports.defaults;\n      this.options.renderer = this.options.renderer || new Renderer();\n      this.renderer = this.options.renderer;\n      this.renderer.options = this.options;\n      this.textRenderer = new TextRenderer();\n      this.slugger = new Slugger();\n    }\n    /**\n     * Static Parse Method\n     */\n\n\n    Parser.parse = function parse(tokens, options) {\n      var parser = new Parser(options);\n      return parser.parse(tokens);\n    }\n    /**\n     * Static Parse Inline Method\n     */\n    ;\n\n    Parser.parseInline = function parseInline(tokens, options) {\n      var parser = new Parser(options);\n      return parser.parseInline(tokens);\n    }\n    /**\n     * Parse Loop\n     */\n    ;\n\n    var _proto = Parser.prototype;\n\n    _proto.parse = function parse(tokens, top) {\n      if (top === void 0) {\n        top = true;\n      }\n\n      var out = '',\n          i,\n          j,\n          k,\n          l2,\n          l3,\n          row,\n          cell,\n          header,\n          body,\n          token,\n          ordered,\n          start,\n          loose,\n          itemBody,\n          item,\n          checked,\n          task,\n          checkbox,\n          ret;\n      var l = tokens.length;\n\n      for (i = 0; i < l; i++) {\n        token = tokens[i]; // Run any renderer extensions\n\n        if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n          ret = this.options.extensions.renderers[token.type].call({\n            parser: this\n          }, token);\n\n          if (ret !== false || !['space', 'hr', 'heading', 'code', 'table', 'blockquote', 'list', 'html', 'paragraph', 'text'].includes(token.type)) {\n            out += ret || '';\n            continue;\n          }\n        }\n\n        switch (token.type) {\n          case 'space':\n            {\n              continue;\n            }\n\n          case 'hr':\n            {\n              out += this.renderer.hr();\n              continue;\n            }\n\n          case 'heading':\n            {\n              out += this.renderer.heading(this.parseInline(token.tokens), token.depth, unescape(this.parseInline(token.tokens, this.textRenderer)), this.slugger);\n              continue;\n            }\n\n          case 'code':\n            {\n              out += this.renderer.code(token.text, token.lang, token.escaped);\n              continue;\n            }\n\n          case 'table':\n            {\n              header = ''; // header\n\n              cell = '';\n              l2 = token.header.length;\n\n              for (j = 0; j < l2; j++) {\n                cell += this.renderer.tablecell(this.parseInline(token.header[j].tokens), {\n                  header: true,\n                  align: token.align[j]\n                });\n              }\n\n              header += this.renderer.tablerow(cell);\n              body = '';\n              l2 = token.rows.length;\n\n              for (j = 0; j < l2; j++) {\n                row = token.rows[j];\n                cell = '';\n                l3 = row.length;\n\n                for (k = 0; k < l3; k++) {\n                  cell += this.renderer.tablecell(this.parseInline(row[k].tokens), {\n                    header: false,\n                    align: token.align[k]\n                  });\n                }\n\n                body += this.renderer.tablerow(cell);\n              }\n\n              out += this.renderer.table(header, body);\n              continue;\n            }\n\n          case 'blockquote':\n            {\n              body = this.parse(token.tokens);\n              out += this.renderer.blockquote(body);\n              continue;\n            }\n\n          case 'list':\n            {\n              ordered = token.ordered;\n              start = token.start;\n              loose = token.loose;\n              l2 = token.items.length;\n              body = '';\n\n              for (j = 0; j < l2; j++) {\n                item = token.items[j];\n                checked = item.checked;\n                task = item.task;\n                itemBody = '';\n\n                if (item.task) {\n                  checkbox = this.renderer.checkbox(checked);\n\n                  if (loose) {\n                    if (item.tokens.length > 0 && item.tokens[0].type === 'paragraph') {\n                      item.tokens[0].text = checkbox + ' ' + item.tokens[0].text;\n\n                      if (item.tokens[0].tokens && item.tokens[0].tokens.length > 0 && item.tokens[0].tokens[0].type === 'text') {\n                        item.tokens[0].tokens[0].text = checkbox + ' ' + item.tokens[0].tokens[0].text;\n                      }\n                    } else {\n                      item.tokens.unshift({\n                        type: 'text',\n                        text: checkbox\n                      });\n                    }\n                  } else {\n                    itemBody += checkbox;\n                  }\n                }\n\n                itemBody += this.parse(item.tokens, loose);\n                body += this.renderer.listitem(itemBody, task, checked);\n              }\n\n              out += this.renderer.list(body, ordered, start);\n              continue;\n            }\n\n          case 'html':\n            {\n              // TODO parse inline content if parameter markdown=1\n              out += this.renderer.html(token.text);\n              continue;\n            }\n\n          case 'paragraph':\n            {\n              out += this.renderer.paragraph(this.parseInline(token.tokens));\n              continue;\n            }\n\n          case 'text':\n            {\n              body = token.tokens ? this.parseInline(token.tokens) : token.text;\n\n              while (i + 1 < l && tokens[i + 1].type === 'text') {\n                token = tokens[++i];\n                body += '\\n' + (token.tokens ? this.parseInline(token.tokens) : token.text);\n              }\n\n              out += top ? this.renderer.paragraph(body) : body;\n              continue;\n            }\n\n          default:\n            {\n              var errMsg = 'Token with \"' + token.type + '\" type was not found.';\n\n              if (this.options.silent) {\n                console.error(errMsg);\n                return;\n              } else {\n                throw new Error(errMsg);\n              }\n            }\n        }\n      }\n\n      return out;\n    }\n    /**\n     * Parse Inline Tokens\n     */\n    ;\n\n    _proto.parseInline = function parseInline(tokens, renderer) {\n      renderer = renderer || this.renderer;\n      var out = '',\n          i,\n          token,\n          ret;\n      var l = tokens.length;\n\n      for (i = 0; i < l; i++) {\n        token = tokens[i]; // Run any renderer extensions\n\n        if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n          ret = this.options.extensions.renderers[token.type].call({\n            parser: this\n          }, token);\n\n          if (ret !== false || !['escape', 'html', 'link', 'image', 'strong', 'em', 'codespan', 'br', 'del', 'text'].includes(token.type)) {\n            out += ret || '';\n            continue;\n          }\n        }\n\n        switch (token.type) {\n          case 'escape':\n            {\n              out += renderer.text(token.text);\n              break;\n            }\n\n          case 'html':\n            {\n              out += renderer.html(token.text);\n              break;\n            }\n\n          case 'link':\n            {\n              out += renderer.link(token.href, token.title, this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'image':\n            {\n              out += renderer.image(token.href, token.title, token.text);\n              break;\n            }\n\n          case 'strong':\n            {\n              out += renderer.strong(this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'em':\n            {\n              out += renderer.em(this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'codespan':\n            {\n              out += renderer.codespan(token.text);\n              break;\n            }\n\n          case 'br':\n            {\n              out += renderer.br();\n              break;\n            }\n\n          case 'del':\n            {\n              out += renderer.del(this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'text':\n            {\n              out += renderer.text(token.text);\n              break;\n            }\n\n          default:\n            {\n              var errMsg = 'Token with \"' + token.type + '\" type was not found.';\n\n              if (this.options.silent) {\n                console.error(errMsg);\n                return;\n              } else {\n                throw new Error(errMsg);\n              }\n            }\n        }\n      }\n\n      return out;\n    };\n\n    return Parser;\n  }();\n\n  /**\n   * Marked\n   */\n\n  function marked(src, opt, callback) {\n    // throw error in case of non string input\n    if (typeof src === 'undefined' || src === null) {\n      throw new Error('marked(): input parameter is undefined or null');\n    }\n\n    if (typeof src !== 'string') {\n      throw new Error('marked(): input parameter is of type ' + Object.prototype.toString.call(src) + ', string expected');\n    }\n\n    if (typeof opt === 'function') {\n      callback = opt;\n      opt = null;\n    }\n\n    opt = merge({}, marked.defaults, opt || {});\n    checkSanitizeDeprecation(opt);\n\n    if (callback) {\n      var highlight = opt.highlight;\n      var tokens;\n\n      try {\n        tokens = Lexer.lex(src, opt);\n      } catch (e) {\n        return callback(e);\n      }\n\n      var done = function done(err) {\n        var out;\n\n        if (!err) {\n          try {\n            if (opt.walkTokens) {\n              marked.walkTokens(tokens, opt.walkTokens);\n            }\n\n            out = Parser.parse(tokens, opt);\n          } catch (e) {\n            err = e;\n          }\n        }\n\n        opt.highlight = highlight;\n        return err ? callback(err) : callback(null, out);\n      };\n\n      if (!highlight || highlight.length < 3) {\n        return done();\n      }\n\n      delete opt.highlight;\n      if (!tokens.length) return done();\n      var pending = 0;\n      marked.walkTokens(tokens, function (token) {\n        if (token.type === 'code') {\n          pending++;\n          setTimeout(function () {\n            highlight(token.text, token.lang, function (err, code) {\n              if (err) {\n                return done(err);\n              }\n\n              if (code != null && code !== token.text) {\n                token.text = code;\n                token.escaped = true;\n              }\n\n              pending--;\n\n              if (pending === 0) {\n                done();\n              }\n            });\n          }, 0);\n        }\n      });\n\n      if (pending === 0) {\n        done();\n      }\n\n      return;\n    }\n\n    try {\n      var _tokens = Lexer.lex(src, opt);\n\n      if (opt.walkTokens) {\n        marked.walkTokens(_tokens, opt.walkTokens);\n      }\n\n      return Parser.parse(_tokens, opt);\n    } catch (e) {\n      e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n\n      if (opt.silent) {\n        return '<p>An error occurred:</p><pre>' + escape(e.message + '', true) + '</pre>';\n      }\n\n      throw e;\n    }\n  }\n  /**\n   * Options\n   */\n\n  marked.options = marked.setOptions = function (opt) {\n    merge(marked.defaults, opt);\n    changeDefaults(marked.defaults);\n    return marked;\n  };\n\n  marked.getDefaults = getDefaults;\n  marked.defaults = exports.defaults;\n  /**\n   * Use Extension\n   */\n\n  marked.use = function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var opts = merge.apply(void 0, [{}].concat(args));\n    var extensions = marked.defaults.extensions || {\n      renderers: {},\n      childTokens: {}\n    };\n    var hasExtensions;\n    args.forEach(function (pack) {\n      // ==-- Parse \"addon\" extensions --== //\n      if (pack.extensions) {\n        hasExtensions = true;\n        pack.extensions.forEach(function (ext) {\n          if (!ext.name) {\n            throw new Error('extension name required');\n          }\n\n          if (ext.renderer) {\n            // Renderer extensions\n            var prevRenderer = extensions.renderers ? extensions.renderers[ext.name] : null;\n\n            if (prevRenderer) {\n              // Replace extension with func to run new extension but fall back if false\n              extensions.renderers[ext.name] = function () {\n                for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n                  args[_key2] = arguments[_key2];\n                }\n\n                var ret = ext.renderer.apply(this, args);\n\n                if (ret === false) {\n                  ret = prevRenderer.apply(this, args);\n                }\n\n                return ret;\n              };\n            } else {\n              extensions.renderers[ext.name] = ext.renderer;\n            }\n          }\n\n          if (ext.tokenizer) {\n            // Tokenizer Extensions\n            if (!ext.level || ext.level !== 'block' && ext.level !== 'inline') {\n              throw new Error(\"extension level must be 'block' or 'inline'\");\n            }\n\n            if (extensions[ext.level]) {\n              extensions[ext.level].unshift(ext.tokenizer);\n            } else {\n              extensions[ext.level] = [ext.tokenizer];\n            }\n\n            if (ext.start) {\n              // Function to check for start of token\n              if (ext.level === 'block') {\n                if (extensions.startBlock) {\n                  extensions.startBlock.push(ext.start);\n                } else {\n                  extensions.startBlock = [ext.start];\n                }\n              } else if (ext.level === 'inline') {\n                if (extensions.startInline) {\n                  extensions.startInline.push(ext.start);\n                } else {\n                  extensions.startInline = [ext.start];\n                }\n              }\n            }\n          }\n\n          if (ext.childTokens) {\n            // Child tokens to be visited by walkTokens\n            extensions.childTokens[ext.name] = ext.childTokens;\n          }\n        });\n      } // ==-- Parse \"overwrite\" extensions --== //\n\n\n      if (pack.renderer) {\n        (function () {\n          var renderer = marked.defaults.renderer || new Renderer();\n\n          var _loop = function _loop(prop) {\n            var prevRenderer = renderer[prop]; // Replace renderer with func to run extension, but fall back if false\n\n            renderer[prop] = function () {\n              for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n                args[_key3] = arguments[_key3];\n              }\n\n              var ret = pack.renderer[prop].apply(renderer, args);\n\n              if (ret === false) {\n                ret = prevRenderer.apply(renderer, args);\n              }\n\n              return ret;\n            };\n          };\n\n          for (var prop in pack.renderer) {\n            _loop(prop);\n          }\n\n          opts.renderer = renderer;\n        })();\n      }\n\n      if (pack.tokenizer) {\n        (function () {\n          var tokenizer = marked.defaults.tokenizer || new Tokenizer();\n\n          var _loop2 = function _loop2(prop) {\n            var prevTokenizer = tokenizer[prop]; // Replace tokenizer with func to run extension, but fall back if false\n\n            tokenizer[prop] = function () {\n              for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n                args[_key4] = arguments[_key4];\n              }\n\n              var ret = pack.tokenizer[prop].apply(tokenizer, args);\n\n              if (ret === false) {\n                ret = prevTokenizer.apply(tokenizer, args);\n              }\n\n              return ret;\n            };\n          };\n\n          for (var prop in pack.tokenizer) {\n            _loop2(prop);\n          }\n\n          opts.tokenizer = tokenizer;\n        })();\n      } // ==-- Parse WalkTokens extensions --== //\n\n\n      if (pack.walkTokens) {\n        var _walkTokens = marked.defaults.walkTokens;\n\n        opts.walkTokens = function (token) {\n          pack.walkTokens.call(this, token);\n\n          if (_walkTokens) {\n            _walkTokens.call(this, token);\n          }\n        };\n      }\n\n      if (hasExtensions) {\n        opts.extensions = extensions;\n      }\n\n      marked.setOptions(opts);\n    });\n  };\n  /**\n   * Run callback for every token\n   */\n\n\n  marked.walkTokens = function (tokens, callback) {\n    var _loop3 = function _loop3() {\n      var token = _step.value;\n      callback.call(marked, token);\n\n      switch (token.type) {\n        case 'table':\n          {\n            for (var _iterator2 = _createForOfIteratorHelperLoose(token.header), _step2; !(_step2 = _iterator2()).done;) {\n              var cell = _step2.value;\n              marked.walkTokens(cell.tokens, callback);\n            }\n\n            for (var _iterator3 = _createForOfIteratorHelperLoose(token.rows), _step3; !(_step3 = _iterator3()).done;) {\n              var row = _step3.value;\n\n              for (var _iterator4 = _createForOfIteratorHelperLoose(row), _step4; !(_step4 = _iterator4()).done;) {\n                var _cell = _step4.value;\n                marked.walkTokens(_cell.tokens, callback);\n              }\n            }\n\n            break;\n          }\n\n        case 'list':\n          {\n            marked.walkTokens(token.items, callback);\n            break;\n          }\n\n        default:\n          {\n            if (marked.defaults.extensions && marked.defaults.extensions.childTokens && marked.defaults.extensions.childTokens[token.type]) {\n              // Walk any extensions\n              marked.defaults.extensions.childTokens[token.type].forEach(function (childTokens) {\n                marked.walkTokens(token[childTokens], callback);\n              });\n            } else if (token.tokens) {\n              marked.walkTokens(token.tokens, callback);\n            }\n          }\n      }\n    };\n\n    for (var _iterator = _createForOfIteratorHelperLoose(tokens), _step; !(_step = _iterator()).done;) {\n      _loop3();\n    }\n  };\n  /**\n   * Parse Inline\n   * @param {string} src\n   */\n\n\n  marked.parseInline = function (src, opt) {\n    // throw error in case of non string input\n    if (typeof src === 'undefined' || src === null) {\n      throw new Error('marked.parseInline(): input parameter is undefined or null');\n    }\n\n    if (typeof src !== 'string') {\n      throw new Error('marked.parseInline(): input parameter is of type ' + Object.prototype.toString.call(src) + ', string expected');\n    }\n\n    opt = merge({}, marked.defaults, opt || {});\n    checkSanitizeDeprecation(opt);\n\n    try {\n      var tokens = Lexer.lexInline(src, opt);\n\n      if (opt.walkTokens) {\n        marked.walkTokens(tokens, opt.walkTokens);\n      }\n\n      return Parser.parseInline(tokens, opt);\n    } catch (e) {\n      e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n\n      if (opt.silent) {\n        return '<p>An error occurred:</p><pre>' + escape(e.message + '', true) + '</pre>';\n      }\n\n      throw e;\n    }\n  };\n  /**\n   * Expose\n   */\n\n\n  marked.Parser = Parser;\n  marked.parser = Parser.parse;\n  marked.Renderer = Renderer;\n  marked.TextRenderer = TextRenderer;\n  marked.Lexer = Lexer;\n  marked.lexer = Lexer.lex;\n  marked.Tokenizer = Tokenizer;\n  marked.Slugger = Slugger;\n  marked.parse = marked;\n  var options = marked.options;\n  var setOptions = marked.setOptions;\n  var use = marked.use;\n  var walkTokens = marked.walkTokens;\n  var parseInline = marked.parseInline;\n  var parse = marked;\n  var parser = Parser.parse;\n  var lexer = Lexer.lex;\n\n  exports.Lexer = Lexer;\n  exports.Parser = Parser;\n  exports.Renderer = Renderer;\n  exports.Slugger = Slugger;\n  exports.TextRenderer = TextRenderer;\n  exports.Tokenizer = Tokenizer;\n  exports.getDefaults = getDefaults;\n  exports.lexer = lexer;\n  exports.marked = marked;\n  exports.options = options;\n  exports.parse = parse;\n  exports.parseInline = parseInline;\n  exports.parser = parser;\n  exports.setOptions = setOptions;\n  exports.use = use;\n  exports.walkTokens = walkTokens;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}