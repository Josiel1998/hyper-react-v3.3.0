{"ast":null,"code":"import React from'react';import{Row,Col,Card,Button}from'react-bootstrap';// components\nimport PageTitle from'../../components/PageTitle';import Spinner from'../../components/Spinner';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var colors=['primary','secondary','success','danger','warning','info','light','dark'];var BorderedSpinners=function BorderedSpinners(){return/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(Card.Body,{children:[/*#__PURE__*/_jsx(\"h4\",{className:\"mt-0 header-title\",children:\"Border spinner\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-muted mb-4\",children:\"Use the border spinners for a lightweight loading indicator.\"}),/*#__PURE__*/_jsx(Spinner,{})]})});};var GrowingSpinners=function GrowingSpinners(){return/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(Card.Body,{children:[/*#__PURE__*/_jsx(\"h4\",{className:\"mt-0 header-title\",children:\"Growing spinner\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-muted mb-4\",children:\"You can go for growing spinner as well. While it doesn\\u2019t technically spin, it does repeatedly grow!\"}),/*#__PURE__*/_jsx(Spinner,{type:\"grow\"})]})});};var Variants=function Variants(){return/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(Card.Body,{children:[/*#__PURE__*/_jsx(\"h4\",{className:\"mt-0 header-title\",children:\"Variants\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-muted mb-4\",children:[\"All standard visual variants are available for both animation styles by setting the\",' ',/*#__PURE__*/_jsx(\"code\",{children:\"variant\"}),\" property.\"]}),colors.map(function(color,index){return/*#__PURE__*/_jsx(Spinner,{className:\"m-2\",color:color},index);}),colors.map(function(color,index){return/*#__PURE__*/_jsx(Spinner,{className:\"m-2\",type:\"grow\",color:color},index);})]})});};var SpinnersSizes=function SpinnersSizes(){var sizes=['lg','md','sm'];return/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(Card.Body,{children:[/*#__PURE__*/_jsx(\"h4\",{className:\"mt-0 header-title\",children:\"Size\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-muted mb-4\",children:[\"Add \",/*#__PURE__*/_jsx(\"code\",{children:\"size\"}),\" attribute to make spinner with sizes including lg, md or sm.\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[sizes.map(function(size,index){return/*#__PURE__*/_jsxs(\"div\",{className:\"col-lg-6\",children:[/*#__PURE__*/_jsx(Spinner,{className:\"text-primary m-2\",color:\"primary\",size:size}),/*#__PURE__*/_jsx(Spinner,{className:\"text-secondary m-2\",type:\"grow\",size:size})]},index);}),/*#__PURE__*/_jsxs(\"div\",{className:\"col-lg-6\",children:[/*#__PURE__*/_jsx(Spinner,{className:\"spinner-border-sm m-2\"}),/*#__PURE__*/_jsx(Spinner,{type:\"grow\",className:\"spinner-grow-sm m-2\"})]})]})]})});};var ButtonSpinners=function ButtonSpinners(){return/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(Card.Body,{children:[/*#__PURE__*/_jsx(\"h4\",{className:\"mt-0 header-title\",children:\"Buttons spinner\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-muted mb-4\",children:\"Use spinners within buttons to indicate an action is currently processing or taking place. You may also swap the text out of the spinner element and utilize button text as needed.\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-lg-6\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"button-list\",children:[/*#__PURE__*/_jsxs(Button,{color:\"primary\",disabled:true,children:[/*#__PURE__*/_jsx(Spinner,{className:\"spinner-border-sm\",tag:\"span\",color:\"white\"}),/*#__PURE__*/_jsx(\"span\",{className:\"visually-hidden\",children:\"Loading...\"})]}),/*#__PURE__*/_jsxs(Button,{color:\"primary\",disabled:true,children:[/*#__PURE__*/_jsx(Spinner,{className:\"spinner-border-sm me-1\",tag:\"span\",color:\"white\"}),\"Loading...\"]})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-lg-6\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"button-list\",children:[/*#__PURE__*/_jsxs(Button,{color:\"primary\",disabled:true,children:[/*#__PURE__*/_jsx(Spinner,{className:\"spinner-grow-sm\",tag:\"span\",color:\"white\",type:\"grow\"}),/*#__PURE__*/_jsx(\"span\",{className:\"visually-hidden\",children:\"Loading...\"})]}),/*#__PURE__*/_jsxs(Button,{color:\"primary\",disabled:true,children:[/*#__PURE__*/_jsx(Spinner,{className:\"spinner-grow-sm me-1\",tag:\"span\",color:\"white\",type:\"grow\"}),\"Loading...\"]})]})})]})]})});};var Spinners=function Spinners(){return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(PageTitle,{breadCrumbItems:[{label:'Base UI',path:'/ui/spinners'},{label:'Spinners',path:'/ui/spinners',active:true}],title:'Spinners'}),/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsxs(Col,{xl:6,children:[/*#__PURE__*/_jsx(BorderedSpinners,{}),/*#__PURE__*/_jsx(Variants,{}),/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(Card.Body,{children:[/*#__PURE__*/_jsx(\"h4\",{className:\"mt-0 header-title\",children:\"Alignment\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-muted mb-4\",children:\"Use flexbox utilities, float utilities, or text alignment utilities to place spinners exactly where you need them in any situation.\"}),/*#__PURE__*/_jsx(\"div\",{className:\"d-flex justify-content-center\",children:/*#__PURE__*/_jsx(Spinner,{})})]})}),/*#__PURE__*/_jsx(SpinnersSizes,{})]}),/*#__PURE__*/_jsxs(Col,{xl:6,children:[/*#__PURE__*/_jsx(GrowingSpinners,{}),/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(Card.Body,{children:[/*#__PURE__*/_jsx(\"h4\",{className:\"mt-0 header-title\",children:\"Placement\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-muted mb-4\",children:[\"Use \",/*#__PURE__*/_jsx(\"code\",{children:\"flexbox utilities\"}),\", \",/*#__PURE__*/_jsx(\"code\",{children:\"float utilities\"}),\", or\",' ',/*#__PURE__*/_jsx(\"code\",{children:\"text alignment\"}),\" utilities to place spinners exactly where you need them in any situation.\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex align-items-center\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Loading...\"}),/*#__PURE__*/_jsx(Spinner,{className:\"ms-auto\"})]})]})}),/*#__PURE__*/_jsx(ButtonSpinners,{})]})]})]});};export default Spinners;","map":{"version":3,"names":["React","Row","Col","Card","Button","PageTitle","Spinner","colors","BorderedSpinners","GrowingSpinners","Variants","map","color","index","SpinnersSizes","sizes","size","ButtonSpinners","Spinners","label","path","active"],"sources":["/Users/josieldelgadillo/GitHub_M1/GitHub/hyper-react-v3.3.0/hyper-react-js/src/pages/uikit/Spinners.js"],"sourcesContent":["// @flow\nimport React from 'react';\nimport { Row, Col, Card, Button } from 'react-bootstrap';\n\n// components\nimport PageTitle from '../../components/PageTitle';\nimport Spinner from '../../components/Spinner';\n\nconst colors = ['primary', 'secondary', 'success', 'danger', 'warning', 'info', 'light', 'dark'];\n\nconst BorderedSpinners = () => {\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"mt-0 header-title\">Border spinner</h4>\n                <p className=\"text-muted mb-4\">Use the border spinners for a lightweight loading indicator.</p>\n                <Spinner />\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst GrowingSpinners = () => {\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"mt-0 header-title\">Growing spinner</h4>\n                <p className=\"text-muted mb-4\">\n                    You can go for growing spinner as well. While it doesnâ€™t technically spin, it does repeatedly grow!\n                </p>\n                <Spinner type=\"grow\" />\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst Variants = () => {\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"mt-0 header-title\">Variants</h4>\n                <p className=\"text-muted mb-4\">\n                    All standard visual variants are available for both animation styles by setting the{' '}\n                    <code>variant</code> property.\n                </p>\n\n                {colors.map((color, index) => {\n                    return <Spinner key={index} className=\"m-2\" color={color} />;\n                })}\n\n                {colors.map((color, index) => {\n                    return <Spinner key={index} className=\"m-2\" type=\"grow\" color={color} />;\n                })}\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst SpinnersSizes = () => {\n    const sizes = ['lg', 'md', 'sm'];\n\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"mt-0 header-title\">Size</h4>\n                <p className=\"text-muted mb-4\">\n                    Add <code>size</code> attribute to make spinner with sizes including lg, md or sm.\n                </p>\n                <div className=\"row\">\n                    {sizes.map((size, index) => {\n                        return (\n                            <div key={index} className=\"col-lg-6\">\n                                <Spinner className=\"text-primary m-2\" color=\"primary\" size={size} />\n                                <Spinner className=\"text-secondary m-2\" type=\"grow\" size={size} />\n                            </div>\n                        );\n                    })}\n                    <div className=\"col-lg-6\">\n                        <Spinner className=\"spinner-border-sm m-2\" />\n                        <Spinner type=\"grow\" className=\"spinner-grow-sm m-2\" />\n                    </div>\n                </div>\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst ButtonSpinners = () => {\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"mt-0 header-title\">Buttons spinner</h4>\n                <p className=\"text-muted mb-4\">\n                    Use spinners within buttons to indicate an action is currently processing or taking place. You may\n                    also swap the text out of the spinner element and utilize button text as needed.\n                </p>\n                <div className=\"row\">\n                    <div className=\"col-lg-6\">\n                        <div className=\"button-list\">\n                            <Button color=\"primary\" disabled>\n                                <Spinner className=\"spinner-border-sm\" tag=\"span\" color=\"white\" />\n                                <span className=\"visually-hidden\">Loading...</span>\n                            </Button>\n\n                            <Button color=\"primary\" disabled>\n                                <Spinner className=\"spinner-border-sm me-1\" tag=\"span\" color=\"white\" />\n                                Loading...\n                            </Button>\n                        </div>\n                    </div>\n                    <div className=\"col-lg-6\">\n                        <div className=\"button-list\">\n                            <Button color=\"primary\" disabled>\n                                <Spinner className=\"spinner-grow-sm\" tag=\"span\" color=\"white\" type=\"grow\" />\n                                <span className=\"visually-hidden\">Loading...</span>\n                            </Button>\n\n                            <Button color=\"primary\" disabled>\n                                <Spinner className=\"spinner-grow-sm me-1\" tag=\"span\" color=\"white\" type=\"grow\" />\n                                Loading...\n                            </Button>\n                        </div>\n                    </div>\n                </div>\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst Spinners = (): React$Element<React$FragmentType> => {\n    return (\n        <>\n            <PageTitle\n                breadCrumbItems={[\n                    { label: 'Base UI', path: '/ui/spinners' },\n                    { label: 'Spinners', path: '/ui/spinners', active: true },\n                ]}\n                title={'Spinners'}\n            />\n\n            <Row>\n                <Col xl={6}>\n                    <BorderedSpinners />\n                    <Variants />\n\n                    <Card>\n                        <Card.Body>\n                            <h4 className=\"mt-0 header-title\">Alignment</h4>\n                            <p className=\"text-muted mb-4\">\n                                Use flexbox utilities, float utilities, or text alignment utilities to place spinners\n                                exactly where you need them in any situation.\n                            </p>\n                            <div className=\"d-flex justify-content-center\">\n                                <Spinner />\n                            </div>\n                        </Card.Body>\n                    </Card>\n\n                    <SpinnersSizes />\n                </Col>\n\n                <Col xl={6}>\n                    <GrowingSpinners />\n\n                    <Card>\n                        <Card.Body>\n                            <h4 className=\"mt-0 header-title\">Placement</h4>\n                            <p className=\"text-muted mb-4\">\n                                Use <code>flexbox utilities</code>, <code>float utilities</code>, or{' '}\n                                <code>text alignment</code> utilities to place spinners exactly where you need them in\n                                any situation.\n                            </p>\n                            <div className=\"d-flex align-items-center\">\n                                <strong>Loading...</strong>\n                                <Spinner className=\"ms-auto\" />\n                            </div>\n                        </Card.Body>\n                    </Card>\n\n                    <ButtonSpinners />\n                </Col>\n            </Row>\n        </>\n    );\n};\n\nexport default Spinners;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}