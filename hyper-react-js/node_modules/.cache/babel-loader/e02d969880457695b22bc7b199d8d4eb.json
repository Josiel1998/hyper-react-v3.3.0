{"ast":null,"code":"var _jsxFileName = \"/Users/josieldelgadillo/GitHub_M1/GitHub/hyper-react-v3.3.0/hyper-react-js/src/pages/uikit/Progress.js\";\nimport React from 'react';\nimport { Row, Col, Card, ProgressBar } from 'react-bootstrap'; // components\n\nimport PageTitle from '../../components/PageTitle';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Basic = () => {\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"header-title\",\n        children: \"Examples\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-muted font-14\",\n        children: \"A progressBar bar can be used to show a user how far along he/she is in a process.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n        now: \"25\",\n        className: \"mt-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n        now: 50,\n        className: \"mt-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n        now: 75,\n        className: \"mt-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n        now: \"100\",\n        className: \"mt-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Basic;\n\nconst WithLabels = () => {\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"header-title\",\n        children: \"Labels\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-muted font-14\",\n        children: [\"Add a \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"label\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 27\n        }, this), \" prop to show a visible percentage. For low percentages, consider adding a min-width to ensure the label's text is fully visible.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n        now: 25,\n        label: `25%`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = WithLabels;\n\nconst ScreenreaderOnlyLabel = () => {\n  const now = 60;\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"header-title\",\n        children: \"Screenreader only label\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-muted font-14\",\n        children: [\"Add a \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"visuallyHidden\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 27\n        }, this), \" prop to hide the label visually.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n        now: now,\n        label: `${now}%`,\n        visuallyHidden: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n\n_c3 = ScreenreaderOnlyLabel;\n\nconst ContextualAlternatives = () => {\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"header-title\",\n        children: \"Contextual alternatives\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-muted font-14\",\n        children: \"Progress bars use some of the same button and alert classes for consistent styles.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n        now: 25,\n        className: \"mt-2\",\n        variant: \"success\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n        now: 50,\n        className: \"mt-2\",\n        variant: \"info\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n        now: 75,\n        className: \"mt-2\",\n        variant: \"warning\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n        now: 100,\n        className: \"mt-2\",\n        variant: \"danger\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n        now: 65,\n        className: \"mt-2\",\n        variant: \"dark\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n        now: 50,\n        className: \"mt-2\",\n        variant: \"secondary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\n\n_c4 = ContextualAlternatives;\n\nconst Height = () => {\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"header-title\",\n        children: \"Height\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-muted font-14\",\n        children: [\"We only set a \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"height\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 35\n        }, this), \" value on the \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"ProgressBar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 68\n        }, this), \", so if you change that value the inner \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \".progress-bar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 31\n        }, this), \" will automatically resize accordingly. Use\", ' ', /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \".progress-sm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), \",\", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \".progress-md\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 47\n        }, this), \",\", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \".progress-lg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 73\n        }, this), \",\", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \".progress-xl\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), \" classes.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n        now: \"25\",\n        variant: \"danger\",\n        style: {\n          height: 1\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n        now: \"25\",\n        className: \"mt-2\",\n        style: {\n          height: 3\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n        now: 25,\n        className: \"mt-2 progress-sm\",\n        variant: \"success\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n        now: 50,\n        className: \"mt-2 progress-md\",\n        variant: \"info\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n        now: \"75\",\n        className: \"mt-2 progress-lg\",\n        variant: \"warning\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n        now: \"38\",\n        className: \"mt-2 progress-xl\",\n        variant: \"success\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n};\n\n_c5 = Height;\n\nconst Striped = () => {\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"header-title\",\n        children: \"Striped\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-muted font-14\",\n        children: [\"Add \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"striped\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 25\n        }, this), \" to any \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"ProgressBar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 53\n        }, this), \" to apply a stripe via CSS gradient over the progressBar bar\\u2019s background color.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n        now: 10,\n        striped: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n        now: \"25\",\n        className: \"mt-2\",\n        variant: \"success\",\n        striped: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n        now: 50,\n        className: \"mt-2\",\n        variant: \"info\",\n        striped: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n        now: 75,\n        className: \"mt-2\",\n        variant: \"warning\",\n        striped: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n        now: \"100\",\n        className: \"mt-2\",\n        variant: \"danger\",\n        striped: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 9\n  }, this);\n};\n\n_c6 = Striped;\n\nconst Animated = () => {\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"header-title\",\n        children: \"Animated stripes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-muted font-14\",\n        children: [\"The striped gradient can also be animated. Add \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"animated\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 68\n        }, this), \" to \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"ProgressBar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 93\n        }, this), \" to animate the stripes right to left via CSS3 animations.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n        now: 45,\n        variant: \"primary\",\n        animated: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 9\n  }, this);\n};\n\n_c7 = Animated;\n\nconst Stacked = () => {\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"header-title\",\n        children: \"Stacked\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-muted font-14\",\n        children: [\"Nest \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"<ProgressBar />\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 26\n        }, this), \"s to stack them.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n        children: [/*#__PURE__*/_jsxDEV(ProgressBar, {\n          striped: true,\n          variant: \"success\",\n          now: 35\n        }, 1, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n          variant: \"warning\",\n          now: 20\n        }, 2, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n          striped: true,\n          variant: \"danger\",\n          now: 10\n        }, 3, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 9\n  }, this);\n};\n\n_c8 = Stacked;\n\nconst ProgressBarExamples = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(PageTitle, {\n      breadCrumbItems: [{\n        label: 'Base UI',\n        path: '/ui/progressBar'\n      }, {\n        label: 'ProgressBar',\n        path: '/ui/progressBar',\n        active: true\n      }],\n      title: 'ProgressBar'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        xl: 6,\n        children: [/*#__PURE__*/_jsxDEV(Basic, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ScreenreaderOnlyLabel, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Height, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Animated, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        xl: 6,\n        children: [/*#__PURE__*/_jsxDEV(WithLabels, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ContextualAlternatives, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Striped, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Stacked, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_c9 = ProgressBarExamples;\nexport default ProgressBarExamples;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9;\n\n$RefreshReg$(_c, \"Basic\");\n$RefreshReg$(_c2, \"WithLabels\");\n$RefreshReg$(_c3, \"ScreenreaderOnlyLabel\");\n$RefreshReg$(_c4, \"ContextualAlternatives\");\n$RefreshReg$(_c5, \"Height\");\n$RefreshReg$(_c6, \"Striped\");\n$RefreshReg$(_c7, \"Animated\");\n$RefreshReg$(_c8, \"Stacked\");\n$RefreshReg$(_c9, \"ProgressBarExamples\");","map":{"version":3,"names":["React","Row","Col","Card","ProgressBar","PageTitle","Basic","WithLabels","ScreenreaderOnlyLabel","now","ContextualAlternatives","Height","height","Striped","Animated","Stacked","ProgressBarExamples","label","path","active"],"sources":["/Users/josieldelgadillo/GitHub_M1/GitHub/hyper-react-v3.3.0/hyper-react-js/src/pages/uikit/Progress.js"],"sourcesContent":["// @flow\nimport React from 'react';\nimport { Row, Col, Card, ProgressBar } from 'react-bootstrap';\n\n// components\nimport PageTitle from '../../components/PageTitle';\n\nconst Basic = () => {\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">Examples</h4>\n                <p className=\"text-muted font-14\">\n                    A progressBar bar can be used to show a user how far along he/she is in a process.\n                </p>\n\n                <ProgressBar />\n                <ProgressBar now=\"25\" className=\"mt-2\" />\n                <ProgressBar now={50} className=\"mt-2\" />\n                <ProgressBar now={75} className=\"mt-2\" />\n                <ProgressBar now=\"100\" className=\"mt-2\" />\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst WithLabels = () => {\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">Labels</h4>\n                <p className=\"text-muted font-14\">\n                    Add a <code>label</code> prop to show a visible percentage. For low percentages, consider adding a\n                    min-width to ensure the label's text is fully visible.\n                </p>\n\n                <ProgressBar now={25} label={`25%`} />\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst ScreenreaderOnlyLabel = () => {\n    const now = 60;\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">Screenreader only label</h4>\n                <p className=\"text-muted font-14\">\n                    Add a <code>visuallyHidden</code> prop to hide the label visually.\n                </p>\n\n                <ProgressBar now={now} label={`${now}%`} visuallyHidden />\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst ContextualAlternatives = () => {\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">Contextual alternatives</h4>\n                <p className=\"text-muted font-14\">\n                    Progress bars use some of the same button and alert classes for consistent styles.\n                </p>\n\n                <ProgressBar now={25} className=\"mt-2\" variant=\"success\" />\n                <ProgressBar now={50} className=\"mt-2\" variant=\"info\" />\n                <ProgressBar now={75} className=\"mt-2\" variant=\"warning\" />\n                <ProgressBar now={100} className=\"mt-2\" variant=\"danger\" />\n                <ProgressBar now={65} className=\"mt-2\" variant=\"dark\" />\n                <ProgressBar now={50} className=\"mt-2\" variant=\"secondary\" />\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst Height = () => {\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">Height</h4>\n                <p className=\"text-muted font-14\">\n                    We only set a <code>height</code> value on the <code>ProgressBar</code>, so if you change that value\n                    the inner <code>.progress-bar</code> will automatically resize accordingly. Use{' '}\n                    <code>.progress-sm</code>,<code>.progress-md</code>,<code>.progress-lg</code>,\n                    <code>.progress-xl</code> classes.\n                </p>\n\n                <ProgressBar now=\"25\" variant=\"danger\" style={{ height: 1 }} />\n                <ProgressBar now=\"25\" className=\"mt-2\" style={{ height: 3 }} />\n                <ProgressBar now={25} className=\"mt-2 progress-sm\" variant=\"success\" />\n                <ProgressBar now={50} className=\"mt-2 progress-md\" variant=\"info\" />\n                <ProgressBar now=\"75\" className=\"mt-2 progress-lg\" variant=\"warning\" />\n                <ProgressBar now=\"38\" className=\"mt-2 progress-xl\" variant=\"success\" />\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst Striped = () => {\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">Striped</h4>\n                <p className=\"text-muted font-14\">\n                    Add <code>striped</code> to any <code>ProgressBar</code> to apply a stripe via CSS gradient over the\n                    progressBar bar’s background color.\n                </p>\n\n                <ProgressBar now={10} striped />\n                <ProgressBar now=\"25\" className=\"mt-2\" variant=\"success\" striped />\n                <ProgressBar now={50} className=\"mt-2\" variant=\"info\" striped />\n                <ProgressBar now={75} className=\"mt-2\" variant=\"warning\" striped />\n                <ProgressBar now=\"100\" className=\"mt-2\" variant=\"danger\" striped />\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst Animated = () => {\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">Animated stripes</h4>\n                <p className=\"text-muted font-14\">\n                    The striped gradient can also be animated. Add <code>animated</code> to <code>ProgressBar</code> to\n                    animate the stripes right to left via CSS3 animations.\n                </p>\n\n                <ProgressBar now={45} variant=\"primary\" animated></ProgressBar>\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst Stacked = () => {\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">Stacked</h4>\n                <p className=\"text-muted font-14\">\n                    Nest <code>&lt;ProgressBar /&gt;</code>s to stack them.\n                </p>\n                <ProgressBar>\n                    <ProgressBar striped variant=\"success\" now={35} key={1} />\n                    <ProgressBar variant=\"warning\" now={20} key={2} />\n                    <ProgressBar striped variant=\"danger\" now={10} key={3} />\n                </ProgressBar>\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst ProgressBarExamples = (): React$Element<React$FragmentType> => {\n    return (\n        <>\n            <PageTitle\n                breadCrumbItems={[\n                    { label: 'Base UI', path: '/ui/progressBar' },\n                    { label: 'ProgressBar', path: '/ui/progressBar', active: true },\n                ]}\n                title={'ProgressBar'}\n            />\n\n            <Row>\n                <Col xl={6}>\n                    <Basic />\n                    <ScreenreaderOnlyLabel />\n                    <Height />\n                    <Animated />\n                </Col>\n                <Col xl={6}>\n                    <WithLabels />\n                    <ContextualAlternatives />\n                    <Striped />\n                    <Stacked />\n                </Col>\n            </Row>\n        </>\n    );\n};\n\nexport default ProgressBarExamples;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}