{"ast":null,"code":"import _slicedToArray from\"/Users/josieldelgadillo/GitHub_M1/GitHub/hyper-react-v3.3.0/hyper-react-js/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from'react';import{useForm}from'react-hook-form';import{Card,Dropdown,Row,Col}from'react-bootstrap';import SimpleBar from'simplebar-react';import*as yup from'yup';import{yupResolver}from'@hookform/resolvers/yup';import PropTypes from'prop-types';import classNames from'classnames';//components\nimport{FormInput}from'../components/';/* Chat Item Avatar */import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var ChatItemAvatar=function ChatItemAvatar(_ref){var userAvatar=_ref.userAvatar,postedOn=_ref.postedOn;return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"chat-avatar\",children:[/*#__PURE__*/_jsx(\"img\",{src:userAvatar,alt:userAvatar}),/*#__PURE__*/_jsx(\"i\",{children:postedOn})]})});};/* Chat Item Text */var ChatItemText=function ChatItemText(_ref2){var userName=_ref2.userName,text=_ref2.text;return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(\"div\",{className:\"conversation-text\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"ctext-wrap\",children:[/*#__PURE__*/_jsx(\"i\",{children:userName}),/*#__PURE__*/_jsx(\"p\",{children:text})]})})});};/* Chat Item */var chatItemDefaultProps={placement:'',children:PropTypes.object,className:''};var ChatItem=function ChatItem(_ref3){var children=_ref3.children,placement=_ref3.placement,className=_ref3.className;return/*#__PURE__*/_jsx(\"li\",{className:classNames('clearfix',{odd:placement==='left'},className),children:children});};ChatItem.defaultProps=chatItemDefaultProps;/**\n * ChatForm\n */ /**\n * Renders the ChatForm\n */var ChatForm=function ChatForm(props){/*\n     * form validation schema\n     */var schemaResolver=yupResolver(yup.object().shape({newMessage:yup.string().required('Please enter your messsage')}));var methods=useForm({resolver:schemaResolver});var handleSubmit=methods.handleSubmit,register=methods.register,control=methods.control,errors=methods.formState.errors,reset=methods.reset;/**\n     * Handle valid form submission\n     */var handleValidMessageSubmit=function handleValidMessageSubmit(event,values){var message=values.target[0].value;props.onNewMessagesPosted(message);reset();};return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(\"form\",{name:\"chat-form\",id:\"chat-form\",onSubmit:handleSubmit(handleValidMessageSubmit),className:\"needs-validation m-3\",children:/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsx(FormInput,{type:\"text\",name:\"newMessage\",className:\"form-control chat-input\",placeholder:\"Enter your text\",register:register,errors:errors,control:control},\"newMessage\")}),/*#__PURE__*/_jsx(Col,{className:\"col-auto\",children:/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn btn-danger chat-send waves-effect waves-light\",children:\"Send\"})})]})})});};/**\n * ChatList\n */ /**\n * Renders the ChatList\n */var ChatList=function ChatList(props,state){var _useState=useState(props.messages),_useState2=_slicedToArray(_useState,2),messages=_useState2[0],setMessages=_useState2[1];/**\n     * Handle new message posted\n     */var handleNewMessagePosted=function handleNewMessagePosted(message){// save new message\nsetMessages(messages.concat({id:messages.length+1,userName:'Geneva',text:message,postedOn:'10:00'}));};return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(Card,{className:\"mb-0\",children:/*#__PURE__*/_jsxs(Card.Body,{className:\"p-0\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"px-3 pt-3\",children:[/*#__PURE__*/_jsxs(Dropdown,{className:\"float-end\",align:\"end\",children:[/*#__PURE__*/_jsx(Dropdown.Toggle,{variant:\"link\",className:\"arrow-none card-drop p-0 shadow-none\",children:/*#__PURE__*/_jsx(\"i\",{className:\"mdi mdi-dots-vertical\"})}),/*#__PURE__*/_jsxs(Dropdown.Menu,{children:[/*#__PURE__*/_jsx(Dropdown.Item,{children:\"Refresh\"}),/*#__PURE__*/_jsx(Dropdown.Item,{children:\"Settings\"})]})]}),/*#__PURE__*/_jsx(\"h4\",{className:\"header-title mb-3\",children:\"Chat\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"chat-conversation\",children:[/*#__PURE__*/_jsx(SimpleBar,{style:{maxHeight:'350px',width:'100%'},children:/*#__PURE__*/_jsx(\"ul\",{className:classNames('conversation-list',props.className,'px-3'),children:messages.map(function(message,i){return/*#__PURE__*/_jsxs(ChatItem,{placement:i>0?i%2===0?'':'left':'right',children:[message.userPic&&/*#__PURE__*/_jsx(ChatItemAvatar,{userAvatar:message.userPic,postedOn:message.postedOn}),/*#__PURE__*/_jsx(ChatItemText,{userName:message.userName,text:message.text})]},i);})})}),/*#__PURE__*/_jsx(ChatForm,{onNewMessagesPosted:handleNewMessagePosted})]})]})})});};export default ChatList;","map":{"version":3,"names":["React","useState","useForm","Card","Dropdown","Row","Col","SimpleBar","yup","yupResolver","PropTypes","classNames","FormInput","ChatItemAvatar","userAvatar","postedOn","ChatItemText","userName","text","chatItemDefaultProps","placement","children","object","className","ChatItem","odd","defaultProps","ChatForm","props","schemaResolver","shape","newMessage","string","required","methods","resolver","handleSubmit","register","control","errors","formState","reset","handleValidMessageSubmit","event","values","message","target","value","onNewMessagesPosted","ChatList","state","messages","setMessages","handleNewMessagePosted","concat","id","length","maxHeight","width","map","i","userPic"],"sources":["/Users/josieldelgadillo/GitHub_M1/GitHub/hyper-react-v3.3.0/hyper-react-js/src/components/ChatList.js"],"sourcesContent":["// @flow\nimport React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { Card, Dropdown, Row, Col } from 'react-bootstrap';\nimport SimpleBar from 'simplebar-react';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\n//components\nimport { FormInput } from '../components/';\n\n/* Chat Item Avatar */\nconst ChatItemAvatar = ({ userAvatar, postedOn }) => {\n    return (\n        <>\n            <div className=\"chat-avatar\">\n                <img src={userAvatar} alt={userAvatar} />\n                <i>{postedOn}</i>\n            </div>\n        </>\n    );\n};\n\n/* Chat Item Text */\nconst ChatItemText = ({ userName, text }) => {\n    return (\n        <>\n            <div className=\"conversation-text\">\n                <div className=\"ctext-wrap\">\n                    <i>{userName}</i>\n                    <p>{text}</p>\n                </div>\n            </div>\n        </>\n    );\n};\n\n/* Chat Item */\nconst chatItemDefaultProps = {\n    placement: '',\n    children: PropTypes.object,\n    className: '',\n};\n\nconst ChatItem = ({ children, placement, className }) => {\n    return <li className={classNames('clearfix', { odd: placement === 'left' }, className)}>{children}</li>;\n};\n\nChatItem.defaultProps = chatItemDefaultProps;\n\n/**\n * ChatForm\n */\n\n/**\n * Renders the ChatForm\n */\nconst ChatForm = (props) => {\n    /*\n     * form validation schema\n     */\n    const schemaResolver = yupResolver(\n        yup.object().shape({\n            newMessage: yup.string().required('Please enter your messsage'),\n        })\n    );\n\n    const methods = useForm({ resolver: schemaResolver });\n    const {\n        handleSubmit,\n        register,\n        control,\n        formState: { errors },\n        reset,\n    } = methods;\n\n    /**\n     * Handle valid form submission\n     */\n    const handleValidMessageSubmit = (event, values) => {\n        const message = values.target[0].value;\n        props.onNewMessagesPosted(message);\n        reset();\n    };\n\n    return (\n        <>\n            <form\n                name=\"chat-form\"\n                id=\"chat-form\"\n                onSubmit={handleSubmit(handleValidMessageSubmit)}\n                className=\"needs-validation m-3\">\n                <Row>\n                    <Col>\n                        <FormInput\n                            type=\"text\"\n                            name=\"newMessage\"\n                            className=\"form-control chat-input\"\n                            placeholder=\"Enter your text\"\n                            register={register}\n                            key=\"newMessage\"\n                            errors={errors}\n                            control={control}\n                        />\n                    </Col>\n                    <Col className=\"col-auto\">\n                        <button type=\"submit\" className=\"btn btn-danger chat-send waves-effect waves-light\">\n                            Send\n                        </button>\n                    </Col>\n                </Row>\n            </form>\n        </>\n    );\n};\n\n/**\n * ChatList\n */\n\ntype MessageItem = {\n    id: number,\n    userPic?: string,\n    userName: string,\n    text: string,\n    postedOn: string,\n};\n\ntype ChatListProps = {\n    className?: string,\n    messages: Array<MessageItem>,\n};\n\ntype ChatListState = {\n    messages: Array<MessageItem>,\n};\n\n/**\n * Renders the ChatList\n */\nconst ChatList = (props: ChatListProps, state: ChatListState): React$Element<any> => {\n    const [messages, setMessages] = useState(props.messages);\n\n    /**\n     * Handle new message posted\n     */\n    const handleNewMessagePosted = (message: string) => {\n        // save new message\n        setMessages(\n            messages.concat({\n                id: messages.length + 1,\n                userName: 'Geneva',\n                text: message,\n                postedOn: '10:00',\n            })\n        );\n    };\n\n    return (\n        <>\n            <Card className=\"mb-0\">\n                <Card.Body className=\"p-0\">\n                    <div className=\"px-3 pt-3\">\n                        <Dropdown className=\"float-end\" align=\"end\">\n                            <Dropdown.Toggle variant=\"link\" className=\"arrow-none card-drop p-0 shadow-none\">\n                                <i className=\"mdi mdi-dots-vertical\"></i>\n                            </Dropdown.Toggle>\n                            <Dropdown.Menu>\n                                <Dropdown.Item>Refresh</Dropdown.Item>\n                                <Dropdown.Item>Settings</Dropdown.Item>\n                            </Dropdown.Menu>\n                        </Dropdown>\n\n                        <h4 className=\"header-title mb-3\">Chat</h4>\n                    </div>\n\n                    <div className=\"chat-conversation\">\n                        {/* chat messages */}\n                        <SimpleBar style={{ maxHeight: '350px', width: '100%' }}>\n                            <ul className={classNames('conversation-list', props.className, 'px-3')}>\n                                {messages.map((message, i) => {\n                                    return (\n                                        <ChatItem key={i} placement={i > 0 ? (i % 2 === 0 ? '' : 'left') : 'right'}>\n                                            {message.userPic && (\n                                                <ChatItemAvatar\n                                                    userAvatar={message.userPic}\n                                                    postedOn={message.postedOn}\n                                                />\n                                            )}\n                                            <ChatItemText userName={message.userName} text={message.text} />\n                                        </ChatItem>\n                                    );\n                                })}\n                            </ul>\n                        </SimpleBar>\n\n                        {/* chat form */}\n                        <ChatForm onNewMessagesPosted={handleNewMessagePosted} />\n                    </div>\n                </Card.Body>\n            </Card>\n        </>\n    );\n};\n\nexport default ChatList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}