{"version":3,"sources":["../node_modules/@restart/hooks/esm/useEventCallback.js","../node_modules/@restart/hooks/esm/useCommittedRef.js","../node_modules/@restart/hooks/esm/useEventListener.js","../node_modules/@restart/hooks/esm/useMounted.js","../node_modules/@restart/hooks/esm/useCallbackRef.js","../node_modules/webpack/buildin/global.js","../node_modules/@restart/hooks/esm/usePrevious.js","../node_modules/@restart/hooks/esm/useResizeObserver.js","../node_modules/@restart/ui/esm/Anchor.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/@restart/ui/esm/Button.js","../node_modules/react-bootstrap/esm/divWithClassName.js","../node_modules/react-bootstrap/esm/CardHeaderContext.js","../node_modules/@restart/hooks/esm/useIsomorphicEffect.js","../node_modules/react-bootstrap/esm/Row.js","../node_modules/react-bootstrap/esm/BreadcrumbItem.js","../node_modules/react-bootstrap/esm/Breadcrumb.js","../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/CardHeader.js","../node_modules/react-bootstrap/esm/Card.js","../node_modules/@babel/runtime/helpers/typeof.js","../node_modules/react-table/index.js","../../src/publicUtils.js","../../src/utils.js","../../src/makeDefaultPluginHooks.js","../../src/hooks/useColumnVisibility.js","../../src/hooks/useTable.js","../../src/plugin-hooks/useExpanded.js","../../src/filterTypes.js","../../src/plugin-hooks/useFilters.js","../../src/plugin-hooks/useGlobalFilter.js","../../src/aggregations.js","../../src/plugin-hooks/useGroupBy.js","../../src/sortTypes.js","../../src/plugin-hooks/useSortBy.js","../../src/plugin-hooks/usePagination.js","../../src/plugin-hooks/_UNSTABLE_usePivotColumns.js","../../src/plugin-hooks/useRowSelect.js","../../src/plugin-hooks/useRowState.js","../../src/plugin-hooks/useColumnOrder.js","../../src/plugin-hooks/useResizeColumns.js","../../src/plugin-hooks/useAbsoluteLayout.js","../../src/plugin-hooks/useBlockLayout.js","../../src/plugin-hooks/useFlexLayout.js","../../src/plugin-hooks/useGridLayout.js","../node_modules/@babel/runtime/helpers/regeneratorRuntime.js"],"names":["useEventCallback","fn","ref","useCommittedRef","useCallback","current","apply","arguments","value","useRef","useEffect","useEventListener","eventTarget","event","listener","capture","handler","target","addEventListener","removeEventListener","useMounted","mounted","isMounted","useCallbackRef","useState","g","this","Function","e","window","module","exports","usePrevious","WeakMap","_excluded","Anchor","React","_ref","href","onKeyDown","props","source","excluded","key","i","sourceKeys","Object","keys","length","indexOf","_objectWithoutPropertiesLoose","useButtonProps","assign","tagName","buttonProps","handleKeyDown","trim","role","_jsx","displayName","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iterableToArray","unsupportedIterableToArray","TypeError","disabled","rel","onClick","tabIndex","type","meta","handleClick","isTrivialHref","preventDefault","stopPropagation","undefined","Button","asProp","as","Component","className","p","classNames","context","isReactNative","global","navigator","product","isDOM","document","useLayoutEffect","Row","bsPrefix","decoratedBsPrefix","useBootstrapPrefix","breakpoints","useBootstrapBreakpoints","sizePrefix","classes","forEach","brkPoint","cols","propValue","infix","push","BreadcrumbItem","active","children","linkAs","LinkComponent","linkProps","title","prefix","defaultProps","Breadcrumb","listProps","label","Item","CardImg","variant","CardHeader","contextValue","useMemo","cardHeaderBsPrefix","CardHeaderContext","Provider","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","createWithBsPrefix","CardTitle","CardSubtitle","CardLink","CardText","CardFooter","CardImgOverlay","Card","bg","text","border","body","Img","Title","Subtitle","Body","Link","Text","Header","Footer","ImgOverlay","_typeof","obj","Symbol","iterator","constructor","prototype","__esModule","require","actions","init","defaultRenderer","emptyRenderer","defaultColumn","Cell","width","minWidth","maxWidth","Number","MAX_SAFE_INTEGER","mergeProps","propList","reduce","next","style","makePropGetter","hooks","userProps","prev","handlePropGetter","prevProps","reduceHooks","initial","allowUndefined","loopHooks","hook","ensurePluginOrder","plugins","befores","pluginName","afters","findIndex","plugin","before","functionalUpdate","updater","old","useGetLatest","safeUseLayoutEffect","useMountedLayoutEffect","deps","mountedRef","makeRenderer","instance","column","Comp","console","info","Error","flexRender","component","proto","getPrototypeOf","isReactComponent","$$typeof","includes","description","linkColumnStructure","columns","parent","depth","map","assignColumnAccessor","flattenColumns","flattenBy","id","accessor","accessorPath","split","path","def","val","cacheKey","JSON","stringify","pathObj","pathObjCache","get","flattenDeep","newArr","String","d","replace","join","reOpenBracket","reCloseBracket","set","cursor","pathPart","row","error","decorateColumn","userDefaultColumn","originalWidth","makeHeaderGroups","allColumns","additionalHeaderProperties","headerGroups","scanColumns","uid","getUID","headerGroup","headers","parentColumns","hasParents","some","newParent","latestParentColumn","reverse","originalId","placeholderOf","Map","getFirstDefined","args","isFunction","a","flat","recurse","expandRows","rows","manualExpandedKey","expanded","expandSubRows","expandedRows","handleRow","addToExpandedRows","isExpanded","original","canExpand","subRows","getFilterMethod","filter","userFilterTypes","filterTypes","shouldAutoRemoveFilter","autoRemove","unpreparedAccessWarning","passiveSupported","defaultGetTableProps","defaultGetTableBodyProps","defaultGetHeaderProps","colSpan","totalVisibleHeaderCount","defaultGetFooterProps","defaultGetHeaderGroupProps","index","defaultGetFooterGroupProps","defaultGetRowProps","defaultGetCellProps","cell","makeDefaultPluginHooks","useOptions","stateReducers","useControlledState","columnsDeps","allColumnsDeps","accessValue","materializedColumns","materializedColumnsDeps","useInstanceAfterData","visibleColumns","visibleColumnsDeps","headerGroupsDeps","useInstanceBeforeDimensions","useInstance","prepareRow","getTableProps","getTableBodyProps","getHeaderGroupProps","getFooterGroupProps","getHeaderProps","getFooterProps","getRowProps","getCellProps","useFinalInstance","resetHiddenColumns","toggleHideColumn","setHiddenColumns","toggleHideAllColumns","useColumnVisibility","getToggleHiddenProps","defaultGetToggleHiddenProps","getToggleHideAllColumnsProps","defaultGetToggleHideAllColumnsProps","reducer","state","hiddenColumns","onChange","toggleHidden","checked","isVisible","allColumnsHidden","indeterminate","action","previousState","initialState","columnId","handleColumn","parentVisible","subColumn","subHeader","flatHeaders","dispatch","getHooks","autoResetHiddenColumns","getInstance","getAutoResetHiddenColumns","defaultInitialState","defaultColumnInstance","defaultReducer","prevState","defaultGetSubRows","defaultGetRowId","defaultUseControlledState","applyDefaults","getSubRows","getRowId","stateReducer","calculateHeaderWidths","left","sumTotalMinWidth","sumTotalWidth","sumTotalMaxWidth","sumTotalFlexWidth","subHeaders","header","totalLeft","totalMinWidth","totalWidth","totalMaxWidth","totalFlexWidth","Math","min","max","canResize","accessRowsForColumn","data","flatRows","rowsById","accessValueHooks","originalRow","rowIndex","accessRow","parentRows","originalSubRows","cells","values","resetExpanded","toggleRowExpanded","toggleAllRowsExpanded","useExpanded","getToggleAllRowsExpandedProps","defaultGetToggleAllRowsExpandedProps","getToggleRowExpandedProps","defaultGetToggleRowExpandedProps","isAllRowsExpanded","rowId","setExpanded","exists","shouldExist","paginateExpandedRows","autoResetExpanded","getAutoResetExpanded","Boolean","expandedDepth","maxDepth","splitId","preExpandedRows","ids","filterValue","rowValue","toLowerCase","exactText","exactTextCase","includesAll","every","includesSome","includesValue","exact","equals","between","Infinity","temp","resetFilters","setFilter","setAllFilters","useFilters","filters","find","filterMethod","previousfilter","newFilter","manualFilters","defaultCanFilter","disableFilters","autoResetFilters","columnDefaultCanFilter","columnDisableFilters","canFilter","found","filteredFlatRows","filteredRowsById","filterRows","filteredRows","filteredSoFar","preFilteredRows","warn","getAutoResetFilters","preFilteredFlatRows","preFilteredRowsById","resetGlobalFilter","setGlobalFilter","useGlobalFilter","globalFilter","manualGlobalFilter","globalFilterValue","autoResetGlobalFilter","disableGlobalFilter","columnDisableGlobalFilter","filterableColumns","c","globalFilteredRows","globalFilteredFlatRows","globalFilteredRowsById","getAutoResetGlobalFilter","preGlobalFilteredRows","preGlobalFilteredFlatRows","preGlobalFilteredRowsById","sum","aggregatedValues","mid","floor","nums","sort","b","from","Set","size","emptyArray","emptyObject","resetGroupBy","setGroupBy","toggleGroupBy","useGroupBy","getGroupByToggleProps","defaultGetGroupByToggleProps","groupBy","canGroupBy","persist","resolvedGroupBy","groupByColumns","col","nonGroupByColumns","isGrouped","groupedIndex","defaultUserAggregations","groupByFn","defaultGroupByFn","manualGroupBy","aggregations","userAggregations","autoResetGroupBy","disableGroupBy","defaultCanGroupBy","defaultColumnGroupBy","defaultGroupBy","columnDisableGroupBy","Aggregated","existingGroupBy","groupedFlatRows","groupedRowsById","onlyGroupedFlatRows","onlyGroupedRowsById","nonGroupedFlatRows","nonGroupedRowsById","groupedRows","groupUpRecursively","parentId","rowGroupsMap","entries","groupByVal","leafRows","aggregateFn","aggregate","groupedValues","leafValues","columnValue","aggregateValue","aggregateValueFn","groupByID","subRow","getAutoResetGroupBy","preGroupedRows","preGroupedFlatRow","preGroupedRowsById","allCells","isPlaceholder","isAggregated","resKey","reSplitAlphaNumeric","compareBasic","getRowValuesByColumnID","row1","row2","toString","isNaN","rowA","rowB","aa","shift","bb","an","parseInt","bn","combo","getTime","alower","blower","replaceNonNumeric","resetSortBy","setSortBy","toggleSortBy","clearSortBy","sortType","sortDescFirst","useSortBy","getSortByToggleProps","defaultGetSortByToggleProps","isMultiSortEvent","shiftKey","canSort","disableMultiSort","sortBy","sortAction","desc","multi","disableSortRemove","disableMultiRemove","maxMultiSortColCount","existingSortBy","existingIndex","hasDescDefined","newSortBy","splice","orderByFn","defaultOrderByFn","userSortTypes","sortTypes","manualSortBy","defaultCanSort","disableSortBy","autoResetSortBy","defaultColumnCanSort","columnDisableSortBy","columnSort","isSorted","sortedIndex","isSortedDesc","sortedFlatRows","availableSortBy","sortData","sortedData","sortMethod","sortInverted","sortedRows","getAutoResetSortBy","preSortedRows","preSortedFlatRows","funcs","dirs","sortFn","sortInt","resetPage","gotoPage","setPageSize","usePagination","pageSize","pageIndex","pageCount","page","newPageIndex","canNavigate","topRowIndex","autoResetPage","userPageCount","manualPagination","getAutoResetPage","ceil","pageOptions","fill","pageStart","pageEnd","slice","canPreviousPage","canNextPage","previousPage","nextPage","resetPivot","togglePivot","_UNSTABLE_usePivotColumns","getPivotToggleProps","defaultGetPivotToggleProps","defaultPivotColumns","canPivot","pivotColumns","setPivot","resolvedPivot","isPivotSource","uniqueValues","add","materialized","sourceColumns","newMaterialized","buildPivotColumns","pivotFilters","pivotColumn","u","columnGroup","PivotHeader","uniqueValue","isPivotGroup","pivotValue","sourceColumn","isPivoted","autoResetPivot","manaulPivot","disablePivot","defaultCanPivot","defaultColumnPivot","defaultPivot","columnDisablePivot","getAutoResetPivot","resetSelectedRows","toggleAllRowsSelected","toggleRowSelected","toggleAllPageRowsSelected","useRowSelect","getToggleRowSelectedProps","defaultGetToggleRowSelectedProps","getToggleAllRowsSelectedProps","defaultGetToggleAllRowsSelectedProps","getToggleAllPageRowsSelectedProps","defaultGetToggleAllPageRowsSelectedProps","manualRowSelectedKey","isSelected","isSomeSelected","isAllRowsSelected","selectedRowIds","isAllPageRowsSelected","setSelected","selectAll","selectSubRows","newSelectedRowIds","handleRowById","autoResetSelectedRows","selectedFlatRows","getRowIsSelected","allChildrenSelected","someSelected","getAutoResetSelectedRows","defaultInitialRowStateAccessor","defaultInitialCellStateAccessor","setRowState","setCellState","resetRowState","useRowState","initialRowStateAccessor","initialCellStateAccessor","rowState","oldRowState","oldCellState","cellState","autoResetRowState","getAutoResetRowState","setState","resetColumnOrder","setColumnOrder","useColumnOrder","columnOrder","columnOrderCopy","columnsCopy","columnsInOrder","targetColumnId","foundIndex","columnStartResizing","columnResizing","columnDoneResizing","resetResize","useResizeColumns","getResizerProps","defaultGetResizerProps","position","onResizeStart","isTouchEvent","touches","raf","mostRecentClientX","headerIdWidths","leafHeaders","recurseHeader","clientX","round","dispatchEnd","cancelAnimationFrame","dispatchMove","scheduleDispatchMoveOnNextAnimationFrame","clientXPos","requestAnimationFrame","handlersAndEvents","mouse","moveEvent","moveHandler","upEvent","upHandler","touch","cancelable","events","passiveIfSupported","supported","options","err","passive","columnWidth","onMouseDown","onTouchStart","draggable","columnWidths","startX","isResizingColumn","percentageDeltaX","newColumnWidths","headerId","headerWidth","disableResizing","isResizing","autoResetResize","getAutoResetResize","resetResizing","cellStyles","top","useAbsoluteLayout","getRowStyles","totalColumnsWidth","display","boxSizing","useBlockLayout","useFlexLayout","totalColumnsMinWidth","flex","useGridLayout","gridTemplateColumns","gridLayout","startWidths","gridColumn","getElementWidth","acc","minWidths","maxWidths","headerIdGridWidths","getElementById","offsetWidth","defaultFn","defaultWait","debounceRef","getDefaultFn","getDefaultWait","promise","Promise","resolve","reject","timeout","clearTimeout","setTimeout","userColumns","getStateReducer","s","useReducer","reducerState","allColumnsQueue","initialRows","all","visibleColumnsDep","totalColumnsMaxWidth","render","footerGroups","_regeneratorRuntime","Op","hasOwn","hasOwnProperty","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","defineProperty","enumerable","configurable","writable","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","Context","_invoke","method","arg","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","done","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","NativeIteratorPrototype","Gp","defineIteratorMethods","AsyncIterator","PromiseImpl","invoke","result","__await","then","unwrapped","previousPromise","callInvokeWithMethodAndArg","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","async","iter","object","pop","skipTempReset","charAt","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield"],"mappings":"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","file":"static/js/7.519e2652.chunk.js","sourcesContent":["import { useCallback } from 'react';\nimport useCommittedRef from './useCommittedRef';\nexport default function useEventCallback(fn) {\n  var ref = useCommittedRef(fn);\n  return useCallback(function () {\n    return ref.current && ref.current.apply(ref, arguments);\n  }, [ref]);\n}","import { useEffect, useRef } from 'react';\n/**\n * Creates a `Ref` whose value is updated in an effect, ensuring the most recent\n * value is the one rendered with. Generally only required for Concurrent mode usage\n * where previous work in `render()` may be discarded before being used.\n *\n * This is safe to access in an event handler.\n *\n * @param value The `Ref` value\n */\n\nfunction useCommittedRef(value) {\n  var ref = useRef(value);\n  useEffect(function () {\n    ref.current = value;\n  }, [value]);\n  return ref;\n}\n\nexport default useCommittedRef;","import { useEffect } from 'react';\nimport useEventCallback from './useEventCallback';\n\n/**\n * Attaches an event handler outside directly to specified DOM element\n * bypassing the react synthetic event system.\n *\n * @param element The target to listen for events on\n * @param event The DOM event name\n * @param handler An event handler\n * @param capture Whether or not to listen during the capture event phase\n */\nexport default function useEventListener(eventTarget, event, listener, capture) {\n  if (capture === void 0) {\n    capture = false;\n  }\n\n  var handler = useEventCallback(listener);\n  useEffect(function () {\n    var target = typeof eventTarget === 'function' ? eventTarget() : eventTarget;\n    target.addEventListener(event, handler, capture);\n    return function () {\n      return target.removeEventListener(event, handler, capture);\n    };\n  }, [eventTarget]);\n}","import { useRef, useEffect } from 'react';\n/**\n * Track whether a component is current mounted. Generally less preferable than\n * properlly canceling effects so they don't run after a component is unmounted,\n * but helpful in cases where that isn't feasible, such as a `Promise` resolution.\n *\n * @returns a function that returns the current isMounted state of the component\n *\n * ```ts\n * const [data, setData] = useState(null)\n * const isMounted = useMounted()\n *\n * useEffect(() => {\n *   fetchdata().then((newData) => {\n *      if (isMounted()) {\n *        setData(newData);\n *      }\n *   })\n * })\n * ```\n */\n\nexport default function useMounted() {\n  var mounted = useRef(true);\n  var isMounted = useRef(function () {\n    return mounted.current;\n  });\n  useEffect(function () {\n    mounted.current = true;\n    return function () {\n      mounted.current = false;\n    };\n  }, []);\n  return isMounted.current;\n}","import { useState } from 'react';\n/**\n * A convenience hook around `useState` designed to be paired with\n * the component [callback ref](https://reactjs.org/docs/refs-and-the-dom.html#callback-refs) api.\n * Callback refs are useful over `useRef()` when you need to respond to the ref being set\n * instead of lazily accessing it in an effect.\n *\n * ```ts\n * const [element, attachRef] = useCallbackRef<HTMLDivElement>()\n *\n * useEffect(() => {\n *   if (!element) return\n *\n *   const calendar = new FullCalendar.Calendar(element)\n *\n *   return () => {\n *     calendar.destroy()\n *   }\n * }, [element])\n *\n * return <div ref={attachRef} />\n * ```\n *\n * @category refs\n */\n\nexport default function useCallbackRef() {\n  return useState(null);\n}","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","import { useEffect, useRef } from 'react';\n/**\n * Store the last of some value. Tracked via a `Ref` only updating it\n * after the component renders.\n *\n * Helpful if you need to compare a prop value to it's previous value during render.\n *\n * ```ts\n * function Component(props) {\n *   const lastProps = usePrevious(props)\n *\n *   if (lastProps.foo !== props.foo)\n *     resetValueFromProps(props.foo)\n * }\n * ```\n *\n * @param value the value to track\n */\n\nexport default function usePrevious(value) {\n  var ref = useRef(null);\n  useEffect(function () {\n    ref.current = value;\n  });\n  return ref.current;\n}","import { useState } from 'react';\nimport useEffect from './useIsomorphicEffect';\nvar targetMap = new WeakMap();\nvar resizeObserver;\n\nfunction getResizeObserver() {\n  // eslint-disable-next-line no-return-assign\n  return resizeObserver = resizeObserver || new window.ResizeObserver(function (entries) {\n    entries.forEach(function (entry) {\n      var handler = targetMap.get(entry.target);\n      if (handler) handler(entry.contentRect);\n    });\n  });\n}\n/**\n * Efficiently observe size changes on an element. Depends on the `ResizeObserver` api,\n * and polyfills are needed in older browsers.\n *\n * ```ts\n * const [ref, attachRef] = useCallbackRef(null);\n *\n * const rect = useResizeObserver(ref);\n *\n * return (\n *  <div ref={attachRef}>\n *    {JSON.stringify(rect)}\n *  </div>\n * )\n * ```\n *\n * @param element The DOM element to observe\n */\n\n\nexport default function useResizeObserver(element) {\n  var _useState = useState(null),\n      rect = _useState[0],\n      setRect = _useState[1];\n\n  useEffect(function () {\n    if (!element) return;\n    getResizeObserver().observe(element);\n    setRect(element.getBoundingClientRect());\n    targetMap.set(element, function (rect) {\n      setRect(rect);\n    });\n    return function () {\n      targetMap.delete(element);\n    };\n  }, [element]);\n  return rect;\n}","const _excluded = [\"onKeyDown\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n\n/* eslint-disable jsx-a11y/anchor-has-content */\nimport * as React from 'react';\nimport { useEventCallback } from '@restart/hooks';\nimport { useButtonProps } from './Button';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function isTrivialHref(href) {\n  return !href || href.trim() === '#';\n}\n\n/**\n * An generic `<a>` component that covers a few A11y cases, ensuring that\n * cases where the `href` is missing or trivial like \"#\" are treated like buttons.\n */\nconst Anchor = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    onKeyDown\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const [buttonProps] = useButtonProps(Object.assign({\n    tagName: 'a'\n  }, props));\n  const handleKeyDown = useEventCallback(e => {\n    buttonProps.onKeyDown(e);\n    onKeyDown == null ? void 0 : onKeyDown(e);\n  });\n\n  if (isTrivialHref(props.href) && !props.role || props.role === 'button') {\n    return /*#__PURE__*/_jsx(\"a\", Object.assign({\n      ref: ref\n    }, props, buttonProps, {\n      onKeyDown: handleKeyDown\n    }));\n  }\n\n  return /*#__PURE__*/_jsx(\"a\", Object.assign({\n    ref: ref\n  }, props, {\n    onKeyDown: onKeyDown\n  }));\n});\nAnchor.displayName = 'Anchor';\nexport default Anchor;","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","const _excluded = [\"as\", \"disabled\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function isTrivialHref(href) {\n  return !href || href.trim() === '#';\n}\nexport function useButtonProps({\n  tagName,\n  disabled,\n  href,\n  target,\n  rel,\n  onClick,\n  tabIndex = 0,\n  type\n}) {\n  if (!tagName) {\n    if (href != null || target != null || rel != null) {\n      tagName = 'a';\n    } else {\n      tagName = 'button';\n    }\n  }\n\n  const meta = {\n    tagName\n  };\n\n  if (tagName === 'button') {\n    return [{\n      type: type || 'button',\n      disabled\n    }, meta];\n  }\n\n  const handleClick = event => {\n    if (disabled || tagName === 'a' && isTrivialHref(href)) {\n      event.preventDefault();\n    }\n\n    if (disabled) {\n      event.stopPropagation();\n      return;\n    }\n\n    onClick == null ? void 0 : onClick(event);\n  };\n\n  const handleKeyDown = event => {\n    if (event.key === ' ') {\n      event.preventDefault();\n      handleClick(event);\n    }\n  };\n\n  if (tagName === 'a') {\n    // Ensure there's a href so Enter can trigger anchor button.\n    href || (href = '#');\n\n    if (disabled) {\n      href = undefined;\n    }\n  }\n\n  return [{\n    role: 'button',\n    // explicitly undefined so that it overrides the props disabled in a spread\n    // e.g. <Tag {...props} {...hookProps} />\n    disabled: undefined,\n    tabIndex: disabled ? undefined : tabIndex,\n    href,\n    target: tagName === 'a' ? target : undefined,\n    'aria-disabled': !disabled ? undefined : disabled,\n    rel: tagName === 'a' ? rel : undefined,\n    onClick: handleClick,\n    onKeyDown: handleKeyDown\n  }, meta];\n}\nconst Button = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    as: asProp,\n    disabled\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const [buttonProps, {\n    tagName: Component\n  }] = useButtonProps(Object.assign({\n    tagName: asProp,\n    disabled\n  }, props));\n  return /*#__PURE__*/_jsx(Component, Object.assign({}, props, buttonProps, {\n    ref: ref\n  }));\n});\nButton.displayName = 'Button';\nexport default Button;","import * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default (className => /*#__PURE__*/React.forwardRef((p, ref) => /*#__PURE__*/_jsx(\"div\", { ...p,\n  ref: ref,\n  className: classNames(p.className, className)\n})));","import * as React from 'react';\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'CardHeaderContext';\nexport default context;","import { useEffect, useLayoutEffect } from 'react';\nvar isReactNative = typeof global !== 'undefined' && // @ts-ignore\nglobal.navigator && // @ts-ignore\nglobal.navigator.product === 'ReactNative';\nvar isDOM = typeof document !== 'undefined';\n/**\n * Is `useLayoutEffect` in a DOM or React Native environment, otherwise resolves to useEffect\n * Only useful to avoid the console warning.\n *\n * PREFER `useEffect` UNLESS YOU KNOW WHAT YOU ARE DOING.\n *\n * @category effects\n */\n\nexport default isDOM || isReactNative ? useLayoutEffect : useEffect;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const breakpoints = useBootstrapBreakpoints();\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n\n    const infix = brkPoint !== 'xs' ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;","import classNames from 'classnames';\nimport * as React from 'react';\nimport Anchor from '@restart/ui/Anchor';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  active: false,\n  linkProps: {}\n};\nconst BreadcrumbItem = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  active,\n  children,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'li',\n  linkAs: LinkComponent = Anchor,\n  linkProps,\n  href,\n  title,\n  target,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'breadcrumb-item');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(prefix, className, {\n      active\n    }),\n    \"aria-current\": active ? 'page' : undefined,\n    children: active ? children : /*#__PURE__*/_jsx(LinkComponent, { ...linkProps,\n      href: href,\n      title: title,\n      target: target,\n      children: children\n    })\n  });\n});\nBreadcrumbItem.displayName = 'BreadcrumbItem';\nBreadcrumbItem.defaultProps = defaultProps;\nexport default BreadcrumbItem;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport BreadcrumbItem from './BreadcrumbItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  label: 'breadcrumb',\n  listProps: {}\n};\nconst Breadcrumb = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  listProps,\n  children,\n  label,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'nav',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'breadcrumb');\n  return /*#__PURE__*/_jsx(Component, {\n    \"aria-label\": label,\n    className: className,\n    ref: ref,\n    ...props,\n    children: /*#__PURE__*/_jsx(\"ol\", { ...listProps,\n      className: classNames(prefix, listProps == null ? void 0 : listProps.className),\n      children: children\n    })\n  });\n});\nBreadcrumb.displayName = 'Breadcrumb';\nBreadcrumb.defaultProps = defaultProps;\nexport default Object.assign(Breadcrumb, {\n  Item: BreadcrumbItem\n});","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImg = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  variant,\n  as: Component = 'img',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(variant ? `${prefix}-${variant}` : prefix, className),\n    ...props\n  });\n});\nCardImg.displayName = 'CardImg';\nexport default CardImg;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardHeaderContext from './CardHeaderContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-header');\n  const contextValue = useMemo(() => ({\n    cardHeaderBsPrefix: prefix\n  }), [prefix]);\n  return /*#__PURE__*/_jsx(CardHeaderContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, prefix)\n    })\n  });\n});\nCardHeader.displayName = 'CardHeader';\nexport default CardHeader;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardImg from './CardImg';\nimport CardHeader from './CardHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst DivStyledAsH6 = divWithClassName('h6');\nconst CardBody = createWithBsPrefix('card-body');\nconst CardTitle = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nconst CardSubtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nconst CardLink = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nconst CardText = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nconst CardFooter = createWithBsPrefix('card-footer');\nconst CardImgOverlay = createWithBsPrefix('card-img-overlay');\nconst defaultProps = {\n  body: false\n};\nconst Card = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  bg,\n  text,\n  border,\n  body,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, bg && `bg-${bg}`, text && `text-${text}`, border && `border-${border}`),\n    children: body ? /*#__PURE__*/_jsx(CardBody, {\n      children: children\n    }) : children\n  });\n});\nCard.displayName = 'Card';\nCard.defaultProps = defaultProps;\nexport default Object.assign(Card, {\n  Img: CardImg,\n  Title: CardTitle,\n  Subtitle: CardSubtitle,\n  Body: CardBody,\n  Link: CardLink,\n  Text: CardText,\n  Header: CardHeader,\n  Footer: CardFooter,\n  ImgOverlay: CardImgOverlay\n});","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return (module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports), _typeof(obj);\n}\n\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","if (process.env.NODE_ENV === 'production') {\n  module.exports = require('./dist/react-table.production.min.js')\n} else {\n  module.exports = require('./dist/react-table.development.js')\n}\n","import React from 'react'\n\nlet renderErr = 'Renderer Error ☝️'\n\nexport const actions = {\n  init: 'init',\n}\n\nexport const defaultRenderer = ({ value = '' }) => value;\nexport const emptyRenderer = () => <>&nbsp;</>;\n\nexport const defaultColumn = {\n  Cell: defaultRenderer,\n  width: 150,\n  minWidth: 0,\n  maxWidth: Number.MAX_SAFE_INTEGER,\n}\n\nfunction mergeProps(...propList) {\n  return propList.reduce((props, next) => {\n    const { style, className, ...rest } = next\n\n    props = {\n      ...props,\n      ...rest,\n    }\n\n    if (style) {\n      props.style = props.style\n        ? { ...(props.style || {}), ...(style || {}) }\n        : style\n    }\n\n    if (className) {\n      props.className = props.className\n        ? props.className + ' ' + className\n        : className\n    }\n\n    if (props.className === '') {\n      delete props.className\n    }\n\n    return props\n  }, {})\n}\n\nfunction handlePropGetter(prevProps, userProps, meta) {\n  // Handle a lambda, pass it the previous props\n  if (typeof userProps === 'function') {\n    return handlePropGetter({}, userProps(prevProps, meta))\n  }\n\n  // Handle an array, merge each item as separate props\n  if (Array.isArray(userProps)) {\n    return mergeProps(prevProps, ...userProps)\n  }\n\n  // Handle an object by default, merge the two objects\n  return mergeProps(prevProps, userProps)\n}\n\nexport const makePropGetter = (hooks, meta = {}) => {\n  return (userProps = {}) =>\n    [...hooks, userProps].reduce(\n      (prev, next) =>\n        handlePropGetter(prev, next, {\n          ...meta,\n          userProps,\n        }),\n      {}\n    )\n}\n\nexport const reduceHooks = (hooks, initial, meta = {}, allowUndefined) =>\n  hooks.reduce((prev, next) => {\n    const nextValue = next(prev, meta)\n    if (process.env.NODE_ENV !== 'production') {\n      if (!allowUndefined && typeof nextValue === 'undefined') {\n        console.info(next)\n        throw new Error(\n          'React Table: A reducer hook ☝️ just returned undefined! This is not allowed.'\n        )\n      }\n    }\n    return nextValue\n  }, initial)\n\nexport const loopHooks = (hooks, context, meta = {}) =>\n  hooks.forEach(hook => {\n    const nextValue = hook(context, meta)\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof nextValue !== 'undefined') {\n        console.info(hook, nextValue)\n        throw new Error(\n          'React Table: A loop-type hook ☝️ just returned a value! This is not allowed.'\n        )\n      }\n    }\n  })\n\nexport function ensurePluginOrder(plugins, befores, pluginName, afters) {\n  if (process.env.NODE_ENV !== 'production' && afters) {\n    throw new Error(\n      `Defining plugins in the \"after\" section of ensurePluginOrder is no longer supported (see plugin ${pluginName})`\n    )\n  }\n  const pluginIndex = plugins.findIndex(\n    plugin => plugin.pluginName === pluginName\n  )\n\n  if (pluginIndex === -1) {\n    if (process.env.NODE_ENV !== 'production') {\n      throw new Error(`The plugin \"${pluginName}\" was not found in the plugin list!\nThis usually means you need to need to name your plugin hook by setting the 'pluginName' property of the hook function, eg:\n\n  ${pluginName}.pluginName = '${pluginName}'\n`)\n    }\n  }\n\n  befores.forEach(before => {\n    const beforeIndex = plugins.findIndex(\n      plugin => plugin.pluginName === before\n    )\n    if (beforeIndex > -1 && beforeIndex > pluginIndex) {\n      if (process.env.NODE_ENV !== 'production') {\n        throw new Error(\n          `React Table: The ${pluginName} plugin hook must be placed after the ${before} plugin hook!`\n        )\n      }\n    }\n  })\n}\n\nexport function functionalUpdate(updater, old) {\n  return typeof updater === 'function' ? updater(old) : updater\n}\n\nexport function useGetLatest(obj) {\n  const ref = React.useRef()\n  ref.current = obj\n\n  return React.useCallback(() => ref.current, [])\n}\n\n// SSR has issues with useLayoutEffect still, so use useEffect during SSR\nexport const safeUseLayoutEffect =\n  typeof document !== 'undefined' ? React.useLayoutEffect : React.useEffect\n\nexport function useMountedLayoutEffect(fn, deps) {\n  const mountedRef = React.useRef(false)\n\n  safeUseLayoutEffect(() => {\n    if (mountedRef.current) {\n      fn()\n    }\n    mountedRef.current = true\n    // eslint-disable-next-line\n  }, deps)\n}\n\nexport function useAsyncDebounce(defaultFn, defaultWait = 0) {\n  const debounceRef = React.useRef({})\n\n  const getDefaultFn = useGetLatest(defaultFn)\n  const getDefaultWait = useGetLatest(defaultWait)\n\n  return React.useCallback(\n    async (...args) => {\n      if (!debounceRef.current.promise) {\n        debounceRef.current.promise = new Promise((resolve, reject) => {\n          debounceRef.current.resolve = resolve\n          debounceRef.current.reject = reject\n        })\n      }\n\n      if (debounceRef.current.timeout) {\n        clearTimeout(debounceRef.current.timeout)\n      }\n\n      debounceRef.current.timeout = setTimeout(async () => {\n        delete debounceRef.current.timeout\n        try {\n          debounceRef.current.resolve(await getDefaultFn()(...args))\n        } catch (err) {\n          debounceRef.current.reject(err)\n        } finally {\n          delete debounceRef.current.promise\n        }\n      }, getDefaultWait())\n\n      return debounceRef.current.promise\n    },\n    [getDefaultFn, getDefaultWait]\n  )\n}\n\nexport function makeRenderer(instance, column, meta = {}) {\n  return (type, userProps = {}) => {\n    const Comp = typeof type === 'string' ? column[type] : type\n\n    if (typeof Comp === 'undefined') {\n      console.info(column)\n      throw new Error(renderErr)\n    }\n\n    return flexRender(Comp, { ...instance, column, ...meta, ...userProps })\n  }\n}\n\nexport function flexRender(Comp, props) {\n  return isReactComponent(Comp) ? <Comp {...props} /> : Comp\n}\n\nfunction isReactComponent(component) {\n  return (\n    isClassComponent(component) ||\n    typeof component === 'function' ||\n    isExoticComponent(component)\n  )\n}\n\nfunction isClassComponent(component) {\n  return (\n    typeof component === 'function' &&\n    (() => {\n      const proto = Object.getPrototypeOf(component)\n      return proto.prototype && proto.prototype.isReactComponent\n    })()\n  )\n}\n\nfunction isExoticComponent(component) {\n  return (\n    typeof component === 'object' &&\n    typeof component.$$typeof === 'symbol' &&\n    ['react.memo', 'react.forward_ref'].includes(component.$$typeof.description)\n  )\n}\n","import { defaultColumn, emptyRenderer } from './publicUtils'\n\n// Find the depth of the columns\nexport function findMaxDepth(columns, depth = 0) {\n  return columns.reduce((prev, curr) => {\n    if (curr.columns) {\n      return Math.max(prev, findMaxDepth(curr.columns, depth + 1))\n    }\n    return depth\n  }, 0)\n}\n\n// Build the visible columns, headers and flat column list\nexport function linkColumnStructure(columns, parent, depth = 0) {\n  return columns.map(column => {\n    column = {\n      ...column,\n      parent,\n      depth,\n    }\n\n    assignColumnAccessor(column)\n\n    if (column.columns) {\n      column.columns = linkColumnStructure(column.columns, column, depth + 1)\n    }\n    return column\n  })\n}\n\nexport function flattenColumns(columns) {\n  return flattenBy(columns, 'columns')\n}\n\nexport function assignColumnAccessor(column) {\n  // First check for string accessor\n  let { id, accessor, Header } = column\n\n  if (typeof accessor === 'string') {\n    id = id || accessor\n    const accessorPath = accessor.split('.')\n    accessor = row => getBy(row, accessorPath)\n  }\n\n  if (!id && typeof Header === 'string' && Header) {\n    id = Header\n  }\n\n  if (!id && column.columns) {\n    console.error(column)\n    throw new Error('A column ID (or unique \"Header\" value) is required!')\n  }\n\n  if (!id) {\n    console.error(column)\n    throw new Error('A column ID (or string accessor) is required!')\n  }\n\n  Object.assign(column, {\n    id,\n    accessor,\n  })\n\n  return column\n}\n\nexport function decorateColumn(column, userDefaultColumn) {\n  if (!userDefaultColumn) {\n    throw new Error()\n  }\n  Object.assign(column, {\n    // Make sure there is a fallback header, just in case\n    Header: emptyRenderer,\n    Footer: emptyRenderer,\n    ...defaultColumn,\n    ...userDefaultColumn,\n    ...column,\n  })\n\n  Object.assign(column, {\n    originalWidth: column.width,\n  })\n\n  return column\n}\n\n// Build the header groups from the bottom up\nexport function makeHeaderGroups(\n  allColumns,\n  defaultColumn,\n  additionalHeaderProperties = () => ({})\n) {\n  const headerGroups = []\n\n  let scanColumns = allColumns\n\n  let uid = 0\n  const getUID = () => uid++\n\n  while (scanColumns.length) {\n    // The header group we are creating\n    const headerGroup = {\n      headers: [],\n    }\n\n    // The parent columns we're going to scan next\n    const parentColumns = []\n\n    const hasParents = scanColumns.some(d => d.parent)\n\n    // Scan each column for parents\n    scanColumns.forEach(column => {\n      // What is the latest (last) parent column?\n      let latestParentColumn = [...parentColumns].reverse()[0]\n\n      let newParent\n\n      if (hasParents) {\n        // If the column has a parent, add it if necessary\n        if (column.parent) {\n          newParent = {\n            ...column.parent,\n            originalId: column.parent.id,\n            id: `${column.parent.id}_${getUID()}`,\n            headers: [column],\n            ...additionalHeaderProperties(column),\n          }\n        } else {\n          // If other columns have parents, we'll need to add a place holder if necessary\n          const originalId = `${column.id}_placeholder`\n          newParent = decorateColumn(\n            {\n              originalId,\n              id: `${column.id}_placeholder_${getUID()}`,\n              placeholderOf: column,\n              headers: [column],\n              ...additionalHeaderProperties(column),\n            },\n            defaultColumn\n          )\n        }\n\n        // If the resulting parent columns are the same, just add\n        // the column and increment the header span\n        if (\n          latestParentColumn &&\n          latestParentColumn.originalId === newParent.originalId\n        ) {\n          latestParentColumn.headers.push(column)\n        } else {\n          parentColumns.push(newParent)\n        }\n      }\n\n      headerGroup.headers.push(column)\n    })\n\n    headerGroups.push(headerGroup)\n\n    // Start scanning the parent columns\n    scanColumns = parentColumns\n  }\n\n  return headerGroups.reverse()\n}\n\nconst pathObjCache = new Map()\n\nexport function getBy(obj, path, def) {\n  if (!path) {\n    return obj\n  }\n  const cacheKey = typeof path === 'function' ? path : JSON.stringify(path)\n\n  const pathObj =\n    pathObjCache.get(cacheKey) ||\n    (() => {\n      const pathObj = makePathArray(path)\n      pathObjCache.set(cacheKey, pathObj)\n      return pathObj\n    })()\n\n  let val\n\n  try {\n    val = pathObj.reduce((cursor, pathPart) => cursor[pathPart], obj)\n  } catch (e) {\n    // continue regardless of error\n  }\n  return typeof val !== 'undefined' ? val : def\n}\n\nexport function getFirstDefined(...args) {\n  for (let i = 0; i < args.length; i += 1) {\n    if (typeof args[i] !== 'undefined') {\n      return args[i]\n    }\n  }\n}\n\nexport function getElementDimensions(element) {\n  const rect = element.getBoundingClientRect()\n  const style = window.getComputedStyle(element)\n  const margins = {\n    left: parseInt(style.marginLeft),\n    right: parseInt(style.marginRight),\n  }\n  const padding = {\n    left: parseInt(style.paddingLeft),\n    right: parseInt(style.paddingRight),\n  }\n  return {\n    left: Math.ceil(rect.left),\n    width: Math.ceil(rect.width),\n    outerWidth: Math.ceil(\n      rect.width + margins.left + margins.right + padding.left + padding.right\n    ),\n    marginLeft: margins.left,\n    marginRight: margins.right,\n    paddingLeft: padding.left,\n    paddingRight: padding.right,\n    scrollWidth: element.scrollWidth,\n  }\n}\n\nexport function isFunction(a) {\n  if (typeof a === 'function') {\n    return a\n  }\n}\n\nexport function flattenBy(arr, key) {\n  const flat = []\n\n  const recurse = arr => {\n    arr.forEach(d => {\n      if (!d[key]) {\n        flat.push(d)\n      } else {\n        recurse(d[key])\n      }\n    })\n  }\n\n  recurse(arr)\n\n  return flat\n}\n\nexport function expandRows(\n  rows,\n  { manualExpandedKey, expanded, expandSubRows = true }\n) {\n  const expandedRows = []\n\n  const handleRow = (row, addToExpandedRows = true) => {\n    row.isExpanded =\n      (row.original && row.original[manualExpandedKey]) || expanded[row.id]\n\n    row.canExpand = row.subRows && !!row.subRows.length\n\n    if (addToExpandedRows) {\n      expandedRows.push(row)\n    }\n\n    if (row.subRows && row.subRows.length && row.isExpanded) {\n      row.subRows.forEach(row => handleRow(row, expandSubRows))\n    }\n  }\n\n  rows.forEach(row => handleRow(row))\n\n  return expandedRows\n}\n\nexport function getFilterMethod(filter, userFilterTypes, filterTypes) {\n  return (\n    isFunction(filter) ||\n    userFilterTypes[filter] ||\n    filterTypes[filter] ||\n    filterTypes.text\n  )\n}\n\nexport function shouldAutoRemoveFilter(autoRemove, value, column) {\n  return autoRemove ? autoRemove(value, column) : typeof value === 'undefined'\n}\n\nexport function unpreparedAccessWarning() {\n  throw new Error(\n    'React-Table: You have not called prepareRow(row) one or more rows you are attempting to render.'\n  )\n}\n\nlet passiveSupported = null\nexport function passiveEventSupported() {\n  // memoize support to avoid adding multiple test events\n  if (typeof passiveSupported === 'boolean') return passiveSupported\n\n  let supported = false\n  try {\n    const options = {\n      get passive() {\n        supported = true\n        return false\n      },\n    }\n\n    window.addEventListener('test', null, options)\n    window.removeEventListener('test', null, options)\n  } catch (err) {\n    supported = false\n  }\n  passiveSupported = supported\n  return passiveSupported\n}\n\n//\n\nconst reOpenBracket = /\\[/g\nconst reCloseBracket = /\\]/g\n\nfunction makePathArray(obj) {\n  return (\n    flattenDeep(obj)\n      // remove all periods in parts\n      .map(d => String(d).replace('.', '_'))\n      // join parts using period\n      .join('.')\n      // replace brackets with periods\n      .replace(reOpenBracket, '.')\n      .replace(reCloseBracket, '')\n      // split it back out on periods\n      .split('.')\n  )\n}\n\nfunction flattenDeep(arr, newArr = []) {\n  if (!Array.isArray(arr)) {\n    newArr.push(arr)\n  } else {\n    for (let i = 0; i < arr.length; i += 1) {\n      flattenDeep(arr[i], newArr)\n    }\n  }\n  return newArr\n}\n","const defaultGetTableProps = props => ({\n  role: 'table',\n  ...props,\n})\n\nconst defaultGetTableBodyProps = props => ({\n  role: 'rowgroup',\n  ...props,\n})\n\nconst defaultGetHeaderProps = (props, { column }) => ({\n  key: `header_${column.id}`,\n  colSpan: column.totalVisibleHeaderCount,\n  role: 'columnheader',\n  ...props,\n})\n\nconst defaultGetFooterProps = (props, { column }) => ({\n  key: `footer_${column.id}`,\n  colSpan: column.totalVisibleHeaderCount,\n  ...props,\n})\n\nconst defaultGetHeaderGroupProps = (props, { index }) => ({\n  key: `headerGroup_${index}`,\n  role: 'row',\n  ...props,\n})\n\nconst defaultGetFooterGroupProps = (props, { index }) => ({\n  key: `footerGroup_${index}`,\n  ...props,\n})\n\nconst defaultGetRowProps = (props, { row }) => ({\n  key: `row_${row.id}`,\n  role: 'row',\n  ...props,\n})\n\nconst defaultGetCellProps = (props, { cell }) => ({\n  key: `cell_${cell.row.id}_${cell.column.id}`,\n  role: 'cell',\n  ...props,\n})\n\nexport default function makeDefaultPluginHooks() {\n  return {\n    useOptions: [],\n    stateReducers: [],\n    useControlledState: [],\n    columns: [],\n    columnsDeps: [],\n    allColumns: [],\n    allColumnsDeps: [],\n    accessValue: [],\n    materializedColumns: [],\n    materializedColumnsDeps: [],\n    useInstanceAfterData: [],\n    visibleColumns: [],\n    visibleColumnsDeps: [],\n    headerGroups: [],\n    headerGroupsDeps: [],\n    useInstanceBeforeDimensions: [],\n    useInstance: [],\n    prepareRow: [],\n    getTableProps: [defaultGetTableProps],\n    getTableBodyProps: [defaultGetTableBodyProps],\n    getHeaderGroupProps: [defaultGetHeaderGroupProps],\n    getFooterGroupProps: [defaultGetFooterGroupProps],\n    getHeaderProps: [defaultGetHeaderProps],\n    getFooterProps: [defaultGetFooterProps],\n    getRowProps: [defaultGetRowProps],\n    getCellProps: [defaultGetCellProps],\n    useFinalInstance: [],\n  }\n}\n","import React from 'react'\n\nimport {\n  actions,\n  functionalUpdate,\n  useGetLatest,\n  makePropGetter,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nactions.resetHiddenColumns = 'resetHiddenColumns'\nactions.toggleHideColumn = 'toggleHideColumn'\nactions.setHiddenColumns = 'setHiddenColumns'\nactions.toggleHideAllColumns = 'toggleHideAllColumns'\n\nexport const useColumnVisibility = hooks => {\n  hooks.getToggleHiddenProps = [defaultGetToggleHiddenProps]\n  hooks.getToggleHideAllColumnsProps = [defaultGetToggleHideAllColumnsProps]\n\n  hooks.stateReducers.push(reducer)\n  hooks.useInstanceBeforeDimensions.push(useInstanceBeforeDimensions)\n  hooks.headerGroupsDeps.push((deps, { instance }) => [\n    ...deps,\n    instance.state.hiddenColumns,\n  ])\n  hooks.useInstance.push(useInstance)\n}\n\nuseColumnVisibility.pluginName = 'useColumnVisibility'\n\nconst defaultGetToggleHiddenProps = (props, { column }) => [\n  props,\n  {\n    onChange: e => {\n      column.toggleHidden(!e.target.checked)\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    checked: column.isVisible,\n    title: 'Toggle Column Visible',\n  },\n]\n\nconst defaultGetToggleHideAllColumnsProps = (props, { instance }) => [\n  props,\n  {\n    onChange: e => {\n      instance.toggleHideAllColumns(!e.target.checked)\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    checked: !instance.allColumnsHidden && !instance.state.hiddenColumns.length,\n    title: 'Toggle All Columns Hidden',\n    indeterminate:\n      !instance.allColumnsHidden && instance.state.hiddenColumns.length,\n  },\n]\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      hiddenColumns: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetHiddenColumns) {\n    return {\n      ...state,\n      hiddenColumns: instance.initialState.hiddenColumns || [],\n    }\n  }\n\n  if (action.type === actions.toggleHideColumn) {\n    const should =\n      typeof action.value !== 'undefined'\n        ? action.value\n        : !state.hiddenColumns.includes(action.columnId)\n\n    const hiddenColumns = should\n      ? [...state.hiddenColumns, action.columnId]\n      : state.hiddenColumns.filter(d => d !== action.columnId)\n\n    return {\n      ...state,\n      hiddenColumns,\n    }\n  }\n\n  if (action.type === actions.setHiddenColumns) {\n    return {\n      ...state,\n      hiddenColumns: functionalUpdate(action.value, state.hiddenColumns),\n    }\n  }\n\n  if (action.type === actions.toggleHideAllColumns) {\n    const shouldAll =\n      typeof action.value !== 'undefined'\n        ? action.value\n        : !state.hiddenColumns.length\n\n    return {\n      ...state,\n      hiddenColumns: shouldAll ? instance.allColumns.map(d => d.id) : [],\n    }\n  }\n}\n\nfunction useInstanceBeforeDimensions(instance) {\n  const {\n    headers,\n    state: { hiddenColumns },\n  } = instance\n\n  const isMountedRef = React.useRef(false)\n\n  if (!isMountedRef.current) {\n  }\n\n  const handleColumn = (column, parentVisible) => {\n    column.isVisible = parentVisible && !hiddenColumns.includes(column.id)\n\n    let totalVisibleHeaderCount = 0\n\n    if (column.headers && column.headers.length) {\n      column.headers.forEach(\n        subColumn =>\n          (totalVisibleHeaderCount += handleColumn(subColumn, column.isVisible))\n      )\n    } else {\n      totalVisibleHeaderCount = column.isVisible ? 1 : 0\n    }\n\n    column.totalVisibleHeaderCount = totalVisibleHeaderCount\n\n    return totalVisibleHeaderCount\n  }\n\n  let totalVisibleHeaderCount = 0\n\n  headers.forEach(\n    subHeader => (totalVisibleHeaderCount += handleColumn(subHeader, true))\n  )\n}\n\nfunction useInstance(instance) {\n  const {\n    columns,\n    flatHeaders,\n    dispatch,\n    allColumns,\n    getHooks,\n    state: { hiddenColumns },\n    autoResetHiddenColumns = true,\n  } = instance\n\n  const getInstance = useGetLatest(instance)\n\n  const allColumnsHidden = allColumns.length === hiddenColumns.length\n\n  const toggleHideColumn = React.useCallback(\n    (columnId, value) =>\n      dispatch({ type: actions.toggleHideColumn, columnId, value }),\n    [dispatch]\n  )\n\n  const setHiddenColumns = React.useCallback(\n    value => dispatch({ type: actions.setHiddenColumns, value }),\n    [dispatch]\n  )\n\n  const toggleHideAllColumns = React.useCallback(\n    value => dispatch({ type: actions.toggleHideAllColumns, value }),\n    [dispatch]\n  )\n\n  const getToggleHideAllColumnsProps = makePropGetter(\n    getHooks().getToggleHideAllColumnsProps,\n    { instance: getInstance() }\n  )\n\n  flatHeaders.forEach(column => {\n    column.toggleHidden = value => {\n      dispatch({\n        type: actions.toggleHideColumn,\n        columnId: column.id,\n        value,\n      })\n    }\n\n    column.getToggleHiddenProps = makePropGetter(\n      getHooks().getToggleHiddenProps,\n      {\n        instance: getInstance(),\n        column,\n      }\n    )\n  })\n\n  const getAutoResetHiddenColumns = useGetLatest(autoResetHiddenColumns)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetHiddenColumns()) {\n      dispatch({ type: actions.resetHiddenColumns })\n    }\n  }, [dispatch, columns])\n\n  Object.assign(instance, {\n    allColumnsHidden,\n    toggleHideColumn,\n    setHiddenColumns,\n    toggleHideAllColumns,\n    getToggleHideAllColumnsProps,\n  })\n}\n","import React from 'react'\n\n//\n\nimport {\n  linkColumnStructure,\n  flattenColumns,\n  assignColumnAccessor,\n  unpreparedAccessWarning,\n  makeHeaderGroups,\n  decorateColumn,\n} from '../utils'\n\nimport {\n  useGetLatest,\n  reduceHooks,\n  actions,\n  loopHooks,\n  makePropGetter,\n  makeRenderer,\n} from '../publicUtils'\n\nimport makeDefaultPluginHooks from '../makeDefaultPluginHooks'\n\nimport { useColumnVisibility } from './useColumnVisibility'\n\nconst defaultInitialState = {}\nconst defaultColumnInstance = {}\nconst defaultReducer = (state, action, prevState) => state\nconst defaultGetSubRows = (row, index) => row.subRows || []\nconst defaultGetRowId = (row, index, parent) =>\n  `${parent ? [parent.id, index].join('.') : index}`\nconst defaultUseControlledState = d => d\n\nfunction applyDefaults(props) {\n  const {\n    initialState = defaultInitialState,\n    defaultColumn = defaultColumnInstance,\n    getSubRows = defaultGetSubRows,\n    getRowId = defaultGetRowId,\n    stateReducer = defaultReducer,\n    useControlledState = defaultUseControlledState,\n    ...rest\n  } = props\n\n  return {\n    ...rest,\n    initialState,\n    defaultColumn,\n    getSubRows,\n    getRowId,\n    stateReducer,\n    useControlledState,\n  }\n}\n\nexport const useTable = (props, ...plugins) => {\n  // Apply default props\n  props = applyDefaults(props)\n\n  // Add core plugins\n  plugins = [useColumnVisibility, ...plugins]\n\n  // Create the table instance\n  let instanceRef = React.useRef({})\n\n  // Create a getter for the instance (helps avoid a lot of potential memory leaks)\n  const getInstance = useGetLatest(instanceRef.current)\n\n  // Assign the props, plugins and hooks to the instance\n  Object.assign(getInstance(), {\n    ...props,\n    plugins,\n    hooks: makeDefaultPluginHooks(),\n  })\n\n  // Allow plugins to register hooks as early as possible\n  plugins.filter(Boolean).forEach(plugin => {\n    plugin(getInstance().hooks)\n  })\n\n  // Consume all hooks and make a getter for them\n  const getHooks = useGetLatest(getInstance().hooks)\n  getInstance().getHooks = getHooks\n  delete getInstance().hooks\n\n  // Allow useOptions hooks to modify the options coming into the table\n  Object.assign(\n    getInstance(),\n    reduceHooks(getHooks().useOptions, applyDefaults(props))\n  )\n\n  const {\n    data,\n    columns: userColumns,\n    initialState,\n    defaultColumn,\n    getSubRows,\n    getRowId,\n    stateReducer,\n    useControlledState,\n  } = getInstance()\n\n  // Setup user reducer ref\n  const getStateReducer = useGetLatest(stateReducer)\n\n  // Build the reducer\n  const reducer = React.useCallback(\n    (state, action) => {\n      // Detect invalid actions\n      if (!action.type) {\n        console.info({ action })\n        throw new Error('Unknown Action 👆')\n      }\n\n      // Reduce the state from all plugin reducers\n      return [\n        ...getHooks().stateReducers,\n        // Allow the user to add their own state reducer(s)\n        ...(Array.isArray(getStateReducer())\n          ? getStateReducer()\n          : [getStateReducer()]),\n      ].reduce(\n        (s, handler) => handler(s, action, state, getInstance()) || s,\n        state\n      )\n    },\n    [getHooks, getStateReducer, getInstance]\n  )\n\n  // Start the reducer\n  const [reducerState, dispatch] = React.useReducer(reducer, undefined, () =>\n    reducer(initialState, { type: actions.init })\n  )\n\n  // Allow the user to control the final state with hooks\n  const state = reduceHooks(\n    [...getHooks().useControlledState, useControlledState],\n    reducerState,\n    { instance: getInstance() }\n  )\n\n  Object.assign(getInstance(), {\n    state,\n    dispatch,\n  })\n\n  // Decorate All the columns\n  const columns = React.useMemo(\n    () =>\n      linkColumnStructure(\n        reduceHooks(getHooks().columns, userColumns, {\n          instance: getInstance(),\n        })\n      ),\n    [\n      getHooks,\n      getInstance,\n      userColumns,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().columnsDeps, [], { instance: getInstance() }),\n    ]\n  )\n  getInstance().columns = columns\n\n  // Get the flat list of all columns and allow hooks to decorate\n  // those columns (and trigger this memoization via deps)\n  let allColumns = React.useMemo(\n    () =>\n      reduceHooks(getHooks().allColumns, flattenColumns(columns), {\n        instance: getInstance(),\n      }).map(assignColumnAccessor),\n    [\n      columns,\n      getHooks,\n      getInstance,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().allColumnsDeps, [], {\n        instance: getInstance(),\n      }),\n    ]\n  )\n  getInstance().allColumns = allColumns\n\n  // Access the row model using initial columns\n  const [rows, flatRows, rowsById] = React.useMemo(() => {\n    let rows = []\n    let flatRows = []\n    const rowsById = {}\n\n    const allColumnsQueue = [...allColumns]\n\n    while (allColumnsQueue.length) {\n      const column = allColumnsQueue.shift()\n      accessRowsForColumn({\n        data,\n        rows,\n        flatRows,\n        rowsById,\n        column,\n        getRowId,\n        getSubRows,\n        accessValueHooks: getHooks().accessValue,\n        getInstance,\n      })\n    }\n\n    return [rows, flatRows, rowsById]\n  }, [allColumns, data, getRowId, getSubRows, getHooks, getInstance])\n\n  Object.assign(getInstance(), {\n    rows,\n    initialRows: [...rows],\n    flatRows,\n    rowsById,\n    // materializedColumns,\n  })\n\n  loopHooks(getHooks().useInstanceAfterData, getInstance())\n\n  // Get the flat list of all columns AFTER the rows\n  // have been access, and allow hooks to decorate\n  // those columns (and trigger this memoization via deps)\n  let visibleColumns = React.useMemo(\n    () =>\n      reduceHooks(getHooks().visibleColumns, allColumns, {\n        instance: getInstance(),\n      }).map(d => decorateColumn(d, defaultColumn)),\n    [\n      getHooks,\n      allColumns,\n      getInstance,\n      defaultColumn,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().visibleColumnsDeps, [], {\n        instance: getInstance(),\n      }),\n    ]\n  )\n\n  // Combine new visible columns with all columns\n  allColumns = React.useMemo(() => {\n    const columns = [...visibleColumns]\n\n    allColumns.forEach(column => {\n      if (!columns.find(d => d.id === column.id)) {\n        columns.push(column)\n      }\n    })\n\n    return columns\n  }, [allColumns, visibleColumns])\n  getInstance().allColumns = allColumns\n\n  if (process.env.NODE_ENV !== 'production') {\n    const duplicateColumns = allColumns.filter((column, i) => {\n      return allColumns.findIndex(d => d.id === column.id) !== i\n    })\n\n    if (duplicateColumns.length) {\n      console.info(allColumns)\n      throw new Error(\n        `Duplicate columns were found with ids: \"${duplicateColumns\n          .map(d => d.id)\n          .join(', ')}\" in the columns array above`\n      )\n    }\n  }\n\n  // Make the headerGroups\n  const headerGroups = React.useMemo(\n    () =>\n      reduceHooks(\n        getHooks().headerGroups,\n        makeHeaderGroups(visibleColumns, defaultColumn),\n        getInstance()\n      ),\n    [\n      getHooks,\n      visibleColumns,\n      defaultColumn,\n      getInstance,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().headerGroupsDeps, [], {\n        instance: getInstance(),\n      }),\n    ]\n  )\n  getInstance().headerGroups = headerGroups\n\n  // Get the first level of headers\n  const headers = React.useMemo(\n    () => (headerGroups.length ? headerGroups[0].headers : []),\n    [headerGroups]\n  )\n  getInstance().headers = headers\n\n  // Provide a flat header list for utilities\n  getInstance().flatHeaders = headerGroups.reduce(\n    (all, headerGroup) => [...all, ...headerGroup.headers],\n    []\n  )\n\n  loopHooks(getHooks().useInstanceBeforeDimensions, getInstance())\n\n  // Filter columns down to visible ones\n  const visibleColumnsDep = visibleColumns\n    .filter(d => d.isVisible)\n    .map(d => d.id)\n    .sort()\n    .join('_')\n\n  visibleColumns = React.useMemo(\n    () => visibleColumns.filter(d => d.isVisible),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [visibleColumns, visibleColumnsDep]\n  )\n  getInstance().visibleColumns = visibleColumns\n\n  // Header Visibility is needed by this point\n  const [\n    totalColumnsMinWidth,\n    totalColumnsWidth,\n    totalColumnsMaxWidth,\n  ] = calculateHeaderWidths(headers)\n\n  getInstance().totalColumnsMinWidth = totalColumnsMinWidth\n  getInstance().totalColumnsWidth = totalColumnsWidth\n  getInstance().totalColumnsMaxWidth = totalColumnsMaxWidth\n\n  loopHooks(getHooks().useInstance, getInstance())\n\n  // Each materialized header needs to be assigned a render function and other\n  // prop getter properties here.\n  ;[...getInstance().flatHeaders, ...getInstance().allColumns].forEach(\n    column => {\n      // Give columns/headers rendering power\n      column.render = makeRenderer(getInstance(), column)\n\n      // Give columns/headers a default getHeaderProps\n      column.getHeaderProps = makePropGetter(getHooks().getHeaderProps, {\n        instance: getInstance(),\n        column,\n      })\n\n      // Give columns/headers a default getFooterProps\n      column.getFooterProps = makePropGetter(getHooks().getFooterProps, {\n        instance: getInstance(),\n        column,\n      })\n    }\n  )\n\n  getInstance().headerGroups = React.useMemo(\n    () =>\n      headerGroups.filter((headerGroup, i) => {\n        // Filter out any headers and headerGroups that don't have visible columns\n        headerGroup.headers = headerGroup.headers.filter(column => {\n          const recurse = headers =>\n            headers.filter(column => {\n              if (column.headers) {\n                return recurse(column.headers)\n              }\n              return column.isVisible\n            }).length\n          if (column.headers) {\n            return recurse(column.headers)\n          }\n          return column.isVisible\n        })\n\n        // Give headerGroups getRowProps\n        if (headerGroup.headers.length) {\n          headerGroup.getHeaderGroupProps = makePropGetter(\n            getHooks().getHeaderGroupProps,\n            { instance: getInstance(), headerGroup, index: i }\n          )\n\n          headerGroup.getFooterGroupProps = makePropGetter(\n            getHooks().getFooterGroupProps,\n            { instance: getInstance(), headerGroup, index: i }\n          )\n\n          return true\n        }\n\n        return false\n      }),\n    [headerGroups, getInstance, getHooks]\n  )\n\n  getInstance().footerGroups = [...getInstance().headerGroups].reverse()\n\n  // The prepareRow function is absolutely necessary and MUST be called on\n  // any rows the user wishes to be displayed.\n\n  getInstance().prepareRow = React.useCallback(\n    row => {\n      row.getRowProps = makePropGetter(getHooks().getRowProps, {\n        instance: getInstance(),\n        row,\n      })\n\n      // Build the visible cells for each row\n      row.allCells = allColumns.map(column => {\n        const value = row.values[column.id]\n\n        const cell = {\n          column,\n          row,\n          value,\n        }\n\n        // Give each cell a getCellProps base\n        cell.getCellProps = makePropGetter(getHooks().getCellProps, {\n          instance: getInstance(),\n          cell,\n        })\n\n        // Give each cell a renderer function (supports multiple renderers)\n        cell.render = makeRenderer(getInstance(), column, {\n          row,\n          cell,\n          value,\n        })\n\n        return cell\n      })\n\n      row.cells = visibleColumns.map(column =>\n        row.allCells.find(cell => cell.column.id === column.id)\n      )\n\n      // need to apply any row specific hooks (useExpanded requires this)\n      loopHooks(getHooks().prepareRow, row, { instance: getInstance() })\n    },\n    [getHooks, getInstance, allColumns, visibleColumns]\n  )\n\n  getInstance().getTableProps = makePropGetter(getHooks().getTableProps, {\n    instance: getInstance(),\n  })\n\n  getInstance().getTableBodyProps = makePropGetter(\n    getHooks().getTableBodyProps,\n    {\n      instance: getInstance(),\n    }\n  )\n\n  loopHooks(getHooks().useFinalInstance, getInstance())\n\n  return getInstance()\n}\n\nfunction calculateHeaderWidths(headers, left = 0) {\n  let sumTotalMinWidth = 0\n  let sumTotalWidth = 0\n  let sumTotalMaxWidth = 0\n  let sumTotalFlexWidth = 0\n\n  headers.forEach(header => {\n    let { headers: subHeaders } = header\n\n    header.totalLeft = left\n\n    if (subHeaders && subHeaders.length) {\n      const [\n        totalMinWidth,\n        totalWidth,\n        totalMaxWidth,\n        totalFlexWidth,\n      ] = calculateHeaderWidths(subHeaders, left)\n      header.totalMinWidth = totalMinWidth\n      header.totalWidth = totalWidth\n      header.totalMaxWidth = totalMaxWidth\n      header.totalFlexWidth = totalFlexWidth\n    } else {\n      header.totalMinWidth = header.minWidth\n      header.totalWidth = Math.min(\n        Math.max(header.minWidth, header.width),\n        header.maxWidth\n      )\n      header.totalMaxWidth = header.maxWidth\n      header.totalFlexWidth = header.canResize ? header.totalWidth : 0\n    }\n    if (header.isVisible) {\n      left += header.totalWidth\n      sumTotalMinWidth += header.totalMinWidth\n      sumTotalWidth += header.totalWidth\n      sumTotalMaxWidth += header.totalMaxWidth\n      sumTotalFlexWidth += header.totalFlexWidth\n    }\n  })\n\n  return [sumTotalMinWidth, sumTotalWidth, sumTotalMaxWidth, sumTotalFlexWidth]\n}\n\nfunction accessRowsForColumn({\n  data,\n  rows,\n  flatRows,\n  rowsById,\n  column,\n  getRowId,\n  getSubRows,\n  accessValueHooks,\n  getInstance,\n}) {\n  // Access the row's data column-by-column\n  // We do it this way so we can incrementally add materialized\n  // columns after the first pass and avoid excessive looping\n  const accessRow = (originalRow, rowIndex, depth = 0, parent, parentRows) => {\n    // Keep the original reference around\n    const original = originalRow\n\n    const id = getRowId(originalRow, rowIndex, parent)\n\n    let row = rowsById[id]\n\n    // If the row hasn't been created, let's make it\n    if (!row) {\n      row = {\n        id,\n        original,\n        index: rowIndex,\n        depth,\n        cells: [{}], // This is a dummy cell\n      }\n\n      // Override common array functions (and the dummy cell's getCellProps function)\n      // to show an error if it is accessed without calling prepareRow\n      row.cells.map = unpreparedAccessWarning\n      row.cells.filter = unpreparedAccessWarning\n      row.cells.forEach = unpreparedAccessWarning\n      row.cells[0].getCellProps = unpreparedAccessWarning\n\n      // Create the cells and values\n      row.values = {}\n\n      // Push this row into the parentRows array\n      parentRows.push(row)\n      // Keep track of every row in a flat array\n      flatRows.push(row)\n      // Also keep track of every row by its ID\n      rowsById[id] = row\n\n      // Get the original subrows\n      row.originalSubRows = getSubRows(originalRow, rowIndex)\n\n      // Then recursively access them\n      if (row.originalSubRows) {\n        const subRows = []\n        row.originalSubRows.forEach((d, i) =>\n          accessRow(d, i, depth + 1, row, subRows)\n        )\n        // Keep the new subRows array on the row\n        row.subRows = subRows\n      }\n    } else if (row.subRows) {\n      // If the row exists, then it's already been accessed\n      // Keep recursing, but don't worry about passing the\n      // accumlator array (those rows already exist)\n      row.originalSubRows.forEach((d, i) => accessRow(d, i, depth + 1, row))\n    }\n\n    // If the column has an accessor, use it to get a value\n    if (column.accessor) {\n      row.values[column.id] = column.accessor(\n        originalRow,\n        rowIndex,\n        row,\n        parentRows,\n        data\n      )\n    }\n\n    // Allow plugins to manipulate the column value\n    row.values[column.id] = reduceHooks(\n      accessValueHooks,\n      row.values[column.id],\n      {\n        row,\n        column,\n        instance: getInstance(),\n      },\n      true\n    )\n  }\n\n  data.forEach((originalRow, rowIndex) =>\n    accessRow(originalRow, rowIndex, 0, undefined, rows)\n  )\n}\n","import React from 'react'\n\nimport { expandRows } from '../utils'\n\nimport {\n  useGetLatest,\n  actions,\n  useMountedLayoutEffect,\n  makePropGetter,\n  ensurePluginOrder,\n} from '../publicUtils'\n\n// Actions\nactions.resetExpanded = 'resetExpanded'\nactions.toggleRowExpanded = 'toggleRowExpanded'\nactions.toggleAllRowsExpanded = 'toggleAllRowsExpanded'\n\nexport const useExpanded = hooks => {\n  hooks.getToggleAllRowsExpandedProps = [defaultGetToggleAllRowsExpandedProps]\n  hooks.getToggleRowExpandedProps = [defaultGetToggleRowExpandedProps]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseExpanded.pluginName = 'useExpanded'\n\nconst defaultGetToggleAllRowsExpandedProps = (props, { instance }) => [\n  props,\n  {\n    onClick: e => {\n      instance.toggleAllRowsExpanded()\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    title: 'Toggle All Rows Expanded',\n  },\n]\n\nconst defaultGetToggleRowExpandedProps = (props, { row }) => [\n  props,\n  {\n    onClick: () => {\n      row.toggleRowExpanded()\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    title: 'Toggle Row Expanded',\n  },\n]\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      expanded: {},\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetExpanded) {\n    return {\n      ...state,\n      expanded: instance.initialState.expanded || {},\n    }\n  }\n\n  if (action.type === actions.toggleAllRowsExpanded) {\n    const { value } = action\n    const { rowsById } = instance\n\n    const isAllRowsExpanded =\n      Object.keys(rowsById).length === Object.keys(state.expanded).length\n\n    const expandAll = typeof value !== 'undefined' ? value : !isAllRowsExpanded\n\n    if (expandAll) {\n      const expanded = {}\n\n      Object.keys(rowsById).forEach(rowId => {\n        expanded[rowId] = true\n      })\n\n      return {\n        ...state,\n        expanded,\n      }\n    }\n\n    return {\n      ...state,\n      expanded: {},\n    }\n  }\n\n  if (action.type === actions.toggleRowExpanded) {\n    const { id, value: setExpanded } = action\n    const exists = state.expanded[id]\n\n    const shouldExist =\n      typeof setExpanded !== 'undefined' ? setExpanded : !exists\n\n    if (!exists && shouldExist) {\n      return {\n        ...state,\n        expanded: {\n          ...state.expanded,\n          [id]: true,\n        },\n      }\n    } else if (exists && !shouldExist) {\n      const { [id]: _, ...rest } = state.expanded\n      return {\n        ...state,\n        expanded: rest,\n      }\n    } else {\n      return state\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    rowsById,\n    manualExpandedKey = 'expanded',\n    paginateExpandedRows = true,\n    expandSubRows = true,\n    autoResetExpanded = true,\n    getHooks,\n    plugins,\n    state: { expanded },\n    dispatch,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useSortBy', 'useGroupBy', 'usePivotColumns', 'useGlobalFilter'],\n    'useExpanded'\n  )\n\n  const getAutoResetExpanded = useGetLatest(autoResetExpanded)\n\n  let isAllRowsExpanded = Boolean(\n    Object.keys(rowsById).length && Object.keys(expanded).length\n  )\n\n  if (isAllRowsExpanded) {\n    if (Object.keys(rowsById).some(id => !expanded[id])) {\n      isAllRowsExpanded = false\n    }\n  }\n\n  // Bypass any effects from firing when this changes\n  useMountedLayoutEffect(() => {\n    if (getAutoResetExpanded()) {\n      dispatch({ type: actions.resetExpanded })\n    }\n  }, [dispatch, data])\n\n  const toggleRowExpanded = React.useCallback(\n    (id, value) => {\n      dispatch({ type: actions.toggleRowExpanded, id, value })\n    },\n    [dispatch]\n  )\n\n  const toggleAllRowsExpanded = React.useCallback(\n    value => dispatch({ type: actions.toggleAllRowsExpanded, value }),\n    [dispatch]\n  )\n\n  const expandedRows = React.useMemo(() => {\n    if (paginateExpandedRows) {\n      return expandRows(rows, { manualExpandedKey, expanded, expandSubRows })\n    }\n\n    return rows\n  }, [paginateExpandedRows, rows, manualExpandedKey, expanded, expandSubRows])\n\n  const expandedDepth = React.useMemo(() => findExpandedDepth(expanded), [\n    expanded,\n  ])\n\n  const getInstance = useGetLatest(instance)\n\n  const getToggleAllRowsExpandedProps = makePropGetter(\n    getHooks().getToggleAllRowsExpandedProps,\n    { instance: getInstance() }\n  )\n\n  Object.assign(instance, {\n    preExpandedRows: rows,\n    expandedRows,\n    rows: expandedRows,\n    expandedDepth,\n    isAllRowsExpanded,\n    toggleRowExpanded,\n    toggleAllRowsExpanded,\n    getToggleAllRowsExpandedProps,\n  })\n}\n\nfunction prepareRow(row, { instance: { getHooks }, instance }) {\n  row.toggleRowExpanded = set => instance.toggleRowExpanded(row.id, set)\n\n  row.getToggleRowExpandedProps = makePropGetter(\n    getHooks().getToggleRowExpandedProps,\n    {\n      instance,\n      row,\n    }\n  )\n}\n\nfunction findExpandedDepth(expanded) {\n  let maxDepth = 0\n\n  Object.keys(expanded).forEach(id => {\n    const splitId = id.split('.')\n    maxDepth = Math.max(maxDepth, splitId.length)\n  })\n\n  return maxDepth\n}\n","export const text = (rows, ids, filterValue) => {\n  rows = rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return String(rowValue)\n        .toLowerCase()\n        .includes(String(filterValue).toLowerCase())\n    })\n  })\n  return rows\n}\n\ntext.autoRemove = val => !val\n\nexport const exactText = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue !== undefined\n        ? String(rowValue).toLowerCase() === String(filterValue).toLowerCase()\n        : true\n    })\n  })\n}\n\nexactText.autoRemove = val => !val\n\nexport const exactTextCase = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue !== undefined\n        ? String(rowValue) === String(filterValue)\n        : true\n    })\n  })\n}\n\nexactTextCase.autoRemove = val => !val\n\nexport const includes = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue.includes(filterValue)\n    })\n  })\n}\n\nincludes.autoRemove = val => !val || !val.length\n\nexport const includesAll = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return (\n        rowValue &&\n        rowValue.length &&\n        filterValue.every(val => rowValue.includes(val))\n      )\n    })\n  })\n}\n\nincludesAll.autoRemove = val => !val || !val.length\n\nexport const includesSome = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return (\n        rowValue &&\n        rowValue.length &&\n        filterValue.some(val => rowValue.includes(val))\n      )\n    })\n  })\n}\n\nincludesSome.autoRemove = val => !val || !val.length\n\nexport const includesValue = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return filterValue.includes(rowValue)\n    })\n  })\n}\n\nincludesValue.autoRemove = val => !val || !val.length\n\nexport const exact = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue === filterValue\n    })\n  })\n}\n\nexact.autoRemove = val => typeof val === 'undefined'\n\nexport const equals = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      // eslint-disable-next-line eqeqeq\n      return rowValue == filterValue\n    })\n  })\n}\n\nequals.autoRemove = val => val == null\n\nexport const between = (rows, ids, filterValue) => {\n  let [min, max] = filterValue || []\n\n  min = typeof min === 'number' ? min : -Infinity\n  max = typeof max === 'number' ? max : Infinity\n\n  if (min > max) {\n    const temp = min\n    min = max\n    max = temp\n  }\n\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue >= min && rowValue <= max\n    })\n  })\n}\n\nbetween.autoRemove = val =>\n  !val || (typeof val[0] !== 'number' && typeof val[1] !== 'number')\n","import React from 'react'\n\nimport {\n  getFirstDefined,\n  getFilterMethod,\n  shouldAutoRemoveFilter,\n} from '../utils'\n\nimport {\n  actions,\n  useGetLatest,\n  functionalUpdate,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nimport * as filterTypes from '../filterTypes'\n\n// Actions\nactions.resetFilters = 'resetFilters'\nactions.setFilter = 'setFilter'\nactions.setAllFilters = 'setAllFilters'\n\nexport const useFilters = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nuseFilters.pluginName = 'useFilters'\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      filters: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetFilters) {\n    return {\n      ...state,\n      filters: instance.initialState.filters || [],\n    }\n  }\n\n  if (action.type === actions.setFilter) {\n    const { columnId, filterValue } = action\n    const { allColumns, filterTypes: userFilterTypes } = instance\n\n    const column = allColumns.find(d => d.id === columnId)\n\n    if (!column) {\n      throw new Error(\n        `React-Table: Could not find a column with id: ${columnId}`\n      )\n    }\n\n    const filterMethod = getFilterMethod(\n      column.filter,\n      userFilterTypes || {},\n      filterTypes\n    )\n\n    const previousfilter = state.filters.find(d => d.id === columnId)\n\n    const newFilter = functionalUpdate(\n      filterValue,\n      previousfilter && previousfilter.value\n    )\n\n    //\n    if (shouldAutoRemoveFilter(filterMethod.autoRemove, newFilter, column)) {\n      return {\n        ...state,\n        filters: state.filters.filter(d => d.id !== columnId),\n      }\n    }\n\n    if (previousfilter) {\n      return {\n        ...state,\n        filters: state.filters.map(d => {\n          if (d.id === columnId) {\n            return { id: columnId, value: newFilter }\n          }\n          return d\n        }),\n      }\n    }\n\n    return {\n      ...state,\n      filters: [...state.filters, { id: columnId, value: newFilter }],\n    }\n  }\n\n  if (action.type === actions.setAllFilters) {\n    const { filters } = action\n    const { allColumns, filterTypes: userFilterTypes } = instance\n\n    return {\n      ...state,\n      // Filter out undefined values\n      filters: functionalUpdate(filters, state.filters).filter(filter => {\n        const column = allColumns.find(d => d.id === filter.id)\n        const filterMethod = getFilterMethod(\n          column.filter,\n          userFilterTypes || {},\n          filterTypes\n        )\n\n        if (\n          shouldAutoRemoveFilter(filterMethod.autoRemove, filter.value, column)\n        ) {\n          return false\n        }\n        return true\n      }),\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    filterTypes: userFilterTypes,\n    manualFilters,\n    defaultCanFilter = false,\n    disableFilters,\n    state: { filters },\n    dispatch,\n    autoResetFilters = true,\n  } = instance\n\n  const setFilter = React.useCallback(\n    (columnId, filterValue) => {\n      dispatch({ type: actions.setFilter, columnId, filterValue })\n    },\n    [dispatch]\n  )\n\n  const setAllFilters = React.useCallback(\n    filters => {\n      dispatch({\n        type: actions.setAllFilters,\n        filters,\n      })\n    },\n    [dispatch]\n  )\n\n  allColumns.forEach(column => {\n    const {\n      id,\n      accessor,\n      defaultCanFilter: columnDefaultCanFilter,\n      disableFilters: columnDisableFilters,\n    } = column\n\n    // Determine if a column is filterable\n    column.canFilter = accessor\n      ? getFirstDefined(\n          columnDisableFilters === true ? false : undefined,\n          disableFilters === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(columnDefaultCanFilter, defaultCanFilter, false)\n\n    // Provide the column a way of updating the filter value\n    column.setFilter = val => setFilter(column.id, val)\n\n    // Provide the current filter value to the column for\n    // convenience\n    const found = filters.find(d => d.id === id)\n    column.filterValue = found && found.value\n  })\n\n  const [\n    filteredRows,\n    filteredFlatRows,\n    filteredRowsById,\n  ] = React.useMemo(() => {\n    if (manualFilters || !filters.length) {\n      return [rows, flatRows, rowsById]\n    }\n\n    const filteredFlatRows = []\n    const filteredRowsById = {}\n\n    // Filters top level and nested rows\n    const filterRows = (rows, depth = 0) => {\n      let filteredRows = rows\n\n      filteredRows = filters.reduce(\n        (filteredSoFar, { id: columnId, value: filterValue }) => {\n          // Find the filters column\n          const column = allColumns.find(d => d.id === columnId)\n\n          if (!column) {\n            return filteredSoFar\n          }\n\n          if (depth === 0) {\n            column.preFilteredRows = filteredSoFar\n          }\n\n          const filterMethod = getFilterMethod(\n            column.filter,\n            userFilterTypes || {},\n            filterTypes\n          )\n\n          if (!filterMethod) {\n            console.warn(\n              `Could not find a valid 'column.filter' for column with the ID: ${column.id}.`\n            )\n            return filteredSoFar\n          }\n\n          // Pass the rows, id, filterValue and column to the filterMethod\n          // to get the filtered rows back\n          column.filteredRows = filterMethod(\n            filteredSoFar,\n            [columnId],\n            filterValue\n          )\n\n          return column.filteredRows\n        },\n        rows\n      )\n\n      // Apply the filter to any subRows\n      // We technically could do this recursively in the above loop,\n      // but that would severely hinder the API for the user, since they\n      // would be required to do that recursion in some scenarios\n      filteredRows.forEach(row => {\n        filteredFlatRows.push(row)\n        filteredRowsById[row.id] = row\n        if (!row.subRows) {\n          return\n        }\n\n        row.subRows =\n          row.subRows && row.subRows.length > 0\n            ? filterRows(row.subRows, depth + 1)\n            : row.subRows\n      })\n\n      return filteredRows\n    }\n\n    return [filterRows(rows), filteredFlatRows, filteredRowsById]\n  }, [\n    manualFilters,\n    filters,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    userFilterTypes,\n  ])\n\n  React.useMemo(() => {\n    // Now that each filtered column has it's partially filtered rows,\n    // lets assign the final filtered rows to all of the other columns\n    const nonFilteredColumns = allColumns.filter(\n      column => !filters.find(d => d.id === column.id)\n    )\n\n    // This essentially enables faceted filter options to be built easily\n    // using every column's preFilteredRows value\n    nonFilteredColumns.forEach(column => {\n      column.preFilteredRows = filteredRows\n      column.filteredRows = filteredRows\n    })\n  }, [filteredRows, filters, allColumns])\n\n  const getAutoResetFilters = useGetLatest(autoResetFilters)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetFilters()) {\n      dispatch({ type: actions.resetFilters })\n    }\n  }, [dispatch, manualFilters ? null : data])\n\n  Object.assign(instance, {\n    preFilteredRows: rows,\n    preFilteredFlatRows: flatRows,\n    preFilteredRowsById: rowsById,\n    filteredRows,\n    filteredFlatRows,\n    filteredRowsById,\n    rows: filteredRows,\n    flatRows: filteredFlatRows,\n    rowsById: filteredRowsById,\n    setFilter,\n    setAllFilters,\n  })\n}\n","import React from 'react'\n\nimport {\n  getFilterMethod,\n  shouldAutoRemoveFilter,\n  getFirstDefined,\n} from '../utils'\n\nimport {\n  actions,\n  useMountedLayoutEffect,\n  functionalUpdate,\n  useGetLatest,\n} from '../publicUtils'\n\nimport * as filterTypes from '../filterTypes'\n\n// Actions\nactions.resetGlobalFilter = 'resetGlobalFilter'\nactions.setGlobalFilter = 'setGlobalFilter'\n\nexport const useGlobalFilter = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nuseGlobalFilter.pluginName = 'useGlobalFilter'\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.resetGlobalFilter) {\n    return {\n      ...state,\n      globalFilter: instance.initialState.globalFilter || undefined,\n    }\n  }\n\n  if (action.type === actions.setGlobalFilter) {\n    const { filterValue } = action\n    const { userFilterTypes } = instance\n\n    const filterMethod = getFilterMethod(\n      instance.globalFilter,\n      userFilterTypes || {},\n      filterTypes\n    )\n\n    const newFilter = functionalUpdate(filterValue, state.globalFilter)\n\n    //\n    if (shouldAutoRemoveFilter(filterMethod.autoRemove, newFilter)) {\n      const { globalFilter, ...stateWithoutGlobalFilter } = state\n      return stateWithoutGlobalFilter\n    }\n\n    return {\n      ...state,\n      globalFilter: newFilter,\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    filterTypes: userFilterTypes,\n    globalFilter,\n    manualGlobalFilter,\n    state: { globalFilter: globalFilterValue },\n    dispatch,\n    autoResetGlobalFilter = true,\n    disableGlobalFilter,\n  } = instance\n\n  const setGlobalFilter = React.useCallback(\n    filterValue => {\n      dispatch({ type: actions.setGlobalFilter, filterValue })\n    },\n    [dispatch]\n  )\n\n  // TODO: Create a filter cache for incremental high speed multi-filtering\n  // This gets pretty complicated pretty fast, since you have to maintain a\n  // cache for each row group (top-level rows, and each row's recursive subrows)\n  // This would make multi-filtering a lot faster though. Too far?\n\n  const [\n    globalFilteredRows,\n    globalFilteredFlatRows,\n    globalFilteredRowsById,\n  ] = React.useMemo(() => {\n    if (manualGlobalFilter || typeof globalFilterValue === 'undefined') {\n      return [rows, flatRows, rowsById]\n    }\n\n    const filteredFlatRows = []\n    const filteredRowsById = {}\n\n    const filterMethod = getFilterMethod(\n      globalFilter,\n      userFilterTypes || {},\n      filterTypes\n    )\n\n    if (!filterMethod) {\n      console.warn(`Could not find a valid 'globalFilter' option.`)\n      return rows\n    }\n\n    allColumns.forEach(column => {\n      const { disableGlobalFilter: columnDisableGlobalFilter } = column\n\n      column.canFilter = getFirstDefined(\n        columnDisableGlobalFilter === true ? false : undefined,\n        disableGlobalFilter === true ? false : undefined,\n        true\n      )\n    })\n\n    const filterableColumns = allColumns.filter(c => c.canFilter === true)\n\n    // Filters top level and nested rows\n    const filterRows = filteredRows => {\n      filteredRows = filterMethod(\n        filteredRows,\n        filterableColumns.map(d => d.id),\n        globalFilterValue\n      )\n\n      filteredRows.forEach(row => {\n        filteredFlatRows.push(row)\n        filteredRowsById[row.id] = row\n\n        row.subRows =\n          row.subRows && row.subRows.length\n            ? filterRows(row.subRows)\n            : row.subRows\n      })\n\n      return filteredRows\n    }\n\n    return [filterRows(rows), filteredFlatRows, filteredRowsById]\n  }, [\n    manualGlobalFilter,\n    globalFilterValue,\n    globalFilter,\n    userFilterTypes,\n    allColumns,\n    rows,\n    flatRows,\n    rowsById,\n    disableGlobalFilter,\n  ])\n\n  const getAutoResetGlobalFilter = useGetLatest(autoResetGlobalFilter)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetGlobalFilter()) {\n      dispatch({ type: actions.resetGlobalFilter })\n    }\n  }, [dispatch, manualGlobalFilter ? null : data])\n\n  Object.assign(instance, {\n    preGlobalFilteredRows: rows,\n    preGlobalFilteredFlatRows: flatRows,\n    preGlobalFilteredRowsById: rowsById,\n    globalFilteredRows,\n    globalFilteredFlatRows,\n    globalFilteredRowsById,\n    rows: globalFilteredRows,\n    flatRows: globalFilteredFlatRows,\n    rowsById: globalFilteredRowsById,\n    setGlobalFilter,\n    disableGlobalFilter,\n  })\n}\n","export function sum(values, aggregatedValues) {\n  // It's faster to just add the aggregations together instead of\n  // process leaf nodes individually\n  return aggregatedValues.reduce(\n    (sum, next) => sum + (typeof next === 'number' ? next : 0),\n    0\n  )\n}\n\nexport function min(values) {\n  let min = values[0] || 0\n\n  values.forEach(value => {\n    if (typeof value === 'number') {\n      min = Math.min(min, value)\n    }\n  })\n\n  return min\n}\n\nexport function max(values) {\n  let max = values[0] || 0\n\n  values.forEach(value => {\n    if (typeof value === 'number') {\n      max = Math.max(max, value)\n    }\n  })\n\n  return max\n}\n\nexport function minMax(values) {\n  let min = values[0] || 0\n  let max = values[0] || 0\n\n  values.forEach(value => {\n    if (typeof value === 'number') {\n      min = Math.min(min, value)\n      max = Math.max(max, value)\n    }\n  })\n\n  return `${min}..${max}`\n}\n\nexport function average(values) {\n  return sum(null, values) / values.length\n}\n\nexport function median(values) {\n  if (!values.length) {\n    return null\n  }\n\n  const mid = Math.floor(values.length / 2)\n  const nums = [...values].sort((a, b) => a - b)\n  return values.length % 2 !== 0 ? nums[mid] : (nums[mid - 1] + nums[mid]) / 2\n}\n\nexport function unique(values) {\n  return Array.from(new Set(values).values())\n}\n\nexport function uniqueCount(values) {\n  return new Set(values).size\n}\n\nexport function count(values) {\n  return values.length\n}\n","import React from 'react'\n\nimport * as aggregations from '../aggregations'\n\nimport { getFirstDefined, flattenBy } from '../utils'\n\nimport {\n  actions,\n  makePropGetter,\n  ensurePluginOrder,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nconst emptyArray = []\nconst emptyObject = {}\n\n// Actions\nactions.resetGroupBy = 'resetGroupBy'\nactions.setGroupBy = 'setGroupBy'\nactions.toggleGroupBy = 'toggleGroupBy'\n\nexport const useGroupBy = hooks => {\n  hooks.getGroupByToggleProps = [defaultGetGroupByToggleProps]\n  hooks.stateReducers.push(reducer)\n  hooks.visibleColumnsDeps.push((deps, { instance }) => [\n    ...deps,\n    instance.state.groupBy,\n  ])\n  hooks.visibleColumns.push(visibleColumns)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseGroupBy.pluginName = 'useGroupBy'\n\nconst defaultGetGroupByToggleProps = (props, { header }) => [\n  props,\n  {\n    onClick: header.canGroupBy\n      ? e => {\n          e.persist()\n          header.toggleGroupBy()\n        }\n      : undefined,\n    style: {\n      cursor: header.canGroupBy ? 'pointer' : undefined,\n    },\n    title: 'Toggle GroupBy',\n  },\n]\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      groupBy: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetGroupBy) {\n    return {\n      ...state,\n      groupBy: instance.initialState.groupBy || [],\n    }\n  }\n\n  if (action.type === actions.setGroupBy) {\n    const { value } = action\n    return {\n      ...state,\n      groupBy: value,\n    }\n  }\n\n  if (action.type === actions.toggleGroupBy) {\n    const { columnId, value: setGroupBy } = action\n\n    const resolvedGroupBy =\n      typeof setGroupBy !== 'undefined'\n        ? setGroupBy\n        : !state.groupBy.includes(columnId)\n\n    if (resolvedGroupBy) {\n      return {\n        ...state,\n        groupBy: [...state.groupBy, columnId],\n      }\n    }\n\n    return {\n      ...state,\n      groupBy: state.groupBy.filter(d => d !== columnId),\n    }\n  }\n}\n\nfunction visibleColumns(\n  columns,\n  {\n    instance: {\n      state: { groupBy },\n    },\n  }\n) {\n  // Sort grouped columns to the start of the column list\n  // before the headers are built\n\n  const groupByColumns = groupBy\n    .map(g => columns.find(col => col.id === g))\n    .filter(Boolean)\n\n  const nonGroupByColumns = columns.filter(col => !groupBy.includes(col.id))\n\n  columns = [...groupByColumns, ...nonGroupByColumns]\n\n  columns.forEach(column => {\n    column.isGrouped = groupBy.includes(column.id)\n    column.groupedIndex = groupBy.indexOf(column.id)\n  })\n\n  return columns\n}\n\nconst defaultUserAggregations = {}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    flatHeaders,\n    groupByFn = defaultGroupByFn,\n    manualGroupBy,\n    aggregations: userAggregations = defaultUserAggregations,\n    plugins,\n    state: { groupBy },\n    dispatch,\n    autoResetGroupBy = true,\n    disableGroupBy,\n    defaultCanGroupBy,\n    getHooks,\n  } = instance\n\n  ensurePluginOrder(plugins, ['useColumnOrder', 'useFilters'], 'useGroupBy')\n\n  const getInstance = useGetLatest(instance)\n\n  allColumns.forEach(column => {\n    const {\n      accessor,\n      defaultGroupBy: defaultColumnGroupBy,\n      disableGroupBy: columnDisableGroupBy,\n    } = column\n\n    column.canGroupBy = accessor\n      ? getFirstDefined(\n          column.canGroupBy,\n          columnDisableGroupBy === true ? false : undefined,\n          disableGroupBy === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(\n          column.canGroupBy,\n          defaultColumnGroupBy,\n          defaultCanGroupBy,\n          false\n        )\n\n    if (column.canGroupBy) {\n      column.toggleGroupBy = () => instance.toggleGroupBy(column.id)\n    }\n\n    column.Aggregated = column.Aggregated || column.Cell\n  })\n\n  const toggleGroupBy = React.useCallback(\n    (columnId, value) => {\n      dispatch({ type: actions.toggleGroupBy, columnId, value })\n    },\n    [dispatch]\n  )\n\n  const setGroupBy = React.useCallback(\n    value => {\n      dispatch({ type: actions.setGroupBy, value })\n    },\n    [dispatch]\n  )\n\n  flatHeaders.forEach(header => {\n    header.getGroupByToggleProps = makePropGetter(\n      getHooks().getGroupByToggleProps,\n      { instance: getInstance(), header }\n    )\n  })\n\n  const [\n    groupedRows,\n    groupedFlatRows,\n    groupedRowsById,\n    onlyGroupedFlatRows,\n    onlyGroupedRowsById,\n    nonGroupedFlatRows,\n    nonGroupedRowsById,\n  ] = React.useMemo(() => {\n    if (manualGroupBy || !groupBy.length) {\n      return [\n        rows,\n        flatRows,\n        rowsById,\n        emptyArray,\n        emptyObject,\n        flatRows,\n        rowsById,\n      ]\n    }\n\n    // Ensure that the list of filtered columns exist\n    const existingGroupBy = groupBy.filter(g =>\n      allColumns.find(col => col.id === g)\n    )\n\n    // Find the columns that can or are aggregating\n    // Uses each column to aggregate rows into a single value\n    const aggregateRowsToValues = (leafRows, groupedRows, depth) => {\n      const values = {}\n\n      allColumns.forEach(column => {\n        // Don't aggregate columns that are in the groupBy\n        if (existingGroupBy.includes(column.id)) {\n          values[column.id] = groupedRows[0]\n            ? groupedRows[0].values[column.id]\n            : null\n          return\n        }\n\n        // Aggregate the values\n        let aggregateFn =\n          typeof column.aggregate === 'function'\n            ? column.aggregate\n            : userAggregations[column.aggregate] ||\n              aggregations[column.aggregate]\n\n        if (aggregateFn) {\n          // Get the columnValues to aggregate\n          const groupedValues = groupedRows.map(row => row.values[column.id])\n\n          // Get the columnValues to aggregate\n          const leafValues = leafRows.map(row => {\n            let columnValue = row.values[column.id]\n\n            if (!depth && column.aggregateValue) {\n              const aggregateValueFn =\n                typeof column.aggregateValue === 'function'\n                  ? column.aggregateValue\n                  : userAggregations[column.aggregateValue] ||\n                    aggregations[column.aggregateValue]\n\n              if (!aggregateValueFn) {\n                console.info({ column })\n                throw new Error(\n                  `React Table: Invalid column.aggregateValue option for column listed above`\n                )\n              }\n\n              columnValue = aggregateValueFn(columnValue, row, column)\n            }\n            return columnValue\n          })\n\n          values[column.id] = aggregateFn(leafValues, groupedValues)\n        } else if (column.aggregate) {\n          console.info({ column })\n          throw new Error(\n            `React Table: Invalid column.aggregate option for column listed above`\n          )\n        } else {\n          values[column.id] = null\n        }\n      })\n\n      return values\n    }\n\n    let groupedFlatRows = []\n    const groupedRowsById = {}\n    const onlyGroupedFlatRows = []\n    const onlyGroupedRowsById = {}\n    const nonGroupedFlatRows = []\n    const nonGroupedRowsById = {}\n\n    // Recursively group the data\n    const groupUpRecursively = (rows, depth = 0, parentId) => {\n      // This is the last level, just return the rows\n      if (depth === existingGroupBy.length) {\n        return rows.map((row) => ({ ...row, depth }))\n      }\n\n      const columnId = existingGroupBy[depth]\n\n      // Group the rows together for this level\n      let rowGroupsMap = groupByFn(rows, columnId)\n\n      // Peform aggregations for each group\n      const aggregatedGroupedRows = Object.entries(rowGroupsMap).map(\n        ([groupByVal, groupedRows], index) => {\n          let id = `${columnId}:${groupByVal}`\n          id = parentId ? `${parentId}>${id}` : id\n\n          // First, Recurse to group sub rows before aggregation\n          const subRows = groupUpRecursively(groupedRows, depth + 1, id)\n\n          // Flatten the leaf rows of the rows in this group\n          const leafRows = depth\n            ? flattenBy(groupedRows, 'leafRows')\n            : groupedRows\n\n          const values = aggregateRowsToValues(leafRows, groupedRows, depth)\n\n          const row = {\n            id,\n            isGrouped: true,\n            groupByID: columnId,\n            groupByVal,\n            values,\n            subRows,\n            leafRows,\n            depth,\n            index,\n          }\n\n          subRows.forEach(subRow => {\n            groupedFlatRows.push(subRow)\n            groupedRowsById[subRow.id] = subRow\n            if (subRow.isGrouped) {\n              onlyGroupedFlatRows.push(subRow)\n              onlyGroupedRowsById[subRow.id] = subRow\n            } else {\n              nonGroupedFlatRows.push(subRow)\n              nonGroupedRowsById[subRow.id] = subRow\n            }\n          })\n\n          return row\n        }\n      )\n\n      return aggregatedGroupedRows\n    }\n\n    const groupedRows = groupUpRecursively(rows)\n\n    groupedRows.forEach(subRow => {\n      groupedFlatRows.push(subRow)\n      groupedRowsById[subRow.id] = subRow\n      if (subRow.isGrouped) {\n        onlyGroupedFlatRows.push(subRow)\n        onlyGroupedRowsById[subRow.id] = subRow\n      } else {\n        nonGroupedFlatRows.push(subRow)\n        nonGroupedRowsById[subRow.id] = subRow\n      }\n    })\n\n    // Assign the new data\n    return [\n      groupedRows,\n      groupedFlatRows,\n      groupedRowsById,\n      onlyGroupedFlatRows,\n      onlyGroupedRowsById,\n      nonGroupedFlatRows,\n      nonGroupedRowsById,\n    ]\n  }, [\n    manualGroupBy,\n    groupBy,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    userAggregations,\n    groupByFn,\n  ])\n\n  const getAutoResetGroupBy = useGetLatest(autoResetGroupBy)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetGroupBy()) {\n      dispatch({ type: actions.resetGroupBy })\n    }\n  }, [dispatch, manualGroupBy ? null : data])\n\n  Object.assign(instance, {\n    preGroupedRows: rows,\n    preGroupedFlatRow: flatRows,\n    preGroupedRowsById: rowsById,\n    groupedRows,\n    groupedFlatRows,\n    groupedRowsById,\n    onlyGroupedFlatRows,\n    onlyGroupedRowsById,\n    nonGroupedFlatRows,\n    nonGroupedRowsById,\n    rows: groupedRows,\n    flatRows: groupedFlatRows,\n    rowsById: groupedRowsById,\n    toggleGroupBy,\n    setGroupBy,\n  })\n}\n\nfunction prepareRow(row) {\n  row.allCells.forEach(cell => {\n    // Grouped cells are in the groupBy and the pivot cell for the row\n    cell.isGrouped = cell.column.isGrouped && cell.column.id === row.groupByID\n    // Placeholder cells are any columns in the groupBy that are not grouped\n    cell.isPlaceholder = !cell.isGrouped && cell.column.isGrouped\n    // Aggregated cells are not grouped, not repeated, but still have subRows\n    cell.isAggregated =\n      !cell.isGrouped && !cell.isPlaceholder && row.subRows?.length\n  })\n}\n\nexport function defaultGroupByFn(rows, columnId) {\n  return rows.reduce((prev, row, i) => {\n    // TODO: Might want to implement a key serializer here so\n    // irregular column values can still be grouped if needed?\n    const resKey = `${row.values[columnId]}`\n    prev[resKey] = Array.isArray(prev[resKey]) ? prev[resKey] : []\n    prev[resKey].push(row)\n    return prev\n  }, {})\n}\n","const reSplitAlphaNumeric = /([0-9]+)/gm\n\n// Mixed sorting is slow, but very inclusive of many edge cases.\n// It handles numbers, mixed alphanumeric combinations, and even\n// null, undefined, and Infinity\nexport const alphanumeric = (rowA, rowB, columnId) => {\n  let [a, b] = getRowValuesByColumnID(rowA, rowB, columnId)\n\n  // Force to strings (or \"\" for unsupported types)\n  a = toString(a)\n  b = toString(b)\n\n  // Split on number groups, but keep the delimiter\n  // Then remove falsey split values\n  a = a.split(reSplitAlphaNumeric).filter(Boolean)\n  b = b.split(reSplitAlphaNumeric).filter(Boolean)\n\n  // While\n  while (a.length && b.length) {\n    let aa = a.shift()\n    let bb = b.shift()\n\n    const an = parseInt(aa, 10)\n    const bn = parseInt(bb, 10)\n\n    const combo = [an, bn].sort()\n\n    // Both are string\n    if (isNaN(combo[0])) {\n      if (aa > bb) {\n        return 1\n      }\n      if (bb > aa) {\n        return -1\n      }\n      continue\n    }\n\n    // One is a string, one is a number\n    if (isNaN(combo[1])) {\n      return isNaN(an) ? -1 : 1\n    }\n\n    // Both are numbers\n    if (an > bn) {\n      return 1\n    }\n    if (bn > an) {\n      return -1\n    }\n  }\n\n  return a.length - b.length\n}\nexport function datetime(rowA, rowB, columnId) {\n  let [a, b] = getRowValuesByColumnID(rowA, rowB, columnId)\n\n  a = a.getTime()\n  b = b.getTime()\n\n  return compareBasic(a, b)\n}\n\nexport function basic(rowA, rowB, columnId) {\n  let [a, b] = getRowValuesByColumnID(rowA, rowB, columnId)\n\n  return compareBasic(a, b)\n}\n\nexport function string(rowA, rowB, columnId) {\n  let [a, b] = getRowValuesByColumnID(rowA, rowB, columnId)\n\n  a = a.split('').filter(Boolean)\n  b = b.split('').filter(Boolean)\n\n  while (a.length && b.length) {\n    let aa = a.shift()\n    let bb = b.shift()\n\n    let alower = aa.toLowerCase()\n    let blower = bb.toLowerCase()\n\n    // Case insensitive comparison until characters match\n    if (alower > blower) {\n      return 1\n    }\n    if (blower > alower) {\n      return -1\n    }\n    // If lowercase characters are identical\n    if (aa > bb) {\n      return 1\n    }\n    if (bb > aa) {\n      return -1\n    }\n    continue\n  }\n\n  return a.length - b.length\n}\n\nexport function number(rowA, rowB, columnId) {\n  let [a, b] = getRowValuesByColumnID(rowA, rowB, columnId)\n\n  const replaceNonNumeric = /[^0-9.]/gi\n\n  a = Number(String(a).replace(replaceNonNumeric, ''))\n  b = Number(String(b).replace(replaceNonNumeric, ''))\n\n  return compareBasic(a, b)\n}\n\n// Utils\n\nfunction compareBasic(a, b) {\n  return a === b ? 0 : a > b ? 1 : -1\n}\n\nfunction getRowValuesByColumnID(row1, row2, columnId) {\n  return [row1.values[columnId], row2.values[columnId]]\n}\n\nfunction toString(a) {\n  if (typeof a === 'number') {\n    if (isNaN(a) || a === Infinity || a === -Infinity) {\n      return ''\n    }\n    return String(a)\n  }\n  if (typeof a === 'string') {\n    return a\n  }\n  return ''\n}\n","import React from 'react'\n\nimport {\n  actions,\n  ensurePluginOrder,\n  defaultColumn,\n  makePropGetter,\n  useGetLatest,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nimport { getFirstDefined, isFunction } from '../utils'\n\nimport * as sortTypes from '../sortTypes'\n\n// Actions\nactions.resetSortBy = 'resetSortBy'\nactions.setSortBy = 'setSortBy'\nactions.toggleSortBy = 'toggleSortBy'\nactions.clearSortBy = 'clearSortBy'\n\ndefaultColumn.sortType = 'alphanumeric'\ndefaultColumn.sortDescFirst = false\n\nexport const useSortBy = hooks => {\n  hooks.getSortByToggleProps = [defaultGetSortByToggleProps]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nuseSortBy.pluginName = 'useSortBy'\n\nconst defaultGetSortByToggleProps = (props, { instance, column }) => {\n  const { isMultiSortEvent = e => e.shiftKey } = instance\n\n  return [\n    props,\n    {\n      onClick: column.canSort\n        ? e => {\n            e.persist()\n            column.toggleSortBy(\n              undefined,\n              !instance.disableMultiSort && isMultiSortEvent(e)\n            )\n          }\n        : undefined,\n      style: {\n        cursor: column.canSort ? 'pointer' : undefined,\n      },\n      title: column.canSort ? 'Toggle SortBy' : undefined,\n    },\n  ]\n}\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      sortBy: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetSortBy) {\n    return {\n      ...state,\n      sortBy: instance.initialState.sortBy || [],\n    }\n  }\n\n  if (action.type === actions.clearSortBy) {\n    const { sortBy } = state\n    const newSortBy = sortBy.filter(d => d.id !== action.columnId)\n\n    return {\n      ...state,\n      sortBy: newSortBy,\n    }\n  }\n\n  if (action.type === actions.setSortBy) {\n    const { sortBy } = action\n    return {\n      ...state,\n      sortBy,\n    }\n  }\n\n  if (action.type === actions.toggleSortBy) {\n    const { columnId, desc, multi } = action\n\n    const {\n      allColumns,\n      disableMultiSort,\n      disableSortRemove,\n      disableMultiRemove,\n      maxMultiSortColCount = Number.MAX_SAFE_INTEGER,\n    } = instance\n\n    const { sortBy } = state\n\n    // Find the column for this columnId\n    const column = allColumns.find(d => d.id === columnId)\n    const { sortDescFirst } = column\n\n    // Find any existing sortBy for this column\n    const existingSortBy = sortBy.find(d => d.id === columnId)\n    const existingIndex = sortBy.findIndex(d => d.id === columnId)\n    const hasDescDefined = typeof desc !== 'undefined' && desc !== null\n\n    let newSortBy = []\n\n    // What should we do with this sort action?\n    let sortAction\n\n    if (!disableMultiSort && multi) {\n      if (existingSortBy) {\n        sortAction = 'toggle'\n      } else {\n        sortAction = 'add'\n      }\n    } else {\n      // Normal mode\n      if (existingIndex !== sortBy.length - 1 || sortBy.length !== 1) {\n        sortAction = 'replace'\n      } else if (existingSortBy) {\n        sortAction = 'toggle'\n      } else {\n        sortAction = 'replace'\n      }\n    }\n\n    // Handle toggle states that will remove the sortBy\n    if (\n      sortAction === 'toggle' && // Must be toggling\n      !disableSortRemove && // If disableSortRemove, disable in general\n      !hasDescDefined && // Must not be setting desc\n      (multi ? !disableMultiRemove : true) && // If multi, don't allow if disableMultiRemove\n      ((existingSortBy && // Finally, detect if it should indeed be removed\n        existingSortBy.desc &&\n        !sortDescFirst) ||\n        (!existingSortBy.desc && sortDescFirst))\n    ) {\n      sortAction = 'remove'\n    }\n\n    if (sortAction === 'replace') {\n      newSortBy = [\n        {\n          id: columnId,\n          desc: hasDescDefined ? desc : sortDescFirst,\n        },\n      ]\n    } else if (sortAction === 'add') {\n      newSortBy = [\n        ...sortBy,\n        {\n          id: columnId,\n          desc: hasDescDefined ? desc : sortDescFirst,\n        },\n      ]\n      // Take latest n columns\n      newSortBy.splice(0, newSortBy.length - maxMultiSortColCount)\n    } else if (sortAction === 'toggle') {\n      // This flips (or sets) the\n      newSortBy = sortBy.map(d => {\n        if (d.id === columnId) {\n          return {\n            ...d,\n            desc: hasDescDefined ? desc : !existingSortBy.desc,\n          }\n        }\n        return d\n      })\n    } else if (sortAction === 'remove') {\n      newSortBy = sortBy.filter(d => d.id !== columnId)\n    }\n\n    return {\n      ...state,\n      sortBy: newSortBy,\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    allColumns,\n    orderByFn = defaultOrderByFn,\n    sortTypes: userSortTypes,\n    manualSortBy,\n    defaultCanSort,\n    disableSortBy,\n    flatHeaders,\n    state: { sortBy },\n    dispatch,\n    plugins,\n    getHooks,\n    autoResetSortBy = true,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useFilters', 'useGlobalFilter', 'useGroupBy', 'usePivotColumns'],\n    'useSortBy'\n  )\n\n  const setSortBy = React.useCallback(\n    sortBy => {\n      dispatch({ type: actions.setSortBy, sortBy })\n    },\n    [dispatch]\n  )\n\n  // Updates sorting based on a columnId, desc flag and multi flag\n  const toggleSortBy = React.useCallback(\n    (columnId, desc, multi) => {\n      dispatch({ type: actions.toggleSortBy, columnId, desc, multi })\n    },\n    [dispatch]\n  )\n\n  // use reference to avoid memory leak in #1608\n  const getInstance = useGetLatest(instance)\n\n  // Add the getSortByToggleProps method to columns and headers\n  flatHeaders.forEach(column => {\n    const {\n      accessor,\n      canSort: defaultColumnCanSort,\n      disableSortBy: columnDisableSortBy,\n      id,\n    } = column\n\n    const canSort = accessor\n      ? getFirstDefined(\n          columnDisableSortBy === true ? false : undefined,\n          disableSortBy === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(defaultCanSort, defaultColumnCanSort, false)\n\n    column.canSort = canSort\n\n    if (column.canSort) {\n      column.toggleSortBy = (desc, multi) =>\n        toggleSortBy(column.id, desc, multi)\n\n      column.clearSortBy = () => {\n        dispatch({ type: actions.clearSortBy, columnId: column.id })\n      }\n    }\n\n    column.getSortByToggleProps = makePropGetter(\n      getHooks().getSortByToggleProps,\n      {\n        instance: getInstance(),\n        column,\n      }\n    )\n\n    const columnSort = sortBy.find(d => d.id === id)\n    column.isSorted = !!columnSort\n    column.sortedIndex = sortBy.findIndex(d => d.id === id)\n    column.isSortedDesc = column.isSorted ? columnSort.desc : undefined\n  })\n\n  const [sortedRows, sortedFlatRows] = React.useMemo(() => {\n    if (manualSortBy || !sortBy.length) {\n      return [rows, flatRows]\n    }\n\n    const sortedFlatRows = []\n\n    // Filter out sortBys that correspond to non existing columns\n    const availableSortBy = sortBy.filter(sort =>\n      allColumns.find(col => col.id === sort.id)\n    )\n\n    const sortData = rows => {\n      // Use the orderByFn to compose multiple sortBy's together.\n      // This will also perform a stable sorting using the row index\n      // if needed.\n      const sortedData = orderByFn(\n        rows,\n        availableSortBy.map(sort => {\n          // Support custom sorting methods for each column\n          const column = allColumns.find(d => d.id === sort.id)\n\n          if (!column) {\n            throw new Error(\n              `React-Table: Could not find a column with id: ${sort.id} while sorting`\n            )\n          }\n\n          const { sortType } = column\n\n          // Look up sortBy functions in this order:\n          // column function\n          // column string lookup on user sortType\n          // column string lookup on built-in sortType\n          // default function\n          // default string lookup on user sortType\n          // default string lookup on built-in sortType\n          const sortMethod =\n            isFunction(sortType) ||\n            (userSortTypes || {})[sortType] ||\n            sortTypes[sortType]\n\n          if (!sortMethod) {\n            throw new Error(\n              `React-Table: Could not find a valid sortType of '${sortType}' for column '${sort.id}'.`\n            )\n          }\n\n          // Return the correct sortFn.\n          // This function should always return in ascending order\n          return (a, b) => sortMethod(a, b, sort.id, sort.desc)\n        }),\n        // Map the directions\n        availableSortBy.map(sort => {\n          // Detect and use the sortInverted option\n          const column = allColumns.find(d => d.id === sort.id)\n\n          if (column && column.sortInverted) {\n            return sort.desc\n          }\n\n          return !sort.desc\n        })\n      )\n\n      // If there are sub-rows, sort them\n      sortedData.forEach(row => {\n        sortedFlatRows.push(row)\n        if (!row.subRows || row.subRows.length === 0) {\n          return\n        }\n        row.subRows = sortData(row.subRows)\n      })\n\n      return sortedData\n    }\n\n    return [sortData(rows), sortedFlatRows]\n  }, [\n    manualSortBy,\n    sortBy,\n    rows,\n    flatRows,\n    allColumns,\n    orderByFn,\n    userSortTypes,\n  ])\n\n  const getAutoResetSortBy = useGetLatest(autoResetSortBy)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetSortBy()) {\n      dispatch({ type: actions.resetSortBy })\n    }\n  }, [manualSortBy ? null : data])\n\n  Object.assign(instance, {\n    preSortedRows: rows,\n    preSortedFlatRows: flatRows,\n    sortedRows,\n    sortedFlatRows,\n    rows: sortedRows,\n    flatRows: sortedFlatRows,\n    setSortBy,\n    toggleSortBy,\n  })\n}\n\nexport function defaultOrderByFn(arr, funcs, dirs) {\n  return [...arr].sort((rowA, rowB) => {\n    for (let i = 0; i < funcs.length; i += 1) {\n      const sortFn = funcs[i]\n      const desc = dirs[i] === false || dirs[i] === 'desc'\n      const sortInt = sortFn(rowA, rowB)\n      if (sortInt !== 0) {\n        return desc ? -sortInt : sortInt\n      }\n    }\n    return dirs[0] ? rowA.index - rowB.index : rowB.index - rowA.index\n  })\n}\n","import React from 'react'\n\n//\n\nimport {\n  actions,\n  ensurePluginOrder,\n  functionalUpdate,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nimport { expandRows } from '../utils'\n\nconst pluginName = 'usePagination'\n\n// Actions\nactions.resetPage = 'resetPage'\nactions.gotoPage = 'gotoPage'\nactions.setPageSize = 'setPageSize'\n\nexport const usePagination = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nusePagination.pluginName = pluginName\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      pageSize: 10,\n      pageIndex: 0,\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetPage) {\n    return {\n      ...state,\n      pageIndex: instance.initialState.pageIndex || 0,\n    }\n  }\n\n  if (action.type === actions.gotoPage) {\n    const { pageCount, page } = instance\n    const newPageIndex = functionalUpdate(action.pageIndex, state.pageIndex)\n    let canNavigate = false\n\n    if (newPageIndex > state.pageIndex) {\n      // next page\n      canNavigate =\n        pageCount === -1\n          ? page.length >= state.pageSize\n          : newPageIndex < pageCount\n    } else if (newPageIndex < state.pageIndex) {\n      // prev page\n      canNavigate = newPageIndex > -1\n    }\n\n    if (!canNavigate) {\n      return state\n    }\n\n    return {\n      ...state,\n      pageIndex: newPageIndex,\n    }\n  }\n\n  if (action.type === actions.setPageSize) {\n    const { pageSize } = action\n    const topRowIndex = state.pageSize * state.pageIndex\n    const pageIndex = Math.floor(topRowIndex / pageSize)\n\n    return {\n      ...state,\n      pageIndex,\n      pageSize,\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    rows,\n    autoResetPage = true,\n    manualExpandedKey = 'expanded',\n    plugins,\n    pageCount: userPageCount,\n    paginateExpandedRows = true,\n    expandSubRows = true,\n    state: {\n      pageSize,\n      pageIndex,\n      expanded,\n      globalFilter,\n      filters,\n      groupBy,\n      sortBy,\n    },\n    dispatch,\n    data,\n    manualPagination,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useGlobalFilter', 'useFilters', 'useGroupBy', 'useSortBy', 'useExpanded'],\n    'usePagination'\n  )\n\n  const getAutoResetPage = useGetLatest(autoResetPage)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetPage()) {\n      dispatch({ type: actions.resetPage })\n    }\n  }, [\n    dispatch,\n    manualPagination ? null : data,\n    globalFilter,\n    filters,\n    groupBy,\n    sortBy,\n  ])\n\n  const pageCount = manualPagination\n    ? userPageCount\n    : Math.ceil(rows.length / pageSize)\n\n  const pageOptions = React.useMemo(\n    () =>\n      pageCount > 0\n        ? [...new Array(pageCount)].fill(null).map((d, i) => i)\n        : [],\n    [pageCount]\n  )\n\n  const page = React.useMemo(() => {\n    let page\n\n    if (manualPagination) {\n      page = rows\n    } else {\n      const pageStart = pageSize * pageIndex\n      const pageEnd = pageStart + pageSize\n\n      page = rows.slice(pageStart, pageEnd)\n    }\n\n    if (paginateExpandedRows) {\n      return page\n    }\n\n    return expandRows(page, { manualExpandedKey, expanded, expandSubRows })\n  }, [\n    expandSubRows,\n    expanded,\n    manualExpandedKey,\n    manualPagination,\n    pageIndex,\n    pageSize,\n    paginateExpandedRows,\n    rows,\n  ])\n\n  const canPreviousPage = pageIndex > 0\n  const canNextPage =\n    pageCount === -1 ? page.length >= pageSize : pageIndex < pageCount - 1\n\n  const gotoPage = React.useCallback(\n    pageIndex => {\n      dispatch({ type: actions.gotoPage, pageIndex })\n    },\n    [dispatch]\n  )\n\n  const previousPage = React.useCallback(() => {\n    return gotoPage(old => old - 1)\n  }, [gotoPage])\n\n  const nextPage = React.useCallback(() => {\n    return gotoPage(old => old + 1)\n  }, [gotoPage])\n\n  const setPageSize = React.useCallback(\n    pageSize => {\n      dispatch({ type: actions.setPageSize, pageSize })\n    },\n    [dispatch]\n  )\n\n  Object.assign(instance, {\n    pageOptions,\n    pageCount,\n    page,\n    canPreviousPage,\n    canNextPage,\n    gotoPage,\n    previousPage,\n    nextPage,\n    setPageSize,\n  })\n}\n","/* istanbul ignore file */\n\nimport {\n  actions,\n  makePropGetter,\n  ensurePluginOrder,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nimport { flattenColumns, getFirstDefined } from '../utils'\n\n// Actions\nactions.resetPivot = 'resetPivot'\nactions.togglePivot = 'togglePivot'\n\nexport const _UNSTABLE_usePivotColumns = hooks => {\n  hooks.getPivotToggleProps = [defaultGetPivotToggleProps]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstanceAfterData.push(useInstanceAfterData)\n  hooks.allColumns.push(allColumns)\n  hooks.accessValue.push(accessValue)\n  hooks.materializedColumns.push(materializedColumns)\n  hooks.materializedColumnsDeps.push(materializedColumnsDeps)\n  hooks.visibleColumns.push(visibleColumns)\n  hooks.visibleColumnsDeps.push(visibleColumnsDeps)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\n_UNSTABLE_usePivotColumns.pluginName = 'usePivotColumns'\n\nconst defaultPivotColumns = []\n\nconst defaultGetPivotToggleProps = (props, { header }) => [\n  props,\n  {\n    onClick: header.canPivot\n      ? e => {\n          e.persist()\n          header.togglePivot()\n        }\n      : undefined,\n    style: {\n      cursor: header.canPivot ? 'pointer' : undefined,\n    },\n    title: 'Toggle Pivot',\n  },\n]\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      pivotColumns: defaultPivotColumns,\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetPivot) {\n    return {\n      ...state,\n      pivotColumns: instance.initialState.pivotColumns || defaultPivotColumns,\n    }\n  }\n\n  if (action.type === actions.togglePivot) {\n    const { columnId, value: setPivot } = action\n\n    const resolvedPivot =\n      typeof setPivot !== 'undefined'\n        ? setPivot\n        : !state.pivotColumns.includes(columnId)\n\n    if (resolvedPivot) {\n      return {\n        ...state,\n        pivotColumns: [...state.pivotColumns, columnId],\n      }\n    }\n\n    return {\n      ...state,\n      pivotColumns: state.pivotColumns.filter(d => d !== columnId),\n    }\n  }\n}\n\nfunction useInstanceAfterData(instance) {\n  instance.allColumns.forEach(column => {\n    column.isPivotSource = instance.state.pivotColumns.includes(column.id)\n  })\n}\n\nfunction allColumns(columns, { instance }) {\n  columns.forEach(column => {\n    column.isPivotSource = instance.state.pivotColumns.includes(column.id)\n    column.uniqueValues = new Set()\n  })\n  return columns\n}\n\nfunction accessValue(value, { column }) {\n  if (column.uniqueValues && typeof value !== 'undefined') {\n    column.uniqueValues.add(value)\n  }\n  return value\n}\n\nfunction materializedColumns(materialized, { instance }) {\n  const { allColumns, state } = instance\n\n  if (!state.pivotColumns.length || !state.groupBy || !state.groupBy.length) {\n    return materialized\n  }\n\n  const pivotColumns = state.pivotColumns\n    .map(id => allColumns.find(d => d.id === id))\n    .filter(Boolean)\n\n  const sourceColumns = allColumns.filter(\n    d =>\n      !d.isPivotSource &&\n      !state.groupBy.includes(d.id) &&\n      !state.pivotColumns.includes(d.id)\n  )\n\n  const buildPivotColumns = (depth = 0, parent, pivotFilters = []) => {\n    const pivotColumn = pivotColumns[depth]\n\n    if (!pivotColumn) {\n      return sourceColumns.map(sourceColumn => {\n        // TODO: We could offer support here for renesting pivoted\n        // columns inside copies of their header groups. For now,\n        // that seems like it would be (1) overkill on nesting, considering\n        // you already get nesting for every pivot level and (2)\n        // really hard. :)\n\n        return {\n          ...sourceColumn,\n          canPivot: false,\n          isPivoted: true,\n          parent,\n          depth: depth,\n          id: `${parent ? `${parent.id}.${sourceColumn.id}` : sourceColumn.id}`,\n          accessor: (originalRow, i, row) => {\n            if (pivotFilters.every(filter => filter(row))) {\n              return row.values[sourceColumn.id]\n            }\n          },\n        }\n      })\n    }\n\n    const uniqueValues = Array.from(pivotColumn.uniqueValues).sort()\n\n    return uniqueValues.map(uniqueValue => {\n      const columnGroup = {\n        ...pivotColumn,\n        Header:\n          pivotColumn.PivotHeader || typeof pivotColumn.header === 'string'\n            ? `${pivotColumn.Header}: ${uniqueValue}`\n            : uniqueValue,\n        isPivotGroup: true,\n        parent,\n        depth,\n        id: parent\n          ? `${parent.id}.${pivotColumn.id}.${uniqueValue}`\n          : `${pivotColumn.id}.${uniqueValue}`,\n        pivotValue: uniqueValue,\n      }\n\n      columnGroup.columns = buildPivotColumns(depth + 1, columnGroup, [\n        ...pivotFilters,\n        row => row.values[pivotColumn.id] === uniqueValue,\n      ])\n\n      return columnGroup\n    })\n  }\n\n  const newMaterialized = flattenColumns(buildPivotColumns())\n\n  return [...materialized, ...newMaterialized]\n}\n\nfunction materializedColumnsDeps(\n  deps,\n  {\n    instance: {\n      state: { pivotColumns, groupBy },\n    },\n  }\n) {\n  return [...deps, pivotColumns, groupBy]\n}\n\nfunction visibleColumns(visibleColumns, { instance: { state } }) {\n  visibleColumns = visibleColumns.filter(d => !d.isPivotSource)\n\n  if (state.pivotColumns.length && state.groupBy && state.groupBy.length) {\n    visibleColumns = visibleColumns.filter(\n      column => column.isGrouped || column.isPivoted\n    )\n  }\n\n  return visibleColumns\n}\n\nfunction visibleColumnsDeps(deps, { instance }) {\n  return [...deps, instance.state.pivotColumns, instance.state.groupBy]\n}\n\nfunction useInstance(instance) {\n  const {\n    columns,\n    allColumns,\n    flatHeaders,\n    // pivotFn = defaultPivotFn,\n    // manualPivot,\n    getHooks,\n    plugins,\n    dispatch,\n    autoResetPivot = true,\n    manaulPivot,\n    disablePivot,\n    defaultCanPivot,\n  } = instance\n\n  ensurePluginOrder(plugins, ['useGroupBy'], 'usePivotColumns')\n\n  const getInstance = useGetLatest(instance)\n\n  allColumns.forEach(column => {\n    const {\n      accessor,\n      defaultPivot: defaultColumnPivot,\n      disablePivot: columnDisablePivot,\n    } = column\n\n    column.canPivot = accessor\n      ? getFirstDefined(\n          column.canPivot,\n          columnDisablePivot === true ? false : undefined,\n          disablePivot === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(\n          column.canPivot,\n          defaultColumnPivot,\n          defaultCanPivot,\n          false\n        )\n\n    if (column.canPivot) {\n      column.togglePivot = () => instance.togglePivot(column.id)\n    }\n\n    column.Aggregated = column.Aggregated || column.Cell\n  })\n\n  const togglePivot = (columnId, value) => {\n    dispatch({ type: actions.togglePivot, columnId, value })\n  }\n\n  flatHeaders.forEach(header => {\n    header.getPivotToggleProps = makePropGetter(\n      getHooks().getPivotToggleProps,\n      {\n        instance: getInstance(),\n        header,\n      }\n    )\n  })\n\n  const getAutoResetPivot = useGetLatest(autoResetPivot)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetPivot()) {\n      dispatch({ type: actions.resetPivot })\n    }\n  }, [dispatch, manaulPivot ? null : columns])\n\n  Object.assign(instance, {\n    togglePivot,\n  })\n}\n\nfunction prepareRow(row) {\n  row.allCells.forEach(cell => {\n    // Grouped cells are in the pivotColumns and the pivot cell for the row\n    cell.isPivoted = cell.column.isPivoted\n  })\n}\n","import React from 'react'\n\nimport {\n  actions,\n  makePropGetter,\n  ensurePluginOrder,\n  useGetLatest,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nconst pluginName = 'useRowSelect'\n\n// Actions\nactions.resetSelectedRows = 'resetSelectedRows'\nactions.toggleAllRowsSelected = 'toggleAllRowsSelected'\nactions.toggleRowSelected = 'toggleRowSelected'\nactions.toggleAllPageRowsSelected = 'toggleAllPageRowsSelected'\n\nexport const useRowSelect = hooks => {\n  hooks.getToggleRowSelectedProps = [defaultGetToggleRowSelectedProps]\n  hooks.getToggleAllRowsSelectedProps = [defaultGetToggleAllRowsSelectedProps]\n  hooks.getToggleAllPageRowsSelectedProps = [\n    defaultGetToggleAllPageRowsSelectedProps,\n  ]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseRowSelect.pluginName = pluginName\n\nconst defaultGetToggleRowSelectedProps = (props, { instance, row }) => {\n  const { manualRowSelectedKey = 'isSelected' } = instance\n  let checked = false\n\n  if (row.original && row.original[manualRowSelectedKey]) {\n    checked = true\n  } else {\n    checked = row.isSelected\n  }\n\n  return [\n    props,\n    {\n      onChange: e => {\n        row.toggleRowSelected(e.target.checked)\n      },\n      style: {\n        cursor: 'pointer',\n      },\n      checked,\n      title: 'Toggle Row Selected',\n      indeterminate: row.isSomeSelected,\n    },\n  ]\n}\n\nconst defaultGetToggleAllRowsSelectedProps = (props, { instance }) => [\n  props,\n  {\n    onChange: e => {\n      instance.toggleAllRowsSelected(e.target.checked)\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    checked: instance.isAllRowsSelected,\n    title: 'Toggle All Rows Selected',\n    indeterminate: Boolean(\n      !instance.isAllRowsSelected &&\n        Object.keys(instance.state.selectedRowIds).length\n    ),\n  },\n]\n\nconst defaultGetToggleAllPageRowsSelectedProps = (props, { instance }) => [\n  props,\n  {\n    onChange(e) {\n      instance.toggleAllPageRowsSelected(e.target.checked)\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    checked: instance.isAllPageRowsSelected,\n    title: 'Toggle All Current Page Rows Selected',\n    indeterminate: Boolean(\n      !instance.isAllPageRowsSelected &&\n        instance.page.some(({ id }) => instance.state.selectedRowIds[id])\n    ),\n  },\n]\n\n// eslint-disable-next-line max-params\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      selectedRowIds: {},\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetSelectedRows) {\n    return {\n      ...state,\n      selectedRowIds: instance.initialState.selectedRowIds || {},\n    }\n  }\n\n  if (action.type === actions.toggleAllRowsSelected) {\n    const { value: setSelected } = action\n    const {\n      isAllRowsSelected,\n      rowsById,\n      nonGroupedRowsById = rowsById,\n    } = instance\n\n    const selectAll =\n      typeof setSelected !== 'undefined' ? setSelected : !isAllRowsSelected\n\n    // Only remove/add the rows that are visible on the screen\n    //  Leave all the other rows that are selected alone.\n    const selectedRowIds = Object.assign({}, state.selectedRowIds)\n\n    if (selectAll) {\n      Object.keys(nonGroupedRowsById).forEach(rowId => {\n        selectedRowIds[rowId] = true\n      })\n    } else {\n      Object.keys(nonGroupedRowsById).forEach(rowId => {\n        delete selectedRowIds[rowId]\n      })\n    }\n\n    return {\n      ...state,\n      selectedRowIds,\n    }\n  }\n\n  if (action.type === actions.toggleRowSelected) {\n    const { id, value: setSelected } = action\n    const { rowsById, selectSubRows = true, getSubRows } = instance\n    const isSelected = state.selectedRowIds[id]\n    const shouldExist =\n      typeof setSelected !== 'undefined' ? setSelected : !isSelected\n\n    if (isSelected === shouldExist) {\n      return state\n    }\n\n    const newSelectedRowIds = { ...state.selectedRowIds }\n\n    const handleRowById = id => {\n      const row = rowsById[id]\n\n      if (row) {\n        if (!row.isGrouped) {\n          if (shouldExist) {\n            newSelectedRowIds[id] = true\n          } else {\n            delete newSelectedRowIds[id]\n          }\n        }\n\n        if (selectSubRows && getSubRows(row)) {\n          return getSubRows(row).forEach(row => handleRowById(row.id))\n        }\n      }\n    }\n\n    handleRowById(id)\n\n    return {\n      ...state,\n      selectedRowIds: newSelectedRowIds,\n    }\n  }\n\n  if (action.type === actions.toggleAllPageRowsSelected) {\n    const { value: setSelected } = action\n    const {\n      page,\n      rowsById,\n      selectSubRows = true,\n      isAllPageRowsSelected,\n      getSubRows,\n    } = instance\n\n    const selectAll =\n      typeof setSelected !== 'undefined' ? setSelected : !isAllPageRowsSelected\n\n    const newSelectedRowIds = { ...state.selectedRowIds }\n\n    const handleRowById = id => {\n      const row = rowsById[id]\n\n      if (!row.isGrouped) {\n        if (selectAll) {\n          newSelectedRowIds[id] = true\n        } else {\n          delete newSelectedRowIds[id]\n        }\n      }\n\n      if (selectSubRows && getSubRows(row)) {\n        return getSubRows(row).forEach(row => handleRowById(row.id))\n      }\n    }\n\n    page.forEach(row => handleRowById(row.id))\n\n    return {\n      ...state,\n      selectedRowIds: newSelectedRowIds,\n    }\n  }\n  return state\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    getHooks,\n    plugins,\n    rowsById,\n    nonGroupedRowsById = rowsById,\n    autoResetSelectedRows = true,\n    state: { selectedRowIds },\n    selectSubRows = true,\n    dispatch,\n    page,\n    getSubRows,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useFilters', 'useGroupBy', 'useSortBy', 'useExpanded', 'usePagination'],\n    'useRowSelect'\n  )\n\n  const selectedFlatRows = React.useMemo(() => {\n    const selectedFlatRows = []\n\n    rows.forEach(row => {\n      const isSelected = selectSubRows\n        ? getRowIsSelected(row, selectedRowIds, getSubRows)\n        : !!selectedRowIds[row.id]\n      row.isSelected = !!isSelected\n      row.isSomeSelected = isSelected === null\n\n      if (isSelected) {\n        selectedFlatRows.push(row)\n      }\n    })\n\n    return selectedFlatRows\n  }, [rows, selectSubRows, selectedRowIds, getSubRows])\n\n  let isAllRowsSelected = Boolean(\n    Object.keys(nonGroupedRowsById).length && Object.keys(selectedRowIds).length\n  )\n\n  let isAllPageRowsSelected = isAllRowsSelected\n\n  if (isAllRowsSelected) {\n    if (Object.keys(nonGroupedRowsById).some(id => !selectedRowIds[id])) {\n      isAllRowsSelected = false\n    }\n  }\n\n  if (!isAllRowsSelected) {\n    if (page && page.length && page.some(({ id }) => !selectedRowIds[id])) {\n      isAllPageRowsSelected = false\n    }\n  }\n\n  const getAutoResetSelectedRows = useGetLatest(autoResetSelectedRows)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetSelectedRows()) {\n      dispatch({ type: actions.resetSelectedRows })\n    }\n  }, [dispatch, data])\n\n  const toggleAllRowsSelected = React.useCallback(\n    value => dispatch({ type: actions.toggleAllRowsSelected, value }),\n    [dispatch]\n  )\n\n  const toggleAllPageRowsSelected = React.useCallback(\n    value => dispatch({ type: actions.toggleAllPageRowsSelected, value }),\n    [dispatch]\n  )\n\n  const toggleRowSelected = React.useCallback(\n    (id, value) => dispatch({ type: actions.toggleRowSelected, id, value }),\n    [dispatch]\n  )\n\n  const getInstance = useGetLatest(instance)\n\n  const getToggleAllRowsSelectedProps = makePropGetter(\n    getHooks().getToggleAllRowsSelectedProps,\n    { instance: getInstance() }\n  )\n\n  const getToggleAllPageRowsSelectedProps = makePropGetter(\n    getHooks().getToggleAllPageRowsSelectedProps,\n    { instance: getInstance() }\n  )\n\n  Object.assign(instance, {\n    selectedFlatRows,\n    isAllRowsSelected,\n    isAllPageRowsSelected,\n    toggleRowSelected,\n    toggleAllRowsSelected,\n    getToggleAllRowsSelectedProps,\n    getToggleAllPageRowsSelectedProps,\n    toggleAllPageRowsSelected,\n  })\n}\n\nfunction prepareRow(row, { instance }) {\n  row.toggleRowSelected = set => instance.toggleRowSelected(row.id, set)\n\n  row.getToggleRowSelectedProps = makePropGetter(\n    instance.getHooks().getToggleRowSelectedProps,\n    { instance: instance, row }\n  )\n}\n\nfunction getRowIsSelected(row, selectedRowIds, getSubRows) {\n  if (selectedRowIds[row.id]) {\n    return true\n  }\n\n  const subRows = getSubRows(row)\n\n  if (subRows && subRows.length) {\n    let allChildrenSelected = true\n    let someSelected = false\n\n    subRows.forEach(subRow => {\n      // Bail out early if we know both of these\n      if (someSelected && !allChildrenSelected) {\n        return\n      }\n\n      if (getRowIsSelected(subRow, selectedRowIds, getSubRows)) {\n        someSelected = true\n      } else {\n        allChildrenSelected = false\n      }\n    })\n    return allChildrenSelected ? true : someSelected ? null : false\n  }\n\n  return false\n}\n","import React from 'react'\n\nimport {\n  actions,\n  functionalUpdate,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nconst defaultInitialRowStateAccessor = row => ({})\nconst defaultInitialCellStateAccessor = cell => ({})\n\n// Actions\nactions.setRowState = 'setRowState'\nactions.setCellState = 'setCellState'\nactions.resetRowState = 'resetRowState'\n\nexport const useRowState = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseRowState.pluginName = 'useRowState'\n\nfunction reducer(state, action, previousState, instance) {\n  const {\n    initialRowStateAccessor = defaultInitialRowStateAccessor,\n    initialCellStateAccessor = defaultInitialCellStateAccessor,\n    rowsById,\n  } = instance\n\n  if (action.type === actions.init) {\n    return {\n      rowState: {},\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetRowState) {\n    return {\n      ...state,\n      rowState: instance.initialState.rowState || {},\n    }\n  }\n\n  if (action.type === actions.setRowState) {\n    const { rowId, value } = action\n\n    const oldRowState =\n      typeof state.rowState[rowId] !== 'undefined'\n        ? state.rowState[rowId]\n        : initialRowStateAccessor(rowsById[rowId])\n\n    return {\n      ...state,\n      rowState: {\n        ...state.rowState,\n        [rowId]: functionalUpdate(value, oldRowState),\n      },\n    }\n  }\n\n  if (action.type === actions.setCellState) {\n    const { rowId, columnId, value } = action\n\n    const oldRowState =\n      typeof state.rowState[rowId] !== 'undefined'\n        ? state.rowState[rowId]\n        : initialRowStateAccessor(rowsById[rowId])\n\n    const oldCellState =\n      typeof oldRowState?.cellState?.[columnId] !== 'undefined'\n        ? oldRowState.cellState[columnId]\n        : initialCellStateAccessor(\n            rowsById[rowId]?.cells?.find(cell => cell.column.id === columnId)\n          )\n\n    return {\n      ...state,\n      rowState: {\n        ...state.rowState,\n        [rowId]: {\n          ...oldRowState,\n          cellState: {\n            ...(oldRowState.cellState || {}),\n            [columnId]: functionalUpdate(value, oldCellState),\n          },\n        },\n      },\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const { autoResetRowState = true, data, dispatch } = instance\n\n  const setRowState = React.useCallback(\n    (rowId, value) =>\n      dispatch({\n        type: actions.setRowState,\n        rowId,\n        value,\n      }),\n    [dispatch]\n  )\n\n  const setCellState = React.useCallback(\n    (rowId, columnId, value) =>\n      dispatch({\n        type: actions.setCellState,\n        rowId,\n        columnId,\n        value,\n      }),\n    [dispatch]\n  )\n\n  const getAutoResetRowState = useGetLatest(autoResetRowState)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetRowState()) {\n      dispatch({ type: actions.resetRowState })\n    }\n  }, [data])\n\n  Object.assign(instance, {\n    setRowState,\n    setCellState,\n  })\n}\n\nfunction prepareRow(row, { instance }) {\n  const {\n    initialRowStateAccessor = defaultInitialRowStateAccessor,\n    initialCellStateAccessor = defaultInitialCellStateAccessor,\n    state: { rowState },\n  } = instance\n\n  if (row) {\n    row.state =\n      typeof rowState[row.id] !== 'undefined'\n        ? rowState[row.id]\n        : initialRowStateAccessor(row)\n\n    row.setState = updater => {\n      return instance.setRowState(row.id, updater)\n    }\n\n    row.cells.forEach(cell => {\n      if (!row.state.cellState) {\n        row.state.cellState = {}\n      }\n\n      cell.state =\n        typeof row.state.cellState[cell.column.id] !== 'undefined'\n          ? row.state.cellState[cell.column.id]\n          : initialCellStateAccessor(cell)\n\n      cell.setState = updater => {\n        return instance.setCellState(row.id, cell.column.id, updater)\n      }\n    })\n  }\n}\n","import React from 'react'\n\nimport { functionalUpdate, actions } from '../publicUtils'\n\n// Actions\nactions.resetColumnOrder = 'resetColumnOrder'\nactions.setColumnOrder = 'setColumnOrder'\n\nexport const useColumnOrder = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.visibleColumnsDeps.push((deps, { instance }) => {\n    return [...deps, instance.state.columnOrder]\n  })\n  hooks.visibleColumns.push(visibleColumns)\n  hooks.useInstance.push(useInstance)\n}\n\nuseColumnOrder.pluginName = 'useColumnOrder'\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      columnOrder: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetColumnOrder) {\n    return {\n      ...state,\n      columnOrder: instance.initialState.columnOrder || [],\n    }\n  }\n\n  if (action.type === actions.setColumnOrder) {\n    return {\n      ...state,\n      columnOrder: functionalUpdate(action.columnOrder, state.columnOrder),\n    }\n  }\n}\n\nfunction visibleColumns(\n  columns,\n  {\n    instance: {\n      state: { columnOrder },\n    },\n  }\n) {\n  // If there is no order, return the normal columns\n  if (!columnOrder || !columnOrder.length) {\n    return columns\n  }\n\n  const columnOrderCopy = [...columnOrder]\n\n  // If there is an order, make a copy of the columns\n  const columnsCopy = [...columns]\n\n  // And make a new ordered array of the columns\n  const columnsInOrder = []\n\n  // Loop over the columns and place them in order into the new array\n  while (columnsCopy.length && columnOrderCopy.length) {\n    const targetColumnId = columnOrderCopy.shift()\n    const foundIndex = columnsCopy.findIndex(d => d.id === targetColumnId)\n    if (foundIndex > -1) {\n      columnsInOrder.push(columnsCopy.splice(foundIndex, 1)[0])\n    }\n  }\n\n  // If there are any columns left, add them to the end\n  return [...columnsInOrder, ...columnsCopy]\n}\n\nfunction useInstance(instance) {\n  const { dispatch } = instance\n\n  instance.setColumnOrder = React.useCallback(\n    columnOrder => {\n      return dispatch({ type: actions.setColumnOrder, columnOrder })\n    },\n    [dispatch]\n  )\n}\n","import React from 'react'\n\nimport {\n  actions,\n  defaultColumn,\n  makePropGetter,\n  useGetLatest,\n  ensurePluginOrder,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nimport { getFirstDefined, passiveEventSupported } from '../utils'\n\n// Default Column\ndefaultColumn.canResize = true\n\n// Actions\nactions.columnStartResizing = 'columnStartResizing'\nactions.columnResizing = 'columnResizing'\nactions.columnDoneResizing = 'columnDoneResizing'\nactions.resetResize = 'resetResize'\n\nexport const useResizeColumns = hooks => {\n  hooks.getResizerProps = [defaultGetResizerProps]\n  hooks.getHeaderProps.push({\n    style: {\n      position: 'relative',\n    },\n  })\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.useInstanceBeforeDimensions.push(useInstanceBeforeDimensions)\n}\n\nconst defaultGetResizerProps = (props, { instance, header }) => {\n  const { dispatch } = instance\n\n  const onResizeStart = (e, header) => {\n    let isTouchEvent = false\n    if (e.type === 'touchstart') {\n      // lets not respond to multiple touches (e.g. 2 or 3 fingers)\n      if (e.touches && e.touches.length > 1) {\n        return\n      }\n      isTouchEvent = true\n    }\n    const headersToResize = getLeafHeaders(header)\n    const headerIdWidths = headersToResize.map(d => [d.id, d.totalWidth])\n\n    const clientX = isTouchEvent ? Math.round(e.touches[0].clientX) : e.clientX\n\n    let raf\n    let mostRecentClientX\n\n    const dispatchEnd = () => {\n      window.cancelAnimationFrame(raf)\n      raf = null\n      dispatch({ type: actions.columnDoneResizing })\n    }\n    const dispatchMove = () => {\n      window.cancelAnimationFrame(raf)\n      raf = null\n      dispatch({ type: actions.columnResizing, clientX: mostRecentClientX })\n    }\n\n    const scheduleDispatchMoveOnNextAnimationFrame = clientXPos => {\n      mostRecentClientX = clientXPos\n      if (!raf) {\n        raf = window.requestAnimationFrame(dispatchMove)\n      }\n    }\n\n    const handlersAndEvents = {\n      mouse: {\n        moveEvent: 'mousemove',\n        moveHandler: e => scheduleDispatchMoveOnNextAnimationFrame(e.clientX),\n        upEvent: 'mouseup',\n        upHandler: e => {\n          document.removeEventListener(\n            'mousemove',\n            handlersAndEvents.mouse.moveHandler\n          )\n          document.removeEventListener(\n            'mouseup',\n            handlersAndEvents.mouse.upHandler\n          )\n          dispatchEnd()\n        },\n      },\n      touch: {\n        moveEvent: 'touchmove',\n        moveHandler: e => {\n          if (e.cancelable) {\n            e.preventDefault()\n            e.stopPropagation()\n          }\n          scheduleDispatchMoveOnNextAnimationFrame(e.touches[0].clientX)\n          return false\n        },\n        upEvent: 'touchend',\n        upHandler: e => {\n          document.removeEventListener(\n            handlersAndEvents.touch.moveEvent,\n            handlersAndEvents.touch.moveHandler\n          )\n          document.removeEventListener(\n            handlersAndEvents.touch.upEvent,\n            handlersAndEvents.touch.moveHandler\n          )\n          dispatchEnd()\n        },\n      },\n    }\n\n    const events = isTouchEvent\n      ? handlersAndEvents.touch\n      : handlersAndEvents.mouse\n    const passiveIfSupported = passiveEventSupported()\n      ? { passive: false }\n      : false\n    document.addEventListener(\n      events.moveEvent,\n      events.moveHandler,\n      passiveIfSupported\n    )\n    document.addEventListener(\n      events.upEvent,\n      events.upHandler,\n      passiveIfSupported\n    )\n\n    dispatch({\n      type: actions.columnStartResizing,\n      columnId: header.id,\n      columnWidth: header.totalWidth,\n      headerIdWidths,\n      clientX,\n    })\n  }\n\n  return [\n    props,\n    {\n      onMouseDown: e => e.persist() || onResizeStart(e, header),\n      onTouchStart: e => e.persist() || onResizeStart(e, header),\n      style: {\n        cursor: 'col-resize',\n      },\n      draggable: false,\n      role: 'separator',\n    },\n  ]\n}\n\nuseResizeColumns.pluginName = 'useResizeColumns'\n\nfunction reducer(state, action) {\n  if (action.type === actions.init) {\n    return {\n      columnResizing: {\n        columnWidths: {},\n      },\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetResize) {\n    return {\n      ...state,\n      columnResizing: {\n        columnWidths: {},\n      },\n    }\n  }\n\n  if (action.type === actions.columnStartResizing) {\n    const { clientX, columnId, columnWidth, headerIdWidths } = action\n\n    return {\n      ...state,\n      columnResizing: {\n        ...state.columnResizing,\n        startX: clientX,\n        headerIdWidths,\n        columnWidth,\n        isResizingColumn: columnId,\n      },\n    }\n  }\n\n  if (action.type === actions.columnResizing) {\n    const { clientX } = action\n    const { startX, columnWidth, headerIdWidths = [] } = state.columnResizing\n\n    const deltaX = clientX - startX\n    const percentageDeltaX = deltaX / columnWidth\n\n    const newColumnWidths = {}\n\n    headerIdWidths.forEach(([headerId, headerWidth]) => {\n      newColumnWidths[headerId] = Math.max(\n        headerWidth + headerWidth * percentageDeltaX,\n        0\n      )\n    })\n\n    return {\n      ...state,\n      columnResizing: {\n        ...state.columnResizing,\n        columnWidths: {\n          ...state.columnResizing.columnWidths,\n          ...newColumnWidths,\n        },\n      },\n    }\n  }\n\n  if (action.type === actions.columnDoneResizing) {\n    return {\n      ...state,\n      columnResizing: {\n        ...state.columnResizing,\n        startX: null,\n        isResizingColumn: null,\n      },\n    }\n  }\n}\n\nconst useInstanceBeforeDimensions = instance => {\n  const {\n    flatHeaders,\n    disableResizing,\n    getHooks,\n    state: { columnResizing },\n  } = instance\n\n  const getInstance = useGetLatest(instance)\n\n  flatHeaders.forEach(header => {\n    const canResize = getFirstDefined(\n      header.disableResizing === true ? false : undefined,\n      disableResizing === true ? false : undefined,\n      true\n    )\n\n    header.canResize = canResize\n    header.width =\n      columnResizing.columnWidths[header.id] ||\n      header.originalWidth ||\n      header.width\n    header.isResizing = columnResizing.isResizingColumn === header.id\n\n    if (canResize) {\n      header.getResizerProps = makePropGetter(getHooks().getResizerProps, {\n        instance: getInstance(),\n        header,\n      })\n    }\n  })\n}\n\nfunction useInstance(instance) {\n  const { plugins, dispatch, autoResetResize = true, columns } = instance\n\n  ensurePluginOrder(plugins, ['useAbsoluteLayout'], 'useResizeColumns')\n\n  const getAutoResetResize = useGetLatest(autoResetResize)\n  useMountedLayoutEffect(() => {\n    if (getAutoResetResize()) {\n      dispatch({ type: actions.resetResize })\n    }\n  }, [columns])\n\n  const resetResizing = React.useCallback(\n    () => dispatch({ type: actions.resetResize }),\n    [dispatch]\n  )\n\n  Object.assign(instance, {\n    resetResizing,\n  })\n}\n\nfunction getLeafHeaders(header) {\n  const leafHeaders = []\n  const recurseHeader = header => {\n    if (header.columns && header.columns.length) {\n      header.columns.map(recurseHeader)\n    }\n    leafHeaders.push(header)\n  }\n  recurseHeader(header)\n  return leafHeaders\n}\n","const cellStyles = {\n  position: 'absolute',\n  top: 0,\n}\n\nexport const useAbsoluteLayout = hooks => {\n  hooks.getTableBodyProps.push(getRowStyles)\n  hooks.getRowProps.push(getRowStyles)\n  hooks.getHeaderGroupProps.push(getRowStyles)\n  hooks.getFooterGroupProps.push(getRowStyles)\n\n  hooks.getHeaderProps.push((props, { column }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        left: `${column.totalLeft}px`,\n        width: `${column.totalWidth}px`,\n      },\n    },\n  ])\n\n  hooks.getCellProps.push((props, { cell }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        left: `${cell.column.totalLeft}px`,\n        width: `${cell.column.totalWidth}px`,\n      },\n    },\n  ])\n\n  hooks.getFooterProps.push((props, { column }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        left: `${column.totalLeft}px`,\n        width: `${column.totalWidth}px`,\n      },\n    },\n  ])\n}\n\nuseAbsoluteLayout.pluginName = 'useAbsoluteLayout'\n\nconst getRowStyles = (props, { instance }) => [\n  props,\n  {\n    style: {\n      position: 'relative',\n      width: `${instance.totalColumnsWidth}px`,\n    },\n  },\n]\n","const cellStyles = {\n  display: 'inline-block',\n  boxSizing: 'border-box',\n}\n\nconst getRowStyles = (props, { instance }) => [\n  props,\n  {\n    style: {\n      display: 'flex',\n      width: `${instance.totalColumnsWidth}px`,\n    },\n  },\n]\n\nexport const useBlockLayout = hooks => {\n  hooks.getRowProps.push(getRowStyles)\n  hooks.getHeaderGroupProps.push(getRowStyles)\n  hooks.getFooterGroupProps.push(getRowStyles)\n\n  hooks.getHeaderProps.push((props, { column }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        width: `${column.totalWidth}px`,\n      },\n    },\n  ])\n\n  hooks.getCellProps.push((props, { cell }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        width: `${cell.column.totalWidth}px`,\n      },\n    },\n  ])\n\n  hooks.getFooterProps.push((props, { column }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        width: `${column.totalWidth}px`,\n      },\n    },\n  ])\n}\n\nuseBlockLayout.pluginName = 'useBlockLayout'\n","export function useFlexLayout(hooks) {\n  hooks.getTableProps.push(getTableProps)\n  hooks.getRowProps.push(getRowStyles)\n  hooks.getHeaderGroupProps.push(getRowStyles)\n  hooks.getFooterGroupProps.push(getRowStyles)\n  hooks.getHeaderProps.push(getHeaderProps)\n  hooks.getCellProps.push(getCellProps)\n  hooks.getFooterProps.push(getFooterProps)\n}\n\nuseFlexLayout.pluginName = 'useFlexLayout'\n\nconst getTableProps = (props, { instance }) => [\n  props,\n  {\n    style: {\n      minWidth: `${instance.totalColumnsMinWidth}px`,\n    },\n  },\n]\n\nconst getRowStyles = (props, { instance }) => [\n  props,\n  {\n    style: {\n      display: 'flex',\n      flex: '1 0 auto',\n      minWidth: `${instance.totalColumnsMinWidth}px`,\n    },\n  },\n]\n\nconst getHeaderProps = (props, { column }) => [\n  props,\n  {\n    style: {\n      boxSizing: 'border-box',\n      flex: column.totalFlexWidth\n        ? `${column.totalFlexWidth} 0 auto`\n        : undefined,\n      minWidth: `${column.totalMinWidth}px`,\n      width: `${column.totalWidth}px`,\n    },\n  },\n]\n\nconst getCellProps = (props, { cell }) => [\n  props,\n  {\n    style: {\n      boxSizing: 'border-box',\n      flex: `${cell.column.totalFlexWidth} 0 auto`,\n      minWidth: `${cell.column.totalMinWidth}px`,\n      width: `${cell.column.totalWidth}px`,\n    },\n  },\n]\n\nconst getFooterProps = (props, { column }) => [\n  props,\n  {\n    style: {\n      boxSizing: 'border-box',\n      flex: column.totalFlexWidth\n        ? `${column.totalFlexWidth} 0 auto`\n        : undefined,\n      minWidth: `${column.totalMinWidth}px`,\n      width: `${column.totalWidth}px`,\n    },\n  },\n]\n","import { actions } from '../publicUtils'\n\n// Actions\nactions.columnStartResizing = 'columnStartResizing'\nactions.columnResizing = 'columnResizing'\nactions.columnDoneResizing = 'columnDoneResizing'\nactions.resetResize = 'resetResize'\n\nexport function useGridLayout(hooks) {\n  hooks.stateReducers.push(reducer)\n  hooks.getTableProps.push(getTableProps)\n  hooks.getHeaderProps.push(getHeaderProps)\n  hooks.getRowProps.push(getRowProps)\n}\n\nuseGridLayout.pluginName = 'useGridLayout'\n\nconst getTableProps = (props, { instance }) => {\n  const gridTemplateColumns = instance.visibleColumns.map(column => {\n    if (instance.state.gridLayout.columnWidths[column.id])\n      return `${instance.state.gridLayout.columnWidths[column.id]}px`\n    // When resizing, lock the width of all unset columns\n    // instead of using user-provided width or defaultColumn width,\n    // which could potentially be 'auto' or 'fr' units that don't scale linearly\n    if (instance.state.columnResizing?.isResizingColumn)\n      return `${instance.state.gridLayout.startWidths[column.id]}px`\n    if (typeof column.width === 'number') return `${column.width}px`\n    return column.width\n  })\n  return [\n    props,\n    {\n      style: {\n        display: `grid`,\n        gridTemplateColumns: gridTemplateColumns.join(` `),\n      },\n    },\n  ]\n}\n\nconst getHeaderProps = (props, { column }) => [\n  props,\n  {\n    id: `header-cell-${column.id}`,\n    style: {\n      position: `sticky`, //enables a scroll wrapper to be placed around the table and have sticky headers\n      gridColumn: `span ${column.totalVisibleHeaderCount}`,\n    },\n  },\n]\n\nconst getRowProps = (props, { row }) => {\n  if (row.isExpanded) {\n    return [\n      props,\n      {\n        style: {\n          gridColumn: `1 / ${row.cells.length + 1}`,\n        },\n      },\n    ]\n  }\n  return [props, {}]\n}\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      gridLayout: {\n        columnWidths: {},\n      },\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetResize) {\n    return {\n      ...state,\n      gridLayout: {\n        columnWidths: {},\n      },\n    }\n  }\n\n  if (action.type === actions.columnStartResizing) {\n    const { columnId, headerIdWidths } = action\n    const columnWidth = getElementWidth(columnId)\n\n    if (columnWidth !== undefined) {\n      const startWidths = instance.visibleColumns.reduce(\n        (acc, column) => ({\n          ...acc,\n          [column.id]: getElementWidth(column.id),\n        }),\n        {}\n      )\n      const minWidths = instance.visibleColumns.reduce(\n        (acc, column) => ({\n          ...acc,\n          [column.id]: column.minWidth,\n        }),\n        {}\n      )\n      const maxWidths = instance.visibleColumns.reduce(\n        (acc, column) => ({\n          ...acc,\n          [column.id]: column.maxWidth,\n        }),\n        {}\n      )\n\n      const headerIdGridWidths = headerIdWidths.map(([headerId]) => [\n        headerId,\n        getElementWidth(headerId),\n      ])\n\n      return {\n        ...state,\n        gridLayout: {\n          ...state.gridLayout,\n          startWidths,\n          minWidths,\n          maxWidths,\n          headerIdGridWidths,\n          columnWidth,\n        },\n      }\n    } else {\n      return state\n    }\n  }\n\n  if (action.type === actions.columnResizing) {\n    const { clientX } = action\n    const { startX } = state.columnResizing\n    const {\n      columnWidth,\n      minWidths,\n      maxWidths,\n      headerIdGridWidths = [],\n    } = state.gridLayout\n\n    const deltaX = clientX - startX\n    const percentageDeltaX = deltaX / columnWidth\n\n    const newColumnWidths = {}\n\n    headerIdGridWidths.forEach(([headerId, headerWidth]) => {\n      newColumnWidths[headerId] = Math.min(\n        Math.max(\n          minWidths[headerId],\n          headerWidth + headerWidth * percentageDeltaX\n        ),\n        maxWidths[headerId]\n      )\n    })\n\n    return {\n      ...state,\n      gridLayout: {\n        ...state.gridLayout,\n        columnWidths: {\n          ...state.gridLayout.columnWidths,\n          ...newColumnWidths,\n        },\n      },\n    }\n  }\n\n  if (action.type === actions.columnDoneResizing) {\n    return {\n      ...state,\n      gridLayout: {\n        ...state.gridLayout,\n        startWidths: {},\n        minWidths: {},\n        maxWidths: {},\n      },\n    }\n  }\n}\n\nfunction getElementWidth(columnId) {\n  const width = document.getElementById(`header-cell-${columnId}`)?.offsetWidth\n\n  if (width !== undefined) {\n    return width\n  }\n}\n","var _typeof = require(\"./typeof.js\")[\"default\"];\n\nfunction _regeneratorRuntime() {\n  \"use strict\";\n  /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n\n  module.exports = _regeneratorRuntime = function _regeneratorRuntime() {\n    return exports;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  var exports = {},\n      Op = Object.prototype,\n      hasOwn = Op.hasOwnProperty,\n      $Symbol = \"function\" == typeof Symbol ? Symbol : {},\n      iteratorSymbol = $Symbol.iterator || \"@@iterator\",\n      asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\",\n      toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    return Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), obj[key];\n  }\n\n  try {\n    define({}, \"\");\n  } catch (err) {\n    define = function define(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator,\n        generator = Object.create(protoGenerator.prototype),\n        context = new Context(tryLocsList || []);\n    return generator._invoke = function (innerFn, self, context) {\n      var state = \"suspendedStart\";\n      return function (method, arg) {\n        if (\"executing\" === state) throw new Error(\"Generator is already running\");\n\n        if (\"completed\" === state) {\n          if (\"throw\" === method) throw arg;\n          return doneResult();\n        }\n\n        for (context.method = method, context.arg = arg;;) {\n          var delegate = context.delegate;\n\n          if (delegate) {\n            var delegateResult = maybeInvokeDelegate(delegate, context);\n\n            if (delegateResult) {\n              if (delegateResult === ContinueSentinel) continue;\n              return delegateResult;\n            }\n          }\n\n          if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) {\n            if (\"suspendedStart\" === state) throw state = \"completed\", context.arg;\n            context.dispatchException(context.arg);\n          } else \"return\" === context.method && context.abrupt(\"return\", context.arg);\n          state = \"executing\";\n          var record = tryCatch(innerFn, self, context);\n\n          if (\"normal\" === record.type) {\n            if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue;\n            return {\n              value: record.arg,\n              done: context.done\n            };\n          }\n\n          \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg);\n        }\n      };\n    }(innerFn, self, context), generator;\n  }\n\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n\n  exports.wrap = wrap;\n  var ContinueSentinel = {};\n\n  function Generator() {}\n\n  function GeneratorFunction() {}\n\n  function GeneratorFunctionPrototype() {}\n\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n  var getProto = Object.getPrototypeOf,\n      NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype);\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      define(prototype, method, function (arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n\n      if (\"throw\" !== record.type) {\n        var result = record.arg,\n            value = result.value;\n        return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) {\n          invoke(\"next\", value, resolve, reject);\n        }, function (err) {\n          invoke(\"throw\", err, resolve, reject);\n        }) : PromiseImpl.resolve(value).then(function (unwrapped) {\n          result.value = unwrapped, resolve(result);\n        }, function (error) {\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n\n      reject(record.arg);\n    }\n\n    var previousPromise;\n\n    this._invoke = function (method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function (resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n    };\n  }\n\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n\n    if (undefined === method) {\n      if (context.delegate = null, \"throw\" === context.method) {\n        if (delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel;\n        context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n    if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel;\n    var info = record.arg;\n    return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel);\n  }\n\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n    1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\", delete record.arg, entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0);\n  }\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) return iteratorMethod.call(iterable);\n      if (\"function\" == typeof iterable.next) return iterable;\n\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n            next = function next() {\n          for (; ++i < iterable.length;) {\n            if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next;\n          }\n\n          return next.value = undefined, next.done = !0, next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    return {\n      next: doneResult\n    };\n  }\n\n  function doneResult() {\n    return {\n      value: undefined,\n      done: !0\n    };\n  }\n\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) {\n    var ctor = \"function\" == typeof genFun && genFun.constructor;\n    return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name));\n  }, exports.mark = function (genFun) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun;\n  }, exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    void 0 === PromiseImpl && (PromiseImpl = Promise);\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n    return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () {\n    return this;\n  }), define(Gp, \"toString\", function () {\n    return \"[object Generator]\";\n  }), exports.keys = function (object) {\n    var keys = [];\n\n    for (var key in object) {\n      keys.push(key);\n    }\n\n    return keys.reverse(), function next() {\n      for (; keys.length;) {\n        var key = keys.pop();\n        if (key in object) return next.value = key, next.done = !1, next;\n      }\n\n      return next.done = !0, next;\n    };\n  }, exports.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function reset(skipTempReset) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) {\n        \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined);\n      }\n    },\n    stop: function stop() {\n      this.done = !0;\n      var rootRecord = this.tryEntries[0].completion;\n      if (\"throw\" === rootRecord.type) throw rootRecord.arg;\n      return this.rval;\n    },\n    dispatchException: function dispatchException(exception) {\n      if (this.done) throw exception;\n      var context = this;\n\n      function handle(loc, caught) {\n        return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i],\n            record = entry.completion;\n        if (\"root\" === entry.tryLoc) return handle(\"end\");\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\"),\n              hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n          } else {\n            if (!hasFinally) throw new Error(\"try statement without catch or finally\");\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null);\n      var record = finallyEntry ? finallyEntry.completion : {};\n      return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record);\n    },\n    complete: function complete(record, afterLoc) {\n      if (\"throw\" === record.type) throw record.arg;\n      return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel;\n    },\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel;\n      }\n    },\n    \"catch\": function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n\n          if (\"throw\" === record.type) {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n\n          return thrown;\n        }\n      }\n\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      return this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel;\n    }\n  }, exports;\n}\n\nmodule.exports = _regeneratorRuntime, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;"],"sourceRoot":""}